

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Thu Sep 28 14:37:31 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F1937
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 1.42
    34                           ; Generated 13/04/2017 GMT
    35                           ; 
    36                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F1937 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0110                     	;# 
   122  0111                     	;# 
   123  0112                     	;# 
   124  0113                     	;# 
   125  0114                     	;# 
   126  0115                     	;# 
   127  0116                     	;# 
   128  0117                     	;# 
   129  0118                     	;# 
   130  0119                     	;# 
   131  011A                     	;# 
   132  011B                     	;# 
   133  011D                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  018F                     	;# 
   137  0190                     	;# 
   138  0191                     	;# 
   139  0191                     	;# 
   140  0192                     	;# 
   141  0193                     	;# 
   142  0193                     	;# 
   143  0193                     	;# 
   144  0194                     	;# 
   145  0195                     	;# 
   146  0196                     	;# 
   147  0199                     	;# 
   148  019A                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019B                     	;# 
   153  019C                     	;# 
   154  019C                     	;# 
   155  019D                     	;# 
   156  019E                     	;# 
   157  019F                     	;# 
   158  020D                     	;# 
   159  0210                     	;# 
   160  0211                     	;# 
   161  0212                     	;# 
   162  0213                     	;# 
   163  0214                     	;# 
   164  0215                     	;# 
   165  0215                     	;# 
   166  0216                     	;# 
   167  0217                     	;# 
   168  0291                     	;# 
   169  0291                     	;# 
   170  0292                     	;# 
   171  0293                     	;# 
   172  0294                     	;# 
   173  0295                     	;# 
   174  0295                     	;# 
   175  0296                     	;# 
   176  0298                     	;# 
   177  0298                     	;# 
   178  0299                     	;# 
   179  029A                     	;# 
   180  029B                     	;# 
   181  029C                     	;# 
   182  029C                     	;# 
   183  029D                     	;# 
   184  029E                     	;# 
   185  029F                     	;# 
   186  0311                     	;# 
   187  0311                     	;# 
   188  0312                     	;# 
   189  0313                     	;# 
   190  0314                     	;# 
   191  0315                     	;# 
   192  0315                     	;# 
   193  0316                     	;# 
   194  0318                     	;# 
   195  0318                     	;# 
   196  0319                     	;# 
   197  031A                     	;# 
   198  031C                     	;# 
   199  031C                     	;# 
   200  031D                     	;# 
   201  031E                     	;# 
   202  0394                     	;# 
   203  0395                     	;# 
   204  0396                     	;# 
   205  0415                     	;# 
   206  0416                     	;# 
   207  0417                     	;# 
   208  041C                     	;# 
   209  041D                     	;# 
   210  041E                     	;# 
   211  0791                     	;# 
   212  0792                     	;# 
   213  0793                     	;# 
   214  0794                     	;# 
   215  0795                     	;# 
   216  0798                     	;# 
   217  0799                     	;# 
   218  079A                     	;# 
   219  07A0                     	;# 
   220  07A1                     	;# 
   221  07A2                     	;# 
   222  07A3                     	;# 
   223  07A4                     	;# 
   224  07A5                     	;# 
   225  07A6                     	;# 
   226  07A7                     	;# 
   227  07A8                     	;# 
   228  07A9                     	;# 
   229  07AA                     	;# 
   230  07AB                     	;# 
   231  0FE4                     	;# 
   232  0FE5                     	;# 
   233  0FE6                     	;# 
   234  0FE7                     	;# 
   235  0FE8                     	;# 
   236  0FE9                     	;# 
   237  0FEA                     	;# 
   238  0FEB                     	;# 
   239  0FED                     	;# 
   240  0FEE                     	;# 
   241  0FEF                     	;# 
   242  0000                     	;# 
   243  0001                     	;# 
   244  0002                     	;# 
   245  0003                     	;# 
   246  0004                     	;# 
   247  0005                     	;# 
   248  0006                     	;# 
   249  0007                     	;# 
   250  0008                     	;# 
   251  0009                     	;# 
   252  000A                     	;# 
   253  000B                     	;# 
   254  000C                     	;# 
   255  000D                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0015                     	;# 
   263  0016                     	;# 
   264  0016                     	;# 
   265  0017                     	;# 
   266  0018                     	;# 
   267  0019                     	;# 
   268  001A                     	;# 
   269  001B                     	;# 
   270  001C                     	;# 
   271  001E                     	;# 
   272  001F                     	;# 
   273  008C                     	;# 
   274  008D                     	;# 
   275  008E                     	;# 
   276  008F                     	;# 
   277  0090                     	;# 
   278  0091                     	;# 
   279  0092                     	;# 
   280  0093                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009A                     	;# 
   287  009B                     	;# 
   288  009B                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  010C                     	;# 
   293  010D                     	;# 
   294  010E                     	;# 
   295  010F                     	;# 
   296  0110                     	;# 
   297  0111                     	;# 
   298  0112                     	;# 
   299  0113                     	;# 
   300  0114                     	;# 
   301  0115                     	;# 
   302  0116                     	;# 
   303  0117                     	;# 
   304  0118                     	;# 
   305  0119                     	;# 
   306  011A                     	;# 
   307  011B                     	;# 
   308  011D                     	;# 
   309  018C                     	;# 
   310  018D                     	;# 
   311  018F                     	;# 
   312  0190                     	;# 
   313  0191                     	;# 
   314  0191                     	;# 
   315  0192                     	;# 
   316  0193                     	;# 
   317  0193                     	;# 
   318  0193                     	;# 
   319  0194                     	;# 
   320  0195                     	;# 
   321  0196                     	;# 
   322  0199                     	;# 
   323  019A                     	;# 
   324  019B                     	;# 
   325  019B                     	;# 
   326  019B                     	;# 
   327  019B                     	;# 
   328  019C                     	;# 
   329  019C                     	;# 
   330  019D                     	;# 
   331  019E                     	;# 
   332  019F                     	;# 
   333  020D                     	;# 
   334  0210                     	;# 
   335  0211                     	;# 
   336  0212                     	;# 
   337  0213                     	;# 
   338  0214                     	;# 
   339  0215                     	;# 
   340  0215                     	;# 
   341  0216                     	;# 
   342  0217                     	;# 
   343  0291                     	;# 
   344  0291                     	;# 
   345  0292                     	;# 
   346  0293                     	;# 
   347  0294                     	;# 
   348  0295                     	;# 
   349  0295                     	;# 
   350  0296                     	;# 
   351  0298                     	;# 
   352  0298                     	;# 
   353  0299                     	;# 
   354  029A                     	;# 
   355  029B                     	;# 
   356  029C                     	;# 
   357  029C                     	;# 
   358  029D                     	;# 
   359  029E                     	;# 
   360  029F                     	;# 
   361  0311                     	;# 
   362  0311                     	;# 
   363  0312                     	;# 
   364  0313                     	;# 
   365  0314                     	;# 
   366  0315                     	;# 
   367  0315                     	;# 
   368  0316                     	;# 
   369  0318                     	;# 
   370  0318                     	;# 
   371  0319                     	;# 
   372  031A                     	;# 
   373  031C                     	;# 
   374  031C                     	;# 
   375  031D                     	;# 
   376  031E                     	;# 
   377  0394                     	;# 
   378  0395                     	;# 
   379  0396                     	;# 
   380  0415                     	;# 
   381  0416                     	;# 
   382  0417                     	;# 
   383  041C                     	;# 
   384  041D                     	;# 
   385  041E                     	;# 
   386  0791                     	;# 
   387  0792                     	;# 
   388  0793                     	;# 
   389  0794                     	;# 
   390  0795                     	;# 
   391  0798                     	;# 
   392  0799                     	;# 
   393  079A                     	;# 
   394  07A0                     	;# 
   395  07A1                     	;# 
   396  07A2                     	;# 
   397  07A3                     	;# 
   398  07A4                     	;# 
   399  07A5                     	;# 
   400  07A6                     	;# 
   401  07A7                     	;# 
   402  07A8                     	;# 
   403  07A9                     	;# 
   404  07AA                     	;# 
   405  07AB                     	;# 
   406  0FE4                     	;# 
   407  0FE5                     	;# 
   408  0FE6                     	;# 
   409  0FE7                     	;# 
   410  0FE8                     	;# 
   411  0FE9                     	;# 
   412  0FEA                     	;# 
   413  0FEB                     	;# 
   414  0FED                     	;# 
   415  0FEE                     	;# 
   416  0FEF                     	;# 
   417  0000                     	;# 
   418  0001                     	;# 
   419  0002                     	;# 
   420  0003                     	;# 
   421  0004                     	;# 
   422  0005                     	;# 
   423  0006                     	;# 
   424  0007                     	;# 
   425  0008                     	;# 
   426  0009                     	;# 
   427  000A                     	;# 
   428  000B                     	;# 
   429  000C                     	;# 
   430  000D                     	;# 
   431  000E                     	;# 
   432  000F                     	;# 
   433  0010                     	;# 
   434  0011                     	;# 
   435  0012                     	;# 
   436  0013                     	;# 
   437  0015                     	;# 
   438  0016                     	;# 
   439  0016                     	;# 
   440  0017                     	;# 
   441  0018                     	;# 
   442  0019                     	;# 
   443  001A                     	;# 
   444  001B                     	;# 
   445  001C                     	;# 
   446  001E                     	;# 
   447  001F                     	;# 
   448  008C                     	;# 
   449  008D                     	;# 
   450  008E                     	;# 
   451  008F                     	;# 
   452  0090                     	;# 
   453  0091                     	;# 
   454  0092                     	;# 
   455  0093                     	;# 
   456  0095                     	;# 
   457  0096                     	;# 
   458  0097                     	;# 
   459  0098                     	;# 
   460  0099                     	;# 
   461  009A                     	;# 
   462  009B                     	;# 
   463  009B                     	;# 
   464  009C                     	;# 
   465  009D                     	;# 
   466  009E                     	;# 
   467  010C                     	;# 
   468  010D                     	;# 
   469  010E                     	;# 
   470  010F                     	;# 
   471  0110                     	;# 
   472  0111                     	;# 
   473  0112                     	;# 
   474  0113                     	;# 
   475  0114                     	;# 
   476  0115                     	;# 
   477  0116                     	;# 
   478  0117                     	;# 
   479  0118                     	;# 
   480  0119                     	;# 
   481  011A                     	;# 
   482  011B                     	;# 
   483  011D                     	;# 
   484  018C                     	;# 
   485  018D                     	;# 
   486  018F                     	;# 
   487  0190                     	;# 
   488  0191                     	;# 
   489  0191                     	;# 
   490  0192                     	;# 
   491  0193                     	;# 
   492  0193                     	;# 
   493  0193                     	;# 
   494  0194                     	;# 
   495  0195                     	;# 
   496  0196                     	;# 
   497  0199                     	;# 
   498  019A                     	;# 
   499  019B                     	;# 
   500  019B                     	;# 
   501  019B                     	;# 
   502  019B                     	;# 
   503  019C                     	;# 
   504  019C                     	;# 
   505  019D                     	;# 
   506  019E                     	;# 
   507  019F                     	;# 
   508  020D                     	;# 
   509  0210                     	;# 
   510  0211                     	;# 
   511  0212                     	;# 
   512  0213                     	;# 
   513  0214                     	;# 
   514  0215                     	;# 
   515  0215                     	;# 
   516  0216                     	;# 
   517  0217                     	;# 
   518  0291                     	;# 
   519  0291                     	;# 
   520  0292                     	;# 
   521  0293                     	;# 
   522  0294                     	;# 
   523  0295                     	;# 
   524  0295                     	;# 
   525  0296                     	;# 
   526  0298                     	;# 
   527  0298                     	;# 
   528  0299                     	;# 
   529  029A                     	;# 
   530  029B                     	;# 
   531  029C                     	;# 
   532  029C                     	;# 
   533  029D                     	;# 
   534  029E                     	;# 
   535  029F                     	;# 
   536  0311                     	;# 
   537  0311                     	;# 
   538  0312                     	;# 
   539  0313                     	;# 
   540  0314                     	;# 
   541  0315                     	;# 
   542  0315                     	;# 
   543  0316                     	;# 
   544  0318                     	;# 
   545  0318                     	;# 
   546  0319                     	;# 
   547  031A                     	;# 
   548  031C                     	;# 
   549  031C                     	;# 
   550  031D                     	;# 
   551  031E                     	;# 
   552  0394                     	;# 
   553  0395                     	;# 
   554  0396                     	;# 
   555  0415                     	;# 
   556  0416                     	;# 
   557  0417                     	;# 
   558  041C                     	;# 
   559  041D                     	;# 
   560  041E                     	;# 
   561  0791                     	;# 
   562  0792                     	;# 
   563  0793                     	;# 
   564  0794                     	;# 
   565  0795                     	;# 
   566  0798                     	;# 
   567  0799                     	;# 
   568  079A                     	;# 
   569  07A0                     	;# 
   570  07A1                     	;# 
   571  07A2                     	;# 
   572  07A3                     	;# 
   573  07A4                     	;# 
   574  07A5                     	;# 
   575  07A6                     	;# 
   576  07A7                     	;# 
   577  07A8                     	;# 
   578  07A9                     	;# 
   579  07AA                     	;# 
   580  07AB                     	;# 
   581  0FE4                     	;# 
   582  0FE5                     	;# 
   583  0FE6                     	;# 
   584  0FE7                     	;# 
   585  0FE8                     	;# 
   586  0FE9                     	;# 
   587  0FEA                     	;# 
   588  0FEB                     	;# 
   589  0FED                     	;# 
   590  0FEE                     	;# 
   591  0FEF                     	;# 
   592  0000                     	;# 
   593  0001                     	;# 
   594  0002                     	;# 
   595  0003                     	;# 
   596  0004                     	;# 
   597  0005                     	;# 
   598  0006                     	;# 
   599  0007                     	;# 
   600  0008                     	;# 
   601  0009                     	;# 
   602  000A                     	;# 
   603  000B                     	;# 
   604  000C                     	;# 
   605  000D                     	;# 
   606  000E                     	;# 
   607  000F                     	;# 
   608  0010                     	;# 
   609  0011                     	;# 
   610  0012                     	;# 
   611  0013                     	;# 
   612  0015                     	;# 
   613  0016                     	;# 
   614  0016                     	;# 
   615  0017                     	;# 
   616  0018                     	;# 
   617  0019                     	;# 
   618  001A                     	;# 
   619  001B                     	;# 
   620  001C                     	;# 
   621  001E                     	;# 
   622  001F                     	;# 
   623  008C                     	;# 
   624  008D                     	;# 
   625  008E                     	;# 
   626  008F                     	;# 
   627  0090                     	;# 
   628  0091                     	;# 
   629  0092                     	;# 
   630  0093                     	;# 
   631  0095                     	;# 
   632  0096                     	;# 
   633  0097                     	;# 
   634  0098                     	;# 
   635  0099                     	;# 
   636  009A                     	;# 
   637  009B                     	;# 
   638  009B                     	;# 
   639  009C                     	;# 
   640  009D                     	;# 
   641  009E                     	;# 
   642  010C                     	;# 
   643  010D                     	;# 
   644  010E                     	;# 
   645  010F                     	;# 
   646  0110                     	;# 
   647  0111                     	;# 
   648  0112                     	;# 
   649  0113                     	;# 
   650  0114                     	;# 
   651  0115                     	;# 
   652  0116                     	;# 
   653  0117                     	;# 
   654  0118                     	;# 
   655  0119                     	;# 
   656  011A                     	;# 
   657  011B                     	;# 
   658  011D                     	;# 
   659  018C                     	;# 
   660  018D                     	;# 
   661  018F                     	;# 
   662  0190                     	;# 
   663  0191                     	;# 
   664  0191                     	;# 
   665  0192                     	;# 
   666  0193                     	;# 
   667  0193                     	;# 
   668  0193                     	;# 
   669  0194                     	;# 
   670  0195                     	;# 
   671  0196                     	;# 
   672  0199                     	;# 
   673  019A                     	;# 
   674  019B                     	;# 
   675  019B                     	;# 
   676  019B                     	;# 
   677  019B                     	;# 
   678  019C                     	;# 
   679  019C                     	;# 
   680  019D                     	;# 
   681  019E                     	;# 
   682  019F                     	;# 
   683  020D                     	;# 
   684  0210                     	;# 
   685  0211                     	;# 
   686  0212                     	;# 
   687  0213                     	;# 
   688  0214                     	;# 
   689  0215                     	;# 
   690  0215                     	;# 
   691  0216                     	;# 
   692  0217                     	;# 
   693  0291                     	;# 
   694  0291                     	;# 
   695  0292                     	;# 
   696  0293                     	;# 
   697  0294                     	;# 
   698  0295                     	;# 
   699  0295                     	;# 
   700  0296                     	;# 
   701  0298                     	;# 
   702  0298                     	;# 
   703  0299                     	;# 
   704  029A                     	;# 
   705  029B                     	;# 
   706  029C                     	;# 
   707  029C                     	;# 
   708  029D                     	;# 
   709  029E                     	;# 
   710  029F                     	;# 
   711  0311                     	;# 
   712  0311                     	;# 
   713  0312                     	;# 
   714  0313                     	;# 
   715  0314                     	;# 
   716  0315                     	;# 
   717  0315                     	;# 
   718  0316                     	;# 
   719  0318                     	;# 
   720  0318                     	;# 
   721  0319                     	;# 
   722  031A                     	;# 
   723  031C                     	;# 
   724  031C                     	;# 
   725  031D                     	;# 
   726  031E                     	;# 
   727  0394                     	;# 
   728  0395                     	;# 
   729  0396                     	;# 
   730  0415                     	;# 
   731  0416                     	;# 
   732  0417                     	;# 
   733  041C                     	;# 
   734  041D                     	;# 
   735  041E                     	;# 
   736  0791                     	;# 
   737  0792                     	;# 
   738  0793                     	;# 
   739  0794                     	;# 
   740  0795                     	;# 
   741  0798                     	;# 
   742  0799                     	;# 
   743  079A                     	;# 
   744  07A0                     	;# 
   745  07A1                     	;# 
   746  07A2                     	;# 
   747  07A3                     	;# 
   748  07A4                     	;# 
   749  07A5                     	;# 
   750  07A6                     	;# 
   751  07A7                     	;# 
   752  07A8                     	;# 
   753  07A9                     	;# 
   754  07AA                     	;# 
   755  07AB                     	;# 
   756  0FE4                     	;# 
   757  0FE5                     	;# 
   758  0FE6                     	;# 
   759  0FE7                     	;# 
   760  0FE8                     	;# 
   761  0FE9                     	;# 
   762  0FEA                     	;# 
   763  0FEB                     	;# 
   764  0FED                     	;# 
   765  0FEE                     	;# 
   766  0FEF                     	;# 
   767  0000                     	;# 
   768  0001                     	;# 
   769  0002                     	;# 
   770  0003                     	;# 
   771  0004                     	;# 
   772  0005                     	;# 
   773  0006                     	;# 
   774  0007                     	;# 
   775  0008                     	;# 
   776  0009                     	;# 
   777  000A                     	;# 
   778  000B                     	;# 
   779  000C                     	;# 
   780  000D                     	;# 
   781  000E                     	;# 
   782  000F                     	;# 
   783  0010                     	;# 
   784  0011                     	;# 
   785  0012                     	;# 
   786  0013                     	;# 
   787  0015                     	;# 
   788  0016                     	;# 
   789  0016                     	;# 
   790  0017                     	;# 
   791  0018                     	;# 
   792  0019                     	;# 
   793  001A                     	;# 
   794  001B                     	;# 
   795  001C                     	;# 
   796  001E                     	;# 
   797  001F                     	;# 
   798  008C                     	;# 
   799  008D                     	;# 
   800  008E                     	;# 
   801  008F                     	;# 
   802  0090                     	;# 
   803  0091                     	;# 
   804  0092                     	;# 
   805  0093                     	;# 
   806  0095                     	;# 
   807  0096                     	;# 
   808  0097                     	;# 
   809  0098                     	;# 
   810  0099                     	;# 
   811  009A                     	;# 
   812  009B                     	;# 
   813  009B                     	;# 
   814  009C                     	;# 
   815  009D                     	;# 
   816  009E                     	;# 
   817  010C                     	;# 
   818  010D                     	;# 
   819  010E                     	;# 
   820  010F                     	;# 
   821  0110                     	;# 
   822  0111                     	;# 
   823  0112                     	;# 
   824  0113                     	;# 
   825  0114                     	;# 
   826  0115                     	;# 
   827  0116                     	;# 
   828  0117                     	;# 
   829  0118                     	;# 
   830  0119                     	;# 
   831  011A                     	;# 
   832  011B                     	;# 
   833  011D                     	;# 
   834  018C                     	;# 
   835  018D                     	;# 
   836  018F                     	;# 
   837  0190                     	;# 
   838  0191                     	;# 
   839  0191                     	;# 
   840  0192                     	;# 
   841  0193                     	;# 
   842  0193                     	;# 
   843  0193                     	;# 
   844  0194                     	;# 
   845  0195                     	;# 
   846  0196                     	;# 
   847  0199                     	;# 
   848  019A                     	;# 
   849  019B                     	;# 
   850  019B                     	;# 
   851  019B                     	;# 
   852  019B                     	;# 
   853  019C                     	;# 
   854  019C                     	;# 
   855  019D                     	;# 
   856  019E                     	;# 
   857  019F                     	;# 
   858  020D                     	;# 
   859  0210                     	;# 
   860  0211                     	;# 
   861  0212                     	;# 
   862  0213                     	;# 
   863  0214                     	;# 
   864  0215                     	;# 
   865  0215                     	;# 
   866  0216                     	;# 
   867  0217                     	;# 
   868  0291                     	;# 
   869  0291                     	;# 
   870  0292                     	;# 
   871  0293                     	;# 
   872  0294                     	;# 
   873  0295                     	;# 
   874  0295                     	;# 
   875  0296                     	;# 
   876  0298                     	;# 
   877  0298                     	;# 
   878  0299                     	;# 
   879  029A                     	;# 
   880  029B                     	;# 
   881  029C                     	;# 
   882  029C                     	;# 
   883  029D                     	;# 
   884  029E                     	;# 
   885  029F                     	;# 
   886  0311                     	;# 
   887  0311                     	;# 
   888  0312                     	;# 
   889  0313                     	;# 
   890  0314                     	;# 
   891  0315                     	;# 
   892  0315                     	;# 
   893  0316                     	;# 
   894  0318                     	;# 
   895  0318                     	;# 
   896  0319                     	;# 
   897  031A                     	;# 
   898  031C                     	;# 
   899  031C                     	;# 
   900  031D                     	;# 
   901  031E                     	;# 
   902  0394                     	;# 
   903  0395                     	;# 
   904  0396                     	;# 
   905  0415                     	;# 
   906  0416                     	;# 
   907  0417                     	;# 
   908  041C                     	;# 
   909  041D                     	;# 
   910  041E                     	;# 
   911  0791                     	;# 
   912  0792                     	;# 
   913  0793                     	;# 
   914  0794                     	;# 
   915  0795                     	;# 
   916  0798                     	;# 
   917  0799                     	;# 
   918  079A                     	;# 
   919  07A0                     	;# 
   920  07A1                     	;# 
   921  07A2                     	;# 
   922  07A3                     	;# 
   923  07A4                     	;# 
   924  07A5                     	;# 
   925  07A6                     	;# 
   926  07A7                     	;# 
   927  07A8                     	;# 
   928  07A9                     	;# 
   929  07AA                     	;# 
   930  07AB                     	;# 
   931  0FE4                     	;# 
   932  0FE5                     	;# 
   933  0FE6                     	;# 
   934  0FE7                     	;# 
   935  0FE8                     	;# 
   936  0FE9                     	;# 
   937  0FEA                     	;# 
   938  0FEB                     	;# 
   939  0FED                     	;# 
   940  0FEE                     	;# 
   941  0FEF                     	;# 
   942                           
   943                           	psect	nvBANK0
   944  003D                     __pnvBANK0:	
   945  003D                     _eusartTxBufferRemaining:	
   946  003D                     	ds	1
   947  0011                     _PIR1bits	set	17
   948  000B                     _INTCONbits	set	11
   949  0091                     _PIE1bits	set	145
   950  0095                     _OPTION_REGbits	set	149
   951  008F                     _TRISD	set	143
   952  008E                     _TRISC	set	142
   953  008D                     _TRISB	set	141
   954  008C                     _TRISA	set	140
   955  0090                     _TRISE	set	144
   956  0097                     _WDTCON	set	151
   957  0098                     _OSCTUNE	set	152
   958  0099                     _OSCCON	set	153
   959  011D                     _APFCON	set	285
   960  010E                     _LATC	set	270
   961  010D                     _LATB	set	269
   962  010C                     _LATA	set	268
   963  010F                     _LATD	set	271
   964  0110                     _LATE	set	272
   965  0199                     _RCREG	set	409
   966  019D                     _RCSTAbits	set	413
   967  019A                     _TXREG	set	410
   968  019C                     _SPBRGH	set	412
   969  019B                     _SPBRGL	set	411
   970  019E                     _TXSTA	set	414
   971  019D                     _RCSTA	set	413
   972  019F                     _BAUDCON	set	415
   973  018C                     _ANSELA	set	396
   974  0190                     _ANSELE	set	400
   975  018F                     _ANSELD	set	399
   976  018D                     _ANSELB	set	397
   977  020D                     _WPUB	set	525
   978  0210                     _WPUE	set	528
   979                           
   980                           	psect	stringtext1
   981  01B9                     __pstringtext1:	
   982  01B9                     STR_3:	
   983  01B9  3441               	retlw	65	;'A'
   984  01BA  3454               	retlw	84	;'T'
   985  01BB  342B               	retlw	43	;'+'
   986  01BC  3443               	retlw	67	;'C'
   987  01BD  344D               	retlw	77	;'M'
   988  01BE  3447               	retlw	71	;'G'
   989  01BF  3453               	retlw	83	;'S'
   990  01C0  343D               	retlw	61	;'='
   991  01C1  3422               	retlw	34	;'"'
   992  01C2  3430               	retlw	48	;'0'
   993  01C3  3437               	retlw	55	;'7'
   994  01C4  3435               	retlw	53	;'5'
   995  01C5  3437               	retlw	55	;'7'
   996  01C6  3434               	retlw	52	;'4'
   997  01C7  3439               	retlw	57	;'9'
   998  01C8  3434               	retlw	52	;'4'
   999  01C9  3438               	retlw	56	;'8'
  1000  01CA  3432               	retlw	50	;'2'
  1001  01CB  3433               	retlw	51	;'3'
  1002  01CC  3422               	retlw	34	;'"'
  1003  01CD  3400               	retlw	0
  1004                           
  1005                           	psect	stringtext2
  1006  01CE                     __pstringtext2:	
  1007  01CE                     STR_6:	
  1008  01CE  3441               	retlw	65	;'A'
  1009  01CF  3454               	retlw	84	;'T'
  1010  01D0  342B               	retlw	43	;'+'
  1011  01D1  3443               	retlw	67	;'C'
  1012  01D2  3450               	retlw	80	;'P'
  1013  01D3  3449               	retlw	73	;'I'
  1014  01D4  344E               	retlw	78	;'N'
  1015  01D5  343D               	retlw	61	;'='
  1016  01D6  3422               	retlw	34	;'"'
  1017  01D7  3431               	retlw	49	;'1'
  1018  01D8  3432               	retlw	50	;'2'
  1019  01D9  3433               	retlw	51	;'3'
  1020  01DA  3434               	retlw	52	;'4'
  1021  01DB  3422               	retlw	34	;'"'
  1022  01DC  3400               	retlw	0
  1023                           
  1024                           	psect	stringtext3
  1025  01DD                     __pstringtext3:	
  1026  01DD                     STR_2:	
  1027  01DD  3441               	retlw	65	;'A'
  1028  01DE  3454               	retlw	84	;'T'
  1029  01DF  342B               	retlw	43	;'+'
  1030  01E0  3443               	retlw	67	;'C'
  1031  01E1  3453               	retlw	83	;'S'
  1032  01E2  3443               	retlw	67	;'C'
  1033  01E3  3453               	retlw	83	;'S'
  1034  01E4  343D               	retlw	61	;'='
  1035  01E5  3422               	retlw	34	;'"'
  1036  01E6  3447               	retlw	71	;'G'
  1037  01E7  3453               	retlw	83	;'S'
  1038  01E8  344D               	retlw	77	;'M'
  1039  01E9  3422               	retlw	34	;'"'
  1040  01EA  3400               	retlw	0
  1041                           
  1042                           	psect	stringtext4
  1043  01F7                     __pstringtext4:	
  1044  01F7                     STR_1:	
  1045  01F7  3441               	retlw	65	;'A'
  1046  01F8  3454               	retlw	84	;'T'
  1047  01F9  342B               	retlw	43	;'+'
  1048  01FA  3443               	retlw	67	;'C'
  1049  01FB  344D               	retlw	77	;'M'
  1050  01FC  3447               	retlw	71	;'G'
  1051  01FD  3446               	retlw	70	;'F'
  1052  01FE  343D               	retlw	61	;'='
  1053  01FF  3431               	retlw	49	;'1'
  1054  0200  3400               	retlw	0
  1055                           
  1056                           	psect	stringtext5
  1057  0201                     __pstringtext5:	
  1058  0201                     STR_4:	
  1059  0201  3468               	retlw	104	;'h'
  1060  0202  3465               	retlw	101	;'e'
  1061  0203  346C               	retlw	108	;'l'
  1062  0204  346C               	retlw	108	;'l'
  1063  0205  346F               	retlw	111	;'o'
  1064  0206  3400               	retlw	0
  1065                           
  1066                           	psect	stringtext6
  1067  021B                     __pstringtext6:	
  1068  021B                     STR_5:	
  1069  021B  3441               	retlw	65	;'A'
  1070  021C  3454               	retlw	84	;'T'
  1071  021D  3400               	retlw	0
  1072                           
  1073                           	psect	stringtext7
  1074  0000                     __pstringtext7:	
  1075                           
  1076                           ; #config settings
  1077  0000                     
  1078                           	psect	cinit
  1079  0026                     start_initialization:	
  1080  0026                     __initialization:	
  1081                           
  1082                           ; Clear objects allocated to COMMON
  1083  0026  01FA               	clrf	__pbssCOMMON& (0+127)
  1084  0027  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1085                           
  1086                           ; Clear objects allocated to BANK0
  1087  0028  3020               	movlw	low __pbssBANK0
  1088  0029  0084               	movwf	4
  1089  002A  3000               	movlw	high __pbssBANK0
  1090  002B  0085               	movwf	5
  1091  002C  3016               	movlw	22
  1092  002D  3182  2207         	fcall	clear_ram0
  1093  002F                     end_of_initialization:	
  1094                           ;End of C runtime variable initialization code
  1095                           
  1096  002F                     __end_of__initialization:	
  1097  002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1098  0030  0020               	movlb	0
  1099  0031  3180  2894         	ljmp	_main	;jump to C main() function
  1100                           
  1101                           	psect	bssCOMMON
  1102  007A                     __pbssCOMMON:	
  1103  007A                     _eusartTxTail:	
  1104  007A                     	ds	1
  1105  007B                     _eusartTxHead:	
  1106  007B                     	ds	1
  1107                           
  1108                           	psect	bssBANK0
  1109  0020                     __pbssBANK0:	
  1110  0020                     _eusartRxBuffer:	
  1111  0020                     	ds	8
  1112  0028                     _eusartTxBuffer:	
  1113  0028                     	ds	8
  1114  0030                     _flag:	
  1115  0030                     	ds	2
  1116  0032                     _rcreg:	
  1117  0032                     	ds	1
  1118  0033                     _eusartRxCount:	
  1119  0033                     	ds	1
  1120  0034                     _eusartRxTail:	
  1121  0034                     	ds	1
  1122  0035                     _eusartRxHead:	
  1123  0035                     	ds	1
  1124                           
  1125                           	psect	clrtext
  1126  0207                     clear_ram0:	
  1127                           ;	Called with FSR0 containing the base address, and
  1128                           ;	WREG with the size to clear
  1129                           
  1130  0207  0064               	clrwdt	;clear the watchdog before getting into this loop
  1131  0208                     clrloop0:	
  1132  0208  0180               	clrf	0	;clear RAM location pointed to by FSR
  1133  0209  3101               	addfsr 0,1
  1134  020A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1135  020B  2A08               	goto	clrloop0	;have we reached the end yet?
  1136  020C  3400               	retlw	0	;all done for this memory range, return
  1137                           
  1138                           	psect	cstackCOMMON
  1139  0070                     __pcstackCOMMON:	
  1140  0070                     ?_PIN_MANAGER_Initialize:	
  1141  0070                     ?_OSCILLATOR_Initialize:	
  1142                           ; 1 bytes @ 0x0
  1143                           
  1144  0070                     ?_WDT_Initialize:	
  1145                           ; 1 bytes @ 0x0
  1146                           
  1147  0070                     ?_EUSART_Initialize:	
  1148                           ; 1 bytes @ 0x0
  1149                           
  1150  0070                     ?_SYSTEM_Initialize:	
  1151                           ; 1 bytes @ 0x0
  1152                           
  1153  0070                     ?_EUSART_Write:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156  0070                     ?_putch:	
  1157                           ; 1 bytes @ 0x0
  1158                           
  1159  0070                     ?_EUSART_Transmit_ISR:	
  1160                           ; 1 bytes @ 0x0
  1161                           
  1162  0070                     ??_EUSART_Transmit_ISR:	
  1163                           ; 1 bytes @ 0x0
  1164                           
  1165  0070                     ?_EUSART_Receive_ISR:	
  1166                           ; 1 bytes @ 0x0
  1167                           
  1168  0070                     ??_EUSART_Receive_ISR:	
  1169                           ; 1 bytes @ 0x0
  1170                           
  1171  0070                     ?_INTERRUPT_InterruptManager:	
  1172                           ; 1 bytes @ 0x0
  1173                           
  1174  0070                     ?_sms_text:	
  1175                           ; 1 bytes @ 0x0
  1176                           
  1177  0070                     ?_main:	
  1178                           ; 1 bytes @ 0x0
  1179                           
  1180                           
  1181                           ; 1 bytes @ 0x0
  1182  0070                     	ds	1
  1183  0071                     ??_INTERRUPT_InterruptManager:	
  1184                           
  1185                           ; 1 bytes @ 0x1
  1186  0071                     	ds	1
  1187  0072                     ??_PIN_MANAGER_Initialize:	
  1188  0072                     ??_OSCILLATOR_Initialize:	
  1189                           ; 1 bytes @ 0x2
  1190                           
  1191  0072                     ??_WDT_Initialize:	
  1192                           ; 1 bytes @ 0x2
  1193                           
  1194  0072                     ??_EUSART_Initialize:	
  1195                           ; 1 bytes @ 0x2
  1196                           
  1197  0072                     ??_EUSART_Write:	
  1198                           ; 1 bytes @ 0x2
  1199                           
  1200                           
  1201                           ; 1 bytes @ 0x2
  1202  0072                     	ds	1
  1203  0073                     ??_SYSTEM_Initialize:	
  1204  0073                     EUSART_Write@txData:	
  1205                           ; 1 bytes @ 0x3
  1206                           
  1207                           
  1208                           ; 1 bytes @ 0x3
  1209  0073                     	ds	1
  1210  0074                     ??_putch:	
  1211  0074                     putch@txData:	
  1212                           ; 1 bytes @ 0x4
  1213                           
  1214                           
  1215                           ; 1 bytes @ 0x4
  1216  0074                     	ds	1
  1217  0075                     ?_printf:	
  1218  0075                     printf@f:	
  1219                           ; 2 bytes @ 0x5
  1220                           
  1221                           
  1222                           ; 2 bytes @ 0x5
  1223  0075                     	ds	2
  1224  0077                     ??_printf:	
  1225                           
  1226                           ; 1 bytes @ 0x7
  1227  0077                     	ds	3
  1228                           
  1229                           	psect	cstackBANK0
  1230  0036                     __pcstackBANK0:	
  1231  0036                     printf@ap:	
  1232                           
  1233                           ; 1 bytes @ 0x0
  1234  0036                     	ds	1
  1235  0037                     printf@c:	
  1236                           
  1237                           ; 1 bytes @ 0x1
  1238  0037                     	ds	1
  1239  0038                     ??_sms_text:	
  1240                           
  1241                           ; 1 bytes @ 0x2
  1242  0038                     	ds	2
  1243  003A                     ??_main:	
  1244                           
  1245                           ; 1 bytes @ 0x4
  1246  003A                     	ds	2
  1247  003C                     main@x:	
  1248                           
  1249                           ; 1 bytes @ 0x6
  1250  003C                     	ds	1
  1251                           
  1252                           	psect	maintext
  1253  0094                     __pmaintext:	
  1254 ;;
  1255 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1256 ;;
  1257 ;; *************** function _main *****************
  1258 ;; Defined at:
  1259 ;;		line 70 in file "main.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;		None
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;  x               1    6[BANK0 ] unsigned char 
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  1    wreg      void 
  1266 ;; Registers used:
  1267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1268 ;; Tracked objects:
  1269 ;;		On entry : B1F/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1273 ;;      Params:         0       0       0       0       0       0       0       0
  1274 ;;      Locals:         0       1       0       0       0       0       0       0
  1275 ;;      Temps:          0       2       0       0       0       0       0       0
  1276 ;;      Totals:         0       3       0       0       0       0       0       0
  1277 ;;Total ram usage:        3 bytes
  1278 ;; Hardware stack levels required when called:    6
  1279 ;; This function calls:
  1280 ;;		_SYSTEM_Initialize
  1281 ;;		_printf
  1282 ;;		_putch
  1283 ;;		_sms_text
  1284 ;; This function is called by:
  1285 ;;		Startup code after reset
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           
  1290                           ;psect for function _main
  1291  0094                     _main:	
  1292                           
  1293                           ;main.c: 72: char x=0;
  1294                           
  1295                           ;incstack = 0
  1296                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1297  0094  0020               	movlb	0	; select bank0
  1298  0095  01BC               	clrf	main@x
  1299                           
  1300                           ;main.c: 73: LATB=0x00;
  1301  0096  0022               	movlb	2	; select bank2
  1302  0097  018D               	clrf	13	;volatile
  1303                           
  1304                           ;main.c: 75: SYSTEM_Initialize();
  1305  0098  3181  21EB  3180   	fcall	_SYSTEM_Initialize
  1306                           
  1307                           ;main.c: 82: (INTCONbits.GIE = 1);
  1308  009B  178B               	bsf	11,7	;volatile
  1309                           
  1310                           ;main.c: 85: (INTCONbits.PEIE = 1);
  1311  009C  170B               	bsf	11,6	;volatile
  1312                           
  1313                           ;main.c: 92: _delay((unsigned long)((3000)*(18432000/4000.0)));
  1314  009D  3047               	movlw	71
  1315  009E  0020               	movlb	0	; select bank0
  1316  009F  00BB               	movwf	??_main+1
  1317  00A0  3022               	movlw	34
  1318  00A1  00BA               	movwf	??_main
  1319  00A2  300D               	movlw	13
  1320  00A3                     u427:	
  1321  00A3  0B89               	decfsz	9,f
  1322  00A4  28A3               	goto	u427
  1323  00A5  0BBA               	decfsz	??_main,f
  1324  00A6  28A3               	goto	u427
  1325  00A7  0BBB               	decfsz	??_main+1,f
  1326  00A8  28A3               	goto	u427
  1327  00A9  3200               	nop2
  1328                           
  1329                           ;main.c: 94: printf("AT");
  1330  00AA  301B               	movlw	low (STR_5| (0+32768))
  1331  00AB  00F5               	movwf	printf@f
  1332  00AC  3082               	movlw	high (STR_5| (0+32768))
  1333  00AD  00F6               	movwf	printf@f+1
  1334  00AE  3181  2164  3180   	fcall	_printf
  1335                           
  1336                           ;main.c: 95: putch(0x0d);
  1337  00B1  300D               	movlw	13
  1338  00B2  3182  220D  3180   	fcall	_putch
  1339                           
  1340                           ;main.c: 96: _delay((unsigned long)((4000)*(18432000/4000.0)));
  1341  00B5  305E               	movlw	94
  1342  00B6  0020               	movlb	0	; select bank0
  1343  00B7  00BB               	movwf	??_main+1
  1344  00B8  3082               	movlw	130
  1345  00B9  00BA               	movwf	??_main
  1346  00BA  3069               	movlw	105
  1347  00BB                     u437:	
  1348  00BB  0B89               	decfsz	9,f
  1349  00BC  28BB               	goto	u437
  1350  00BD  0BBA               	decfsz	??_main,f
  1351  00BE  28BB               	goto	u437
  1352  00BF  0BBB               	decfsz	??_main+1,f
  1353  00C0  28BB               	goto	u437
  1354                           
  1355                           ;main.c: 97: printf("AT+CPIN=\"1234\"");
  1356  00C1  30CE               	movlw	low (STR_6| (0+32768))
  1357  00C2  00F5               	movwf	printf@f
  1358  00C3  3081               	movlw	high (STR_6| (0+32768))
  1359  00C4  00F6               	movwf	printf@f+1
  1360  00C5  3181  2164  3180   	fcall	_printf
  1361                           
  1362                           ;main.c: 98: putch(0x0d);
  1363  00C8  300D               	movlw	13
  1364  00C9  3182  220D  3180   	fcall	_putch
  1365                           
  1366                           ;main.c: 99: _delay((unsigned long)((4000)*(18432000/4000.0)));
  1367  00CC  305E               	movlw	94
  1368  00CD  0020               	movlb	0	; select bank0
  1369  00CE  00BB               	movwf	??_main+1
  1370  00CF  3082               	movlw	130
  1371  00D0  00BA               	movwf	??_main
  1372  00D1  3069               	movlw	105
  1373  00D2                     u447:	
  1374  00D2  0B89               	decfsz	9,f
  1375  00D3  28D2               	goto	u447
  1376  00D4  0BBA               	decfsz	??_main,f
  1377  00D5  28D2               	goto	u447
  1378  00D6  0BBB               	decfsz	??_main+1,f
  1379  00D7  28D2               	goto	u447
  1380  00D8                     l1121:	
  1381                           ;main.c: 102: while (1)
  1382                           
  1383                           
  1384                           ;main.c: 103: {
  1385                           ;main.c: 104: if(flag==1)
  1386  00D8  0020               	movlb	0	; select bank0
  1387  00D9  0330               	decf	_flag,w
  1388  00DA  0431               	iorwf	_flag+1,w
  1389  00DB  1D03               	btfss	3,2
  1390  00DC  28D8               	goto	l1121
  1391                           
  1392                           ;main.c: 105: {
  1393                           ;main.c: 107: sms_text();
  1394  00DD  3180  2033  3180   	fcall	_sms_text
  1395                           
  1396                           ;main.c: 108: flag=0;
  1397  00E0  0020               	movlb	0	; select bank0
  1398  00E1  01B0               	clrf	_flag
  1399  00E2  01B1               	clrf	_flag+1
  1400                           
  1401                           ;main.c: 109: _delay((unsigned long)((200)*(18432000/4000.0)));
  1402  00E3  3005               	movlw	5
  1403  00E4  0020               	movlb	0	; select bank0
  1404  00E5  00BB               	movwf	??_main+1
  1405  00E6  30AD               	movlw	173
  1406  00E7  00BA               	movwf	??_main
  1407  00E8  30DD               	movlw	221
  1408  00E9                     u457:	
  1409  00E9  0B89               	decfsz	9,f
  1410  00EA  28E9               	goto	u457
  1411  00EB  0BBA               	decfsz	??_main,f
  1412  00EC  28E9               	goto	u457
  1413  00ED  0BBB               	decfsz	??_main+1,f
  1414  00EE  28E9               	goto	u457
  1415  00EF  28D8               	goto	l1121
  1416  00F0                     __end_of_main:	
  1417                           
  1418                           	psect	text1
  1419  0033                     __ptext1:	
  1420 ;; *************** function _sms_text *****************
  1421 ;; Defined at:
  1422 ;;		line 53 in file "main.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;		None
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;		None
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      void 
  1429 ;; Registers used:
  1430 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1436 ;;      Params:         0       0       0       0       0       0       0       0
  1437 ;;      Locals:         0       0       0       0       0       0       0       0
  1438 ;;      Temps:          0       2       0       0       0       0       0       0
  1439 ;;      Totals:         0       2       0       0       0       0       0       0
  1440 ;;Total ram usage:        2 bytes
  1441 ;; Hardware stack levels used:    1
  1442 ;; Hardware stack levels required when called:    5
  1443 ;; This function calls:
  1444 ;;		_printf
  1445 ;;		_putch
  1446 ;; This function is called by:
  1447 ;;		_main
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           
  1452                           ;psect for function _sms_text
  1453  0033                     _sms_text:	
  1454                           
  1455                           ;main.c: 56: printf("AT+CMGF=1");
  1456                           
  1457                           ;incstack = 0
  1458                           ; Regs used in _sms_text: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1459  0033  30F7               	movlw	low (STR_1| (0+32768))
  1460  0034  00F5               	movwf	printf@f
  1461  0035  3081               	movlw	high (STR_1| (0+32768))
  1462  0036  00F6               	movwf	printf@f+1
  1463  0037  3181  2164  3180   	fcall	_printf
  1464                           
  1465                           ;main.c: 57: putch(0x0d);
  1466  003A  300D               	movlw	13
  1467  003B  3182  220D  3180   	fcall	_putch
  1468                           
  1469                           ;main.c: 58: _delay((unsigned long)((4000)*(18432000/4000.0)));
  1470  003E  305E               	movlw	94
  1471  003F  0020               	movlb	0	; select bank0
  1472  0040  00B9               	movwf	??_sms_text+1
  1473  0041  3082               	movlw	130
  1474  0042  00B8               	movwf	??_sms_text
  1475  0043  3069               	movlw	105
  1476  0044                     u467:	
  1477  0044  0B89               	decfsz	9,f
  1478  0045  2844               	goto	u467
  1479  0046  0BB8               	decfsz	??_sms_text,f
  1480  0047  2844               	goto	u467
  1481  0048  0BB9               	decfsz	??_sms_text+1,f
  1482  0049  2844               	goto	u467
  1483                           
  1484                           ;main.c: 59: printf("AT+CSCS=\"GSM\"");
  1485  004A  30DD               	movlw	low (STR_2| (0+32768))
  1486  004B  00F5               	movwf	printf@f
  1487  004C  3081               	movlw	high (STR_2| (0+32768))
  1488  004D  00F6               	movwf	printf@f+1
  1489  004E  3181  2164  3180   	fcall	_printf
  1490                           
  1491                           ;main.c: 60: putch(0x0d);
  1492  0051  300D               	movlw	13
  1493  0052  3182  220D  3180   	fcall	_putch
  1494                           
  1495                           ;main.c: 61: _delay((unsigned long)((4000)*(18432000/4000.0)));
  1496  0055  305E               	movlw	94
  1497  0056  0020               	movlb	0	; select bank0
  1498  0057  00B9               	movwf	??_sms_text+1
  1499  0058  3082               	movlw	130
  1500  0059  00B8               	movwf	??_sms_text
  1501  005A  3069               	movlw	105
  1502  005B                     u477:	
  1503  005B  0B89               	decfsz	9,f
  1504  005C  285B               	goto	u477
  1505  005D  0BB8               	decfsz	??_sms_text,f
  1506  005E  285B               	goto	u477
  1507  005F  0BB9               	decfsz	??_sms_text+1,f
  1508  0060  285B               	goto	u477
  1509                           
  1510                           ;main.c: 62: printf("AT+CMGS=\"0757494823\"");
  1511  0061  30B9               	movlw	low (STR_3| (0+32768))
  1512  0062  00F5               	movwf	printf@f
  1513  0063  3081               	movlw	high (STR_3| (0+32768))
  1514  0064  00F6               	movwf	printf@f+1
  1515  0065  3181  2164  3180   	fcall	_printf
  1516                           
  1517                           ;main.c: 63: putch(0x0d);
  1518  0068  300D               	movlw	13
  1519  0069  3182  220D  3180   	fcall	_putch
  1520                           
  1521                           ;main.c: 64: _delay((unsigned long)((4000)*(18432000/4000.0)));
  1522  006C  305E               	movlw	94
  1523  006D  0020               	movlb	0	; select bank0
  1524  006E  00B9               	movwf	??_sms_text+1
  1525  006F  3082               	movlw	130
  1526  0070  00B8               	movwf	??_sms_text
  1527  0071  3069               	movlw	105
  1528  0072                     u487:	
  1529  0072  0B89               	decfsz	9,f
  1530  0073  2872               	goto	u487
  1531  0074  0BB8               	decfsz	??_sms_text,f
  1532  0075  2872               	goto	u487
  1533  0076  0BB9               	decfsz	??_sms_text+1,f
  1534  0077  2872               	goto	u487
  1535                           
  1536                           ;main.c: 65: printf("hello");
  1537  0078  3001               	movlw	low (STR_4| (0+32768))
  1538  0079  00F5               	movwf	printf@f
  1539  007A  3082               	movlw	high (STR_4| (0+32768))
  1540  007B  00F6               	movwf	printf@f+1
  1541  007C  3181  2164  3180   	fcall	_printf
  1542                           
  1543                           ;main.c: 66: putch(26);
  1544  007F  301A               	movlw	26
  1545  0080  3182  220D  3180   	fcall	_putch
  1546                           
  1547                           ;main.c: 67: putch(0x0d);
  1548  0083  300D               	movlw	13
  1549  0084  3182  220D  3180   	fcall	_putch
  1550                           
  1551                           ;main.c: 68: _delay((unsigned long)((500)*(18432000/4000.0)));
  1552  0087  300C               	movlw	12
  1553  0088  0020               	movlb	0	; select bank0
  1554  0089  00B9               	movwf	??_sms_text+1
  1555  008A  30B1               	movlw	177
  1556  008B  00B8               	movwf	??_sms_text
  1557  008C  302B               	movlw	43
  1558  008D                     u497:	
  1559  008D  0B89               	decfsz	9,f
  1560  008E  288D               	goto	u497
  1561  008F  0BB8               	decfsz	??_sms_text,f
  1562  0090  288D               	goto	u497
  1563  0091  0BB9               	decfsz	??_sms_text+1,f
  1564  0092  288D               	goto	u497
  1565  0093  0008               	return
  1566  0094                     __end_of_sms_text:	
  1567                           
  1568                           	psect	text2
  1569  0164                     __ptext2:	
  1570 ;; *************** function _printf *****************
  1571 ;; Defined at:
  1572 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\doprnt.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;  f               2    5[COMMON] PTR const unsigned char 
  1575 ;;		 -> STR_6(15), STR_5(3), STR_4(6), STR_3(21), 
  1576 ;;		 -> STR_2(14), STR_1(10), 
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;  tmpval          4    0        struct .
  1579 ;;  cp              2    0        PTR const unsigned char 
  1580 ;;  len             2    0        unsigned int 
  1581 ;;  val             2    0        unsigned int 
  1582 ;;  c               1    1[BANK0 ] char 
  1583 ;;  ap              1    0[BANK0 ] PTR void [1]
  1584 ;;		 -> ?_printf(2), 
  1585 ;;  flag            1    0        unsigned char 
  1586 ;;  prec            1    0        char 
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  2    5[COMMON] int 
  1589 ;; Registers used:
  1590 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1596 ;;      Params:         2       0       0       0       0       0       0       0
  1597 ;;      Locals:         0       2       0       0       0       0       0       0
  1598 ;;      Temps:          3       0       0       0       0       0       0       0
  1599 ;;      Totals:         5       2       0       0       0       0       0       0
  1600 ;;Total ram usage:        7 bytes
  1601 ;; Hardware stack levels used:    1
  1602 ;; Hardware stack levels required when called:    4
  1603 ;; This function calls:
  1604 ;;		_putch
  1605 ;; This function is called by:
  1606 ;;		_sms_text
  1607 ;;		_main
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           
  1612                           ;psect for function _printf
  1613  0164                     _printf:	
  1614                           
  1615                           ;doprnt.c: 466: va_list ap;
  1616                           ;doprnt.c: 499: signed char c;
  1617                           ;doprnt.c: 506: signed char prec;
  1618                           ;doprnt.c: 508: unsigned char flag;
  1619                           ;doprnt.c: 523: union {
  1620                           ;doprnt.c: 524: unsigned long vd;
  1621                           ;doprnt.c: 525: double integ;
  1622                           ;doprnt.c: 526: } tmpval;
  1623                           ;doprnt.c: 528: unsigned int val;
  1624                           ;doprnt.c: 529: unsigned len;
  1625                           ;doprnt.c: 530: const char * cp;
  1626                           ;doprnt.c: 533: *ap = __va_start();
  1627                           
  1628                           ;incstack = 0
  1629                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1630  0164  3077               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1631  0165  00F7               	movwf	??_printf
  1632  0166  0877               	movf	??_printf,w
  1633  0167  0020               	movlb	0	; select bank0
  1634  0168  00B6               	movwf	printf@ap
  1635  0169                     l1077:	
  1636                           ;doprnt.c: 543: }
  1637                           ;doprnt.c: 1422: {
  1638                           
  1639                           ;doprnt.c: 542: continue;
  1640                           
  1641                           ;doprnt.c: 536: while(c = *f++) {
  1642                           
  1643  0169  0876               	movf	printf@f+1,w
  1644  016A  00F8               	movwf	??_printf+1
  1645  016B  0875               	movf	printf@f,w
  1646  016C  00F7               	movwf	??_printf
  1647  016D  0AF5               	incf	printf@f,f
  1648  016E  1903               	skipnz
  1649  016F  0AF6               	incf	printf@f+1,f
  1650  0170  0877               	movf	??_printf,w
  1651  0171  0084               	movwf	4
  1652  0172  0878               	movf	??_printf+1,w
  1653  0173  0085               	movwf	5
  1654  0174  0800               	movf	0,w	;code access
  1655  0175  00F9               	movwf	??_printf+2
  1656  0176  0879               	movf	??_printf+2,w
  1657  0177  0020               	movlb	0	; select bank0
  1658  0178  00B7               	movwf	printf@c
  1659  0179  0837               	movf	printf@c,w
  1660  017A  1903               	btfsc	3,2
  1661  017B  0008               	return
  1662                           
  1663                           ;doprnt.c: 540: {
  1664                           ;doprnt.c: 541: (putch(c) );
  1665  017C  0837               	movf	printf@c,w
  1666  017D  3182  220D  3181   	fcall	_putch
  1667  0180  2969               	goto	l1077
  1668  0181                     __end_of_printf:	
  1669                           ;doprnt.c: 1469: }
  1670                           ;doprnt.c: 1533: }
  1671                           ;doprnt.c: 1540: return 0;
  1672                           ;	Return value of _printf is never used
  1673                           
  1674                           
  1675                           	psect	text3
  1676  020D                     __ptext3:	
  1677 ;; *************** function _putch *****************
  1678 ;; Defined at:
  1679 ;;		line 161 in file "mcc_generated_files/eusart.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;  txData          1    wreg     unsigned char 
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;  txData          1    4[COMMON] unsigned char 
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  1    wreg      void 
  1686 ;; Registers used:
  1687 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1693 ;;      Params:         0       0       0       0       0       0       0       0
  1694 ;;      Locals:         1       0       0       0       0       0       0       0
  1695 ;;      Temps:          0       0       0       0       0       0       0       0
  1696 ;;      Totals:         1       0       0       0       0       0       0       0
  1697 ;;Total ram usage:        1 bytes
  1698 ;; Hardware stack levels used:    1
  1699 ;; Hardware stack levels required when called:    3
  1700 ;; This function calls:
  1701 ;;		_EUSART_Write
  1702 ;; This function is called by:
  1703 ;;		_sms_text
  1704 ;;		_main
  1705 ;;		_printf
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           
  1710                           ;psect for function _putch
  1711  020D                     _putch:	
  1712                           
  1713                           ;incstack = 0
  1714                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1715                           ;putch@txData stored from wreg
  1716  020D  00F4               	movwf	putch@txData
  1717                           
  1718                           ;eusart.c: 163: EUSART_Write(txData);
  1719  020E  0874               	movf	putch@txData,w
  1720  020F  3181  211E         	fcall	_EUSART_Write
  1721  0211  0008               	return
  1722  0212                     __end_of_putch:	
  1723                           
  1724                           	psect	text4
  1725  011E                     __ptext4:	
  1726 ;; *************** function _EUSART_Write *****************
  1727 ;; Defined at:
  1728 ;;		line 133 in file "mcc_generated_files/eusart.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;  txData          1    wreg     unsigned char 
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;  txData          1    3[COMMON] unsigned char 
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      void 
  1735 ;; Registers used:
  1736 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1742 ;;      Params:         0       0       0       0       0       0       0       0
  1743 ;;      Locals:         1       0       0       0       0       0       0       0
  1744 ;;      Temps:          1       0       0       0       0       0       0       0
  1745 ;;      Totals:         2       0       0       0       0       0       0       0
  1746 ;;Total ram usage:        2 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; Hardware stack levels required when called:    2
  1749 ;; This function calls:
  1750 ;;		Nothing
  1751 ;; This function is called by:
  1752 ;;		_putch
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           
  1757                           ;psect for function _EUSART_Write
  1758  011E                     _EUSART_Write:	
  1759                           
  1760                           ;incstack = 0
  1761                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  1762                           ;EUSART_Write@txData stored from wreg
  1763  011E  00F3               	movwf	EUSART_Write@txData
  1764  011F                     l1055:	
  1765                           ;eusart.c: 136: {
  1766                           
  1767                           ;eusart.c: 135: while(0 == eusartTxBufferRemaining)
  1768                           
  1769  011F  0020               	movlb	0	; select bank0
  1770  0120  083D               	movf	_eusartTxBufferRemaining,w	;volatile
  1771  0121  1903               	btfsc	3,2
  1772  0122  291F               	goto	l1055
  1773                           
  1774                           ;eusart.c: 137: }
  1775                           ;eusart.c: 139: if(0 == PIE1bits.TXIE)
  1776  0123  0021               	movlb	1	; select bank1
  1777  0124  1A11               	btfsc	17,4	;volatile
  1778  0125  292A               	goto	l121
  1779                           
  1780                           ;eusart.c: 140: {
  1781                           ;eusart.c: 141: TXREG = txData;
  1782  0126  0873               	movf	EUSART_Write@txData,w
  1783  0127  0023               	movlb	3	; select bank3
  1784  0128  009A               	movwf	26	;volatile
  1785                           
  1786                           ;eusart.c: 142: }
  1787  0129  293E               	goto	l1069
  1788  012A                     l121:	
  1789                           
  1790                           ;eusart.c: 143: else
  1791                           ;eusart.c: 144: {
  1792                           ;eusart.c: 145: PIE1bits.TXIE = 0;
  1793  012A  1211               	bcf	17,4	;volatile
  1794                           
  1795                           ;eusart.c: 146: eusartTxBuffer[eusartTxHead++] = txData;
  1796  012B  0873               	movf	EUSART_Write@txData,w
  1797  012C  00F2               	movwf	??_EUSART_Write
  1798  012D  087B               	movf	_eusartTxHead,w
  1799  012E  3E28               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  1800  012F  0086               	movwf	6
  1801  0130  0187               	clrf	7
  1802  0131  0872               	movf	??_EUSART_Write,w
  1803  0132  0081               	movwf	1
  1804  0133  3001               	movlw	1
  1805  0134  00F2               	movwf	??_EUSART_Write
  1806  0135  0872               	movf	??_EUSART_Write,w
  1807  0136  07FB               	addwf	_eusartTxHead,f	;volatile
  1808                           
  1809                           ;eusart.c: 147: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  1810  0137  3008               	movlw	8
  1811  0138  027B               	subwf	_eusartTxHead,w	;volatile
  1812  0139  1803               	btfsc	3,0
  1813                           
  1814                           ;eusart.c: 148: {
  1815                           ;eusart.c: 149: eusartTxHead = 0;
  1816  013A  01FB               	clrf	_eusartTxHead	;volatile
  1817                           
  1818                           ;eusart.c: 150: }
  1819                           ;eusart.c: 151: eusartTxBufferRemaining--;
  1820  013B  3001               	movlw	1
  1821  013C  0020               	movlb	0	; select bank0
  1822  013D  02BD               	subwf	_eusartTxBufferRemaining,f	;volatile
  1823  013E                     l1069:	
  1824                           
  1825                           ;eusart.c: 152: }
  1826                           ;eusart.c: 153: PIE1bits.TXIE = 1;
  1827  013E  0021               	movlb	1	; select bank1
  1828  013F  1611               	bsf	17,4	;volatile
  1829  0140  0008               	return
  1830  0141                     __end_of_EUSART_Write:	
  1831                           
  1832                           	psect	text5
  1833  01EB                     __ptext5:	
  1834 ;; *************** function _SYSTEM_Initialize *****************
  1835 ;; Defined at:
  1836 ;;		line 70 in file "mcc_generated_files/mcc.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;		None
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;		None
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  1    wreg      void 
  1843 ;; Registers used:
  1844 ;;		wreg, status,2, status,0, pclath, cstack
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1850 ;;      Params:         0       0       0       0       0       0       0       0
  1851 ;;      Locals:         0       0       0       0       0       0       0       0
  1852 ;;      Temps:          0       0       0       0       0       0       0       0
  1853 ;;      Totals:         0       0       0       0       0       0       0       0
  1854 ;;Total ram usage:        0 bytes
  1855 ;; Hardware stack levels used:    1
  1856 ;; Hardware stack levels required when called:    3
  1857 ;; This function calls:
  1858 ;;		_EUSART_Initialize
  1859 ;;		_OSCILLATOR_Initialize
  1860 ;;		_PIN_MANAGER_Initialize
  1861 ;;		_WDT_Initialize
  1862 ;; This function is called by:
  1863 ;;		_main
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           
  1868                           ;psect for function _SYSTEM_Initialize
  1869  01EB                     _SYSTEM_Initialize:	
  1870                           
  1871                           ;mcc.c: 73: PIN_MANAGER_Initialize();
  1872                           
  1873                           ;incstack = 0
  1874                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1875  01EB  3181  2141  3181   	fcall	_PIN_MANAGER_Initialize
  1876                           
  1877                           ;mcc.c: 74: OSCILLATOR_Initialize();
  1878  01EE  3182  2212  3181   	fcall	_OSCILLATOR_Initialize
  1879                           
  1880                           ;mcc.c: 75: WDT_Initialize();
  1881  01F1  3182  2217  3181   	fcall	_WDT_Initialize
  1882                           
  1883                           ;mcc.c: 76: EUSART_Initialize();
  1884  01F4  3181  219E         	fcall	_EUSART_Initialize
  1885  01F6  0008               	return
  1886  01F7                     __end_of_SYSTEM_Initialize:	
  1887                           
  1888                           	psect	text6
  1889  0217                     __ptext6:	
  1890 ;; *************** function _WDT_Initialize *****************
  1891 ;; Defined at:
  1892 ;;		line 87 in file "mcc_generated_files/mcc.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;		None
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;		None
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      void 
  1899 ;; Registers used:
  1900 ;;		wreg
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1906 ;;      Params:         0       0       0       0       0       0       0       0
  1907 ;;      Locals:         0       0       0       0       0       0       0       0
  1908 ;;      Temps:          0       0       0       0       0       0       0       0
  1909 ;;      Totals:         0       0       0       0       0       0       0       0
  1910 ;;Total ram usage:        0 bytes
  1911 ;; Hardware stack levels used:    1
  1912 ;; Hardware stack levels required when called:    2
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_SYSTEM_Initialize
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           
  1921                           ;psect for function _WDT_Initialize
  1922  0217                     _WDT_Initialize:	
  1923                           
  1924                           ;mcc.c: 90: WDTCON = 0x16;
  1925                           
  1926                           ;incstack = 0
  1927                           ; Regs used in _WDT_Initialize: [wreg]
  1928  0217  3016               	movlw	22
  1929  0218  0021               	movlb	1	; select bank1
  1930  0219  0097               	movwf	23	;volatile
  1931  021A  0008               	return
  1932  021B                     __end_of_WDT_Initialize:	
  1933                           
  1934                           	psect	text7
  1935  0141                     __ptext7:	
  1936 ;; *************** function _PIN_MANAGER_Initialize *****************
  1937 ;; Defined at:
  1938 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;		None
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;		None
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      void 
  1945 ;; Registers used:
  1946 ;;		wreg, status,2
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1952 ;;      Params:         0       0       0       0       0       0       0       0
  1953 ;;      Locals:         0       0       0       0       0       0       0       0
  1954 ;;      Temps:          0       0       0       0       0       0       0       0
  1955 ;;      Totals:         0       0       0       0       0       0       0       0
  1956 ;;Total ram usage:        0 bytes
  1957 ;; Hardware stack levels used:    1
  1958 ;; Hardware stack levels required when called:    2
  1959 ;; This function calls:
  1960 ;;		Nothing
  1961 ;; This function is called by:
  1962 ;;		_SYSTEM_Initialize
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           
  1967                           ;psect for function _PIN_MANAGER_Initialize
  1968  0141                     _PIN_MANAGER_Initialize:	
  1969                           
  1970                           ;pin_manager.c: 57: LATE = 0x00;
  1971                           
  1972                           ;incstack = 0
  1973                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1974  0141  0022               	movlb	2	; select bank2
  1975  0142  0190               	clrf	16	;volatile
  1976                           
  1977                           ;pin_manager.c: 58: LATD = 0x00;
  1978  0143  018F               	clrf	15	;volatile
  1979                           
  1980                           ;pin_manager.c: 59: LATA = 0x00;
  1981  0144  018C               	clrf	12	;volatile
  1982                           
  1983                           ;pin_manager.c: 60: LATB = 0x00;
  1984  0145  018D               	clrf	13	;volatile
  1985                           
  1986                           ;pin_manager.c: 61: LATC = 0x00;
  1987  0146  018E               	clrf	14	;volatile
  1988                           
  1989                           ;pin_manager.c: 66: TRISE = 0x0F;
  1990  0147  300F               	movlw	15
  1991  0148  0021               	movlb	1	; select bank1
  1992  0149  0090               	movwf	16	;volatile
  1993                           
  1994                           ;pin_manager.c: 67: TRISA = 0xFF;
  1995  014A  30FF               	movlw	255
  1996  014B  008C               	movwf	12	;volatile
  1997                           
  1998                           ;pin_manager.c: 68: TRISB = 0x00;
  1999  014C  018D               	clrf	13	;volatile
  2000                           
  2001                           ;pin_manager.c: 69: TRISC = 0xBF;
  2002  014D  30BF               	movlw	191
  2003  014E  008E               	movwf	14	;volatile
  2004                           
  2005                           ;pin_manager.c: 70: TRISD = 0xFF;
  2006  014F  30FF               	movlw	255
  2007  0150  008F               	movwf	15	;volatile
  2008                           
  2009                           ;pin_manager.c: 75: ANSELB = 0x3F;
  2010  0151  303F               	movlw	63
  2011  0152  0023               	movlb	3	; select bank3
  2012  0153  008D               	movwf	13	;volatile
  2013                           
  2014                           ;pin_manager.c: 76: ANSELD = 0xFF;
  2015  0154  30FF               	movlw	255
  2016  0155  008F               	movwf	15	;volatile
  2017                           
  2018                           ;pin_manager.c: 77: ANSELE = 0x07;
  2019  0156  3007               	movlw	7
  2020  0157  0090               	movwf	16	;volatile
  2021                           
  2022                           ;pin_manager.c: 78: ANSELA = 0x3F;
  2023  0158  303F               	movlw	63
  2024  0159  008C               	movwf	12	;volatile
  2025                           
  2026                           ;pin_manager.c: 83: WPUE = 0x08;
  2027  015A  3008               	movlw	8
  2028  015B  0024               	movlb	4	; select bank4
  2029  015C  0090               	movwf	16	;volatile
  2030                           
  2031                           ;pin_manager.c: 84: WPUB = 0xFF;
  2032  015D  30FF               	movlw	255
  2033  015E  008D               	movwf	13	;volatile
  2034                           
  2035                           ;pin_manager.c: 85: OPTION_REGbits.nWPUEN = 0;
  2036  015F  0021               	movlb	1	; select bank1
  2037  0160  1395               	bcf	21,7	;volatile
  2038                           
  2039                           ;pin_manager.c: 91: APFCON = 0x00;
  2040  0161  0022               	movlb	2	; select bank2
  2041  0162  019D               	clrf	29	;volatile
  2042  0163  0008               	return
  2043  0164                     __end_of_PIN_MANAGER_Initialize:	
  2044                           
  2045                           	psect	text8
  2046  0212                     __ptext8:	
  2047 ;; *************** function _OSCILLATOR_Initialize *****************
  2048 ;; Defined at:
  2049 ;;		line 79 in file "mcc_generated_files/mcc.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;		None
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;		None
  2054 ;; Return value:  Size  Location     Type
  2055 ;;                  1    wreg      void 
  2056 ;; Registers used:
  2057 ;;		wreg, status,2
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2063 ;;      Params:         0       0       0       0       0       0       0       0
  2064 ;;      Locals:         0       0       0       0       0       0       0       0
  2065 ;;      Temps:          0       0       0       0       0       0       0       0
  2066 ;;      Totals:         0       0       0       0       0       0       0       0
  2067 ;;Total ram usage:        0 bytes
  2068 ;; Hardware stack levels used:    1
  2069 ;; Hardware stack levels required when called:    2
  2070 ;; This function calls:
  2071 ;;		Nothing
  2072 ;; This function is called by:
  2073 ;;		_SYSTEM_Initialize
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           
  2078                           ;psect for function _OSCILLATOR_Initialize
  2079  0212                     _OSCILLATOR_Initialize:	
  2080                           
  2081                           ;mcc.c: 82: OSCCON = 0x38;
  2082                           
  2083                           ;incstack = 0
  2084                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2085  0212  3038               	movlw	56
  2086  0213  0021               	movlb	1	; select bank1
  2087  0214  0099               	movwf	25	;volatile
  2088                           
  2089                           ;mcc.c: 84: OSCTUNE = 0x00;
  2090  0215  0198               	clrf	24	;volatile
  2091  0216  0008               	return
  2092  0217                     __end_of_OSCILLATOR_Initialize:	
  2093                           
  2094                           	psect	text9
  2095  019E                     __ptext9:	
  2096 ;; *************** function _EUSART_Initialize *****************
  2097 ;; Defined at:
  2098 ;;		line 76 in file "mcc_generated_files/eusart.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;		None
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;		None
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2112 ;;      Params:         0       0       0       0       0       0       0       0
  2113 ;;      Locals:         0       0       0       0       0       0       0       0
  2114 ;;      Temps:          1       0       0       0       0       0       0       0
  2115 ;;      Totals:         1       0       0       0       0       0       0       0
  2116 ;;Total ram usage:        1 bytes
  2117 ;; Hardware stack levels used:    1
  2118 ;; Hardware stack levels required when called:    2
  2119 ;; This function calls:
  2120 ;;		Nothing
  2121 ;; This function is called by:
  2122 ;;		_SYSTEM_Initialize
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           
  2127                           ;psect for function _EUSART_Initialize
  2128  019E                     _EUSART_Initialize:	
  2129                           
  2130                           ;eusart.c: 79: PIE1bits.RCIE = 0;
  2131                           
  2132                           ;incstack = 0
  2133                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  2134  019E  0021               	movlb	1	; select bank1
  2135  019F  1291               	bcf	17,5	;volatile
  2136                           
  2137                           ;eusart.c: 80: PIE1bits.TXIE = 0;
  2138  01A0  1211               	bcf	17,4	;volatile
  2139                           
  2140                           ;eusart.c: 85: BAUDCON = 0x08;
  2141  01A1  3008               	movlw	8
  2142  01A2  0023               	movlb	3	; select bank3
  2143  01A3  009F               	movwf	31	;volatile
  2144                           
  2145                           ;eusart.c: 88: RCSTA = 0x90;
  2146  01A4  3090               	movlw	144
  2147  01A5  009D               	movwf	29	;volatile
  2148                           
  2149                           ;eusart.c: 91: TXSTA = 0x24;
  2150  01A6  3024               	movlw	36
  2151  01A7  009E               	movwf	30	;volatile
  2152                           
  2153                           ;eusart.c: 94: SPBRGL = 0xDF;
  2154  01A8  30DF               	movlw	223
  2155  01A9  009B               	movwf	27	;volatile
  2156                           
  2157                           ;eusart.c: 97: SPBRGH = 0x01;
  2158  01AA  3001               	movlw	1
  2159  01AB  009C               	movwf	28	;volatile
  2160                           
  2161                           ;eusart.c: 101: eusartTxHead = 0;
  2162  01AC  01FB               	clrf	_eusartTxHead	;volatile
  2163                           
  2164                           ;eusart.c: 102: eusartTxTail = 0;
  2165  01AD  01FA               	clrf	_eusartTxTail	;volatile
  2166                           
  2167                           ;eusart.c: 103: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  2168  01AE  3008               	movlw	8
  2169  01AF  00F2               	movwf	??_EUSART_Initialize
  2170  01B0  0872               	movf	??_EUSART_Initialize,w
  2171  01B1  0020               	movlb	0	; select bank0
  2172  01B2  00BD               	movwf	_eusartTxBufferRemaining	;volatile
  2173                           
  2174                           ;eusart.c: 105: eusartRxHead = 0;
  2175  01B3  01B5               	clrf	_eusartRxHead	;volatile
  2176                           
  2177                           ;eusart.c: 106: eusartRxTail = 0;
  2178  01B4  01B4               	clrf	_eusartRxTail	;volatile
  2179                           
  2180                           ;eusart.c: 107: eusartRxCount = 0;
  2181  01B5  01B3               	clrf	_eusartRxCount	;volatile
  2182                           
  2183                           ;eusart.c: 110: PIE1bits.RCIE = 1;
  2184  01B6  0021               	movlb	1	; select bank1
  2185  01B7  1691               	bsf	17,5	;volatile
  2186  01B8  0008               	return
  2187  01B9                     __end_of_EUSART_Initialize:	
  2188                           
  2189                           	psect	intentry
  2190  0004                     __pintentry:	
  2191 ;; *************** function _INTERRUPT_InterruptManager *****************
  2192 ;; Defined at:
  2193 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;		None
  2196 ;; Auto vars:     Size  Location     Type
  2197 ;;		None
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  1    wreg      void 
  2200 ;; Registers used:
  2201 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2207 ;;      Params:         0       0       0       0       0       0       0       0
  2208 ;;      Locals:         0       0       0       0       0       0       0       0
  2209 ;;      Temps:          1       0       0       0       0       0       0       0
  2210 ;;      Totals:         1       0       0       0       0       0       0       0
  2211 ;;Total ram usage:        1 bytes
  2212 ;; Hardware stack levels used:    1
  2213 ;; Hardware stack levels required when called:    1
  2214 ;; This function calls:
  2215 ;;		_EUSART_Receive_ISR
  2216 ;;		_EUSART_Transmit_ISR
  2217 ;; This function is called by:
  2218 ;;		Interrupt level 1
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222  0004                     _INTERRUPT_InterruptManager:	
  2223                           
  2224                           ;incstack = 0
  2225  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2226                           
  2227                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  2228  0005  3180               	pagesel	$
  2229  0006  0020               	movlb	0	; select bank0
  2230  0007  087F               	movf	127,w
  2231  0008  00F1               	movwf	??_INTERRUPT_InterruptManager
  2232                           
  2233                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE1bits.TXIE == 1 && PIR1bits.TXIF
      +                           == 1)
  2234  0009  1F0B               	btfss	11,6	;volatile
  2235  000A  2815               	goto	i1l157
  2236  000B  0021               	movlb	1	; select bank1
  2237  000C  1E11               	btfss	17,4	;volatile
  2238  000D  2815               	goto	i1l157
  2239  000E  0020               	movlb	0	; select bank0
  2240  000F  1E11               	btfss	17,4	;volatile
  2241  0010  2815               	goto	i1l157
  2242                           
  2243                           ;interrupt_manager.c: 55: {
  2244                           ;interrupt_manager.c: 56: EUSART_Transmit_ISR();
  2245  0011  3181  2181  3180   	fcall	_EUSART_Transmit_ISR
  2246                           
  2247                           ;interrupt_manager.c: 57: }
  2248  0014  281F               	goto	i1l161
  2249  0015                     i1l157:	
  2250                           
  2251                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE1bits.RCIE == 1 && PIR1bits
      +                          .RCIF == 1)
  2252  0015  1F0B               	btfss	11,6	;volatile
  2253  0016  281F               	goto	i1l161
  2254  0017  0021               	movlb	1	; select bank1
  2255  0018  1E91               	btfss	17,5	;volatile
  2256  0019  281F               	goto	i1l161
  2257  001A  0020               	movlb	0	; select bank0
  2258  001B  1E91               	btfss	17,5	;volatile
  2259  001C  281F               	goto	i1l161
  2260                           
  2261                           ;interrupt_manager.c: 59: {
  2262                           ;interrupt_manager.c: 61: EUSART_Receive_ISR();
  2263  001D  3180  20F0         	fcall	_EUSART_Receive_ISR
  2264  001F                     i1l161:	
  2265                           ;interrupt_manager.c: 63: else
  2266                           ;interrupt_manager.c: 64: {
  2267                           
  2268                           ;interrupt_manager.c: 62: }
  2269                           
  2270  001F  0871               	movf	??_INTERRUPT_InterruptManager,w
  2271  0020  0020               	movlb	0	; select bank0
  2272  0021  00FF               	movwf	127
  2273  0022  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2274  0023  0009               	retfie
  2275  0024                     __end_of_INTERRUPT_InterruptManager:	
  2276                           
  2277                           	psect	text11
  2278  0181                     __ptext11:	
  2279 ;; *************** function _EUSART_Transmit_ISR *****************
  2280 ;; Defined at:
  2281 ;;		line 166 in file "mcc_generated_files/eusart.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;		None
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;		None
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      void 
  2288 ;; Registers used:
  2289 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2295 ;;      Params:         0       0       0       0       0       0       0       0
  2296 ;;      Locals:         0       0       0       0       0       0       0       0
  2297 ;;      Temps:          1       0       0       0       0       0       0       0
  2298 ;;      Totals:         1       0       0       0       0       0       0       0
  2299 ;;Total ram usage:        1 bytes
  2300 ;; Hardware stack levels used:    1
  2301 ;; This function calls:
  2302 ;;		Nothing
  2303 ;; This function is called by:
  2304 ;;		_INTERRUPT_InterruptManager
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           
  2309                           ;psect for function _EUSART_Transmit_ISR
  2310  0181                     _EUSART_Transmit_ISR:	
  2311                           
  2312                           ;eusart.c: 170: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  2313                           
  2314                           ;incstack = 0
  2315                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2316  0181  3008               	movlw	8
  2317  0182  0020               	movlb	0	; select bank0
  2318  0183  023D               	subwf	_eusartTxBufferRemaining,w	;volatile
  2319  0184  1803               	skipnc
  2320  0185  299B               	goto	i1l133
  2321                           
  2322                           ;eusart.c: 171: {
  2323                           ;eusart.c: 172: TXREG = eusartTxBuffer[eusartTxTail++];
  2324  0186  087A               	movf	_eusartTxTail,w
  2325  0187  3E28               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  2326  0188  0086               	movwf	6
  2327  0189  0187               	clrf	7
  2328  018A  0801               	movf	1,w
  2329  018B  0023               	movlb	3	; select bank3
  2330  018C  009A               	movwf	26	;volatile
  2331  018D  3001               	movlw	1
  2332  018E  00F0               	movwf	??_EUSART_Transmit_ISR
  2333  018F  0870               	movf	??_EUSART_Transmit_ISR,w
  2334  0190  07FA               	addwf	_eusartTxTail,f	;volatile
  2335                           
  2336                           ;eusart.c: 173: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  2337  0191  3008               	movlw	8
  2338  0192  027A               	subwf	_eusartTxTail,w	;volatile
  2339  0193  1803               	btfsc	3,0
  2340                           
  2341                           ;eusart.c: 174: {
  2342                           ;eusart.c: 175: eusartTxTail = 0;
  2343  0194  01FA               	clrf	_eusartTxTail	;volatile
  2344                           
  2345                           ;eusart.c: 176: }
  2346                           ;eusart.c: 177: eusartTxBufferRemaining++;
  2347  0195  3001               	movlw	1
  2348  0196  00F0               	movwf	??_EUSART_Transmit_ISR
  2349  0197  0870               	movf	??_EUSART_Transmit_ISR,w
  2350  0198  0020               	movlb	0	; select bank0
  2351  0199  07BD               	addwf	_eusartTxBufferRemaining,f	;volatile
  2352                           
  2353                           ;eusart.c: 178: }
  2354  019A  0008               	return
  2355  019B                     i1l133:	
  2356                           
  2357                           ;eusart.c: 179: else
  2358                           ;eusart.c: 180: {
  2359                           ;eusart.c: 181: PIE1bits.TXIE = 0;
  2360  019B  0021               	movlb	1	; select bank1
  2361  019C  1211               	bcf	17,4	;volatile
  2362  019D  0008               	return
  2363  019E                     __end_of_EUSART_Transmit_ISR:	
  2364                           
  2365                           	psect	text12
  2366  00F0                     __ptext12:	
  2367 ;; *************** function _EUSART_Receive_ISR *****************
  2368 ;; Defined at:
  2369 ;;		line 185 in file "mcc_generated_files/eusart.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;		None
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;		None
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  1    wreg      void 
  2376 ;; Registers used:
  2377 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2383 ;;      Params:         0       0       0       0       0       0       0       0
  2384 ;;      Locals:         0       0       0       0       0       0       0       0
  2385 ;;      Temps:          1       0       0       0       0       0       0       0
  2386 ;;      Totals:         1       0       0       0       0       0       0       0
  2387 ;;Total ram usage:        1 bytes
  2388 ;; Hardware stack levels used:    1
  2389 ;; This function calls:
  2390 ;;		Nothing
  2391 ;; This function is called by:
  2392 ;;		_INTERRUPT_InterruptManager
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           
  2397                           ;psect for function _EUSART_Receive_ISR
  2398  00F0                     _EUSART_Receive_ISR:	
  2399                           
  2400                           ;eusart.c: 188: if(1 == RCSTAbits.OERR)
  2401                           
  2402                           ;incstack = 0
  2403                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2404  00F0  0023               	movlb	3	; select bank3
  2405  00F1  1C9D               	btfss	29,1	;volatile
  2406  00F2  28F5               	goto	i1l967
  2407                           
  2408                           ;eusart.c: 189: {
  2409                           ;eusart.c: 192: RCSTAbits.CREN = 0;
  2410  00F3  121D               	bcf	29,4	;volatile
  2411                           
  2412                           ;eusart.c: 193: RCSTAbits.CREN = 1;
  2413  00F4  161D               	bsf	29,4	;volatile
  2414  00F5                     i1l967:	
  2415                           
  2416                           ;eusart.c: 194: }
  2417                           ;eusart.c: 197: eusartRxBuffer[eusartRxHead++] = RCREG;
  2418  00F5  0819               	movf	25,w	;volatile
  2419  00F6  00F0               	movwf	??_EUSART_Receive_ISR
  2420  00F7  0020               	movlb	0	; select bank0
  2421  00F8  0835               	movf	_eusartRxHead,w
  2422  00F9  3E20               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  2423  00FA  0086               	movwf	6
  2424  00FB  0187               	clrf	7
  2425  00FC  0870               	movf	??_EUSART_Receive_ISR,w
  2426  00FD  0081               	movwf	1
  2427  00FE  3001               	movlw	1
  2428  00FF  00F0               	movwf	??_EUSART_Receive_ISR
  2429  0100  0870               	movf	??_EUSART_Receive_ISR,w
  2430  0101  07B5               	addwf	_eusartRxHead,f	;volatile
  2431                           
  2432                           ;eusart.c: 198: rcreg=RCREG;
  2433  0102  0023               	movlb	3	; select bank3
  2434  0103  0819               	movf	25,w	;volatile
  2435  0104  00F0               	movwf	??_EUSART_Receive_ISR
  2436  0105  0870               	movf	??_EUSART_Receive_ISR,w
  2437  0106  0020               	movlb	0	; select bank0
  2438  0107  00B2               	movwf	_rcreg	;volatile
  2439                           
  2440                           ;eusart.c: 200: if(rcreg=='G')
  2441  0108  3047               	movlw	71
  2442  0109  0632               	xorwf	_rcreg,w	;volatile
  2443  010A  1D03               	btfss	3,2
  2444  010B  2915               	goto	i1l979
  2445                           
  2446                           ;eusart.c: 201: {
  2447                           ;eusart.c: 202: LATB=0xAA;
  2448  010C  30AA               	movlw	170
  2449  010D  0022               	movlb	2	; select bank2
  2450  010E  008D               	movwf	13	;volatile
  2451                           
  2452                           ;eusart.c: 203: flag=1;
  2453  010F  3001               	movlw	1
  2454  0110  0020               	movlb	0	; select bank0
  2455  0111  00B0               	movwf	_flag
  2456  0112  3000               	movlw	0
  2457  0113  00B1               	movwf	_flag+1
  2458                           
  2459                           ;eusart.c: 204: rcreg=0;
  2460  0114  01B2               	clrf	_rcreg	;volatile
  2461  0115                     i1l979:	
  2462                           
  2463                           ;eusart.c: 205: }
  2464                           ;eusart.c: 209: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  2465  0115  3008               	movlw	8
  2466  0116  0235               	subwf	_eusartRxHead,w	;volatile
  2467  0117  1803               	btfsc	3,0
  2468                           
  2469                           ;eusart.c: 210: {
  2470                           ;eusart.c: 211: eusartRxHead = 0;
  2471  0118  01B5               	clrf	_eusartRxHead	;volatile
  2472                           
  2473                           ;eusart.c: 212: }
  2474                           ;eusart.c: 213: eusartRxCount++;
  2475  0119  3001               	movlw	1
  2476  011A  00F0               	movwf	??_EUSART_Receive_ISR
  2477  011B  0870               	movf	??_EUSART_Receive_ISR,w
  2478  011C  07B3               	addwf	_eusartRxCount,f	;volatile
  2479  011D  0008               	return
  2480  011E                     __end_of_EUSART_Receive_ISR:	
  2481  007E                     btemp	set	126	;btemp
  2482  007E                     int$flags	set	126
  2483  007E                     wtemp0	set	126


Data Sizes:
    Strings     69
    Constant    0
    Data        0
    BSS         24
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      7      30
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_6(CODE[15]), STR_5(CODE[3]), STR_4(CODE[6]), STR_3(CODE[21]), 
		 -> STR_2(CODE[14]), STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_printf
    _sms_text->_printf
    _printf->_putch
    _putch->_EUSART_Write
    _SYSTEM_Initialize->_EUSART_Initialize

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR

Critical Paths under _main in BANK0

    _main->_sms_text
    _sms_text->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1291
                                              4 BANK0      3     3      0
                  _SYSTEM_Initialize
                             _printf
                              _putch
                           _sms_text
 ---------------------------------------------------------------------------------
 (1) _sms_text                                             2     2      0     644
                                              2 BANK0      2     2      0
                             _printf
                              _putch
 ---------------------------------------------------------------------------------
 (2) _printf                                              19    17      2     551
                                              5 COMMON     5     3      2
                                              0 BANK0      2     2      0
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      93
                                              4 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      62
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
 ---------------------------------------------------------------------------------
 (6) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _printf
     _putch
       _EUSART_Write
   _putch
     _EUSART_Write
   _sms_text
     _printf
       _putch
         _EUSART_Write
     _putch
       _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      7      1E       6       37.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      2A      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu Sep 28 14:37:31 2017

                        __CFG_CP$OFF 0000                          __CFG_LVP$ON 0000  
                                l121 012A                         __CFG_CPD$OFF 0000  
                                u427 00A3                                  u437 00BB  
                                u447 00D2                                  u457 00E9  
                                u467 0044                                  u477 005B  
                                u487 0072                                  u497 008D  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                       __CFG_IESO$ON 0000                         __CFG_FOSC$HS 0000  
                               l1121 00D8                                 l1055 011F  
                               l1069 013E                                 l1077 0169  
                               STR_1 01F7                                 STR_2 01DD  
                               STR_3 01B9                                 STR_4 0201  
                               STR_5 021B                                 STR_6 01CE  
                               _LATA 010C                                 _LATB 010D  
                               _LATC 010E                                 _LATD 010F  
                               _LATE 0110                                 _WPUB 020D  
                               _WPUE 0210                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _flag 0030  
                               _main 0094                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                      __CFG_BOREN$ON 0000                                 start 0024  
                      __CFG_MCLRE$ON 0000                        ?_EUSART_Write 0070  
     __size_of_OSCILLATOR_Initialize 0005        __end_of_OSCILLATOR_Initialize 0217  
                              ?_main 0070                        __CFG_WDTE$OFF 0000  
                              i1l133 019B                                i1l161 001F  
                              i1l157 0015                                i1l967 00F5  
                              i1l979 0115                                _RCREG 0199  
                              _RCSTA 019D                                _TRISA 008C  
                              _TRISB 008D                                _TRISC 008E  
                              _TRISD 008F                                _TRISE 0090  
                              _TXREG 019A                                _TXSTA 019E  
                     _WDT_Initialize 0217                                _rcreg 0032  
                              _putch 020D                                main@x 003C  
                              status 0003                                wtemp0 007E  
                    __initialization 0026                         __end_of_main 00F0  
                     ??_EUSART_Write 0072          ?_INTERRUPT_InterruptManager 0070  
                             ??_main 003A                       __CFG_PLLEN$OFF 0000  
             __end_of_WDT_Initialize 021B                               _APFCON 011D  
                             _ANSELA 018C                               ?_putch 0070  
                             _ANSELB 018D                               _ANSELD 018F  
                             _ANSELE 0190                               _OSCCON 0099  
                             _SPBRGH 019C                               _SPBRGL 019B  
                             _WDTCON 0097                       __CFG_PWRTE$OFF 0000  
                     __CFG_STVREN$ON 0000                  _EUSART_Transmit_ISR 0181  
                             _printf 0164                      ?_WDT_Initialize 0070  
                   __end_of_sms_text 0094                 ?_EUSART_Transmit_ISR 0070  
                  _SYSTEM_Initialize 01EB              __end_of__initialization 002F  
                 ?_SYSTEM_Initialize 0070                       __pcstackCOMMON 0070  
                ??_SYSTEM_Initialize 0073                        __end_of_putch 0212  
                     _OPTION_REGbits 0095            __end_of_SYSTEM_Initialize 01F7  
              ??_EUSART_Transmit_ISR 0070                              ??_putch 0074  
                         __pbssBANK0 0020                 __end_of_EUSART_Write 0141  
                    __CFG_VCAPEN$OFF 0000          __size_of_EUSART_Receive_ISR 002E  
                         __pmaintext 0094                           __pintentry 0004  
                            _BAUDCON 019F                              ?_printf 0075  
                      _eusartRxCount 0033                              _OSCTUNE 0098  
                          ?_sms_text 0070                              __ptext1 0033  
                            __ptext2 0164                              __ptext3 020D  
                            __ptext4 011E                              __ptext5 01EB  
                            __ptext6 0217                              __ptext7 0141  
                            __ptext8 0212                              __ptext9 019E  
                    __size_of_printf 001D                _OSCILLATOR_Initialize 0212  
           ??_PIN_MANAGER_Initialize 0072           __size_of_SYSTEM_Initialize 000C  
                            clrloop0 0208                 end_of_initialization 002F  
                  _EUSART_Initialize 019E                   ?_EUSART_Initialize 0070  
                          _RCSTAbits 019D                              printf@c 0037  
                            printf@f 0075                           ??_sms_text 0038  
                ??_EUSART_Initialize 0072                     ??_WDT_Initialize 0072  
              __size_of_EUSART_Write 0023            __end_of_EUSART_Initialize 01B9  
                       _EUSART_Write 011E               ?_OSCILLATOR_Initialize 0070  
                     __end_of_printf 0181                  start_initialization 0026  
    __size_of_PIN_MANAGER_Initialize 0023                          putch@txData 0074  
                           ??_printf 0077          __end_of_EUSART_Transmit_ISR 019E  
                        __pbssCOMMON 007A                            ___latbits 0002  
                      __pcstackBANK0 0036           __end_of_EUSART_Receive_ISR 011E  
         __size_of_EUSART_Initialize 001B                            __pnvBANK0 003D  
             _PIN_MANAGER_Initialize 0141                         _eusartRxHead 0035  
                       _eusartTxHead 007B                         _eusartRxTail 0034  
                       _eusartTxTail 007A         ??_INTERRUPT_InterruptManager 0071  
                  __size_of_sms_text 0061              _eusartTxBufferRemaining 003D  
                     __size_of_putch 0005                       _eusartRxBuffer 0020  
                     _eusartTxBuffer 0028                            clear_ram0 0207  
                           _PIE1bits 0091  __size_of_INTERRUPT_InterruptManager 0020  
                           _PIR1bits 0011              ??_OSCILLATOR_Initialize 0072  
                           __ptext11 0181                             __ptext12 00F0  
                      __size_of_main 005C                             int$flags 007E  
                           _sms_text 0033   __end_of_INTERRUPT_InterruptManager 0024  
         _INTERRUPT_InterruptManager 0004                           _INTCONbits 000B  
            __size_of_WDT_Initialize 0004                             intlevel1 0000  
            ?_PIN_MANAGER_Initialize 0070                    __CFG_CLKOUTEN$OFF 0000  
                           printf@ap 0036                   _EUSART_Receive_ISR 00F0  
                      __pstringtext1 01B9                        __pstringtext2 01CE  
                      __pstringtext3 01DD                        __pstringtext4 01F7  
                      __pstringtext5 0201                        __pstringtext6 021B  
                      __pstringtext7 0000                  ?_EUSART_Receive_ISR 0070  
                 EUSART_Write@txData 0073         __size_of_EUSART_Transmit_ISR 001D  
     __end_of_PIN_MANAGER_Initialize 0164                 ??_EUSART_Receive_ISR 0070  
