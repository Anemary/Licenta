

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Tue Sep 26 21:16:23 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F1937
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 1.42
    33                           ; Generated 13/04/2017 GMT
    34                           ; 
    35                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F1937 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0110                     	;# 
   121  0111                     	;# 
   122  0112                     	;# 
   123  0113                     	;# 
   124  0114                     	;# 
   125  0115                     	;# 
   126  0116                     	;# 
   127  0117                     	;# 
   128  0118                     	;# 
   129  0119                     	;# 
   130  011A                     	;# 
   131  011B                     	;# 
   132  011D                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  018F                     	;# 
   136  0190                     	;# 
   137  0191                     	;# 
   138  0191                     	;# 
   139  0192                     	;# 
   140  0193                     	;# 
   141  0193                     	;# 
   142  0193                     	;# 
   143  0194                     	;# 
   144  0195                     	;# 
   145  0196                     	;# 
   146  0199                     	;# 
   147  019A                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019C                     	;# 
   153  019C                     	;# 
   154  019D                     	;# 
   155  019E                     	;# 
   156  019F                     	;# 
   157  020D                     	;# 
   158  0210                     	;# 
   159  0211                     	;# 
   160  0212                     	;# 
   161  0213                     	;# 
   162  0214                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0216                     	;# 
   166  0217                     	;# 
   167  0291                     	;# 
   168  0291                     	;# 
   169  0292                     	;# 
   170  0293                     	;# 
   171  0294                     	;# 
   172  0295                     	;# 
   173  0295                     	;# 
   174  0296                     	;# 
   175  0298                     	;# 
   176  0298                     	;# 
   177  0299                     	;# 
   178  029A                     	;# 
   179  029B                     	;# 
   180  029C                     	;# 
   181  029C                     	;# 
   182  029D                     	;# 
   183  029E                     	;# 
   184  029F                     	;# 
   185  0311                     	;# 
   186  0311                     	;# 
   187  0312                     	;# 
   188  0313                     	;# 
   189  0314                     	;# 
   190  0315                     	;# 
   191  0315                     	;# 
   192  0316                     	;# 
   193  0318                     	;# 
   194  0318                     	;# 
   195  0319                     	;# 
   196  031A                     	;# 
   197  031C                     	;# 
   198  031C                     	;# 
   199  031D                     	;# 
   200  031E                     	;# 
   201  0394                     	;# 
   202  0395                     	;# 
   203  0396                     	;# 
   204  0415                     	;# 
   205  0416                     	;# 
   206  0417                     	;# 
   207  041C                     	;# 
   208  041D                     	;# 
   209  041E                     	;# 
   210  0791                     	;# 
   211  0792                     	;# 
   212  0793                     	;# 
   213  0794                     	;# 
   214  0795                     	;# 
   215  0798                     	;# 
   216  0799                     	;# 
   217  079A                     	;# 
   218  07A0                     	;# 
   219  07A1                     	;# 
   220  07A2                     	;# 
   221  07A3                     	;# 
   222  07A4                     	;# 
   223  07A5                     	;# 
   224  07A6                     	;# 
   225  07A7                     	;# 
   226  07A8                     	;# 
   227  07A9                     	;# 
   228  07AA                     	;# 
   229  07AB                     	;# 
   230  0FE4                     	;# 
   231  0FE5                     	;# 
   232  0FE6                     	;# 
   233  0FE7                     	;# 
   234  0FE8                     	;# 
   235  0FE9                     	;# 
   236  0FEA                     	;# 
   237  0FEB                     	;# 
   238  0FED                     	;# 
   239  0FEE                     	;# 
   240  0FEF                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000F                     	;# 
   257  0010                     	;# 
   258  0011                     	;# 
   259  0012                     	;# 
   260  0013                     	;# 
   261  0015                     	;# 
   262  0016                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001C                     	;# 
   270  001E                     	;# 
   271  001F                     	;# 
   272  008C                     	;# 
   273  008D                     	;# 
   274  008E                     	;# 
   275  008F                     	;# 
   276  0090                     	;# 
   277  0091                     	;# 
   278  0092                     	;# 
   279  0093                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0110                     	;# 
   296  0111                     	;# 
   297  0112                     	;# 
   298  0113                     	;# 
   299  0114                     	;# 
   300  0115                     	;# 
   301  0116                     	;# 
   302  0117                     	;# 
   303  0118                     	;# 
   304  0119                     	;# 
   305  011A                     	;# 
   306  011B                     	;# 
   307  011D                     	;# 
   308  018C                     	;# 
   309  018D                     	;# 
   310  018F                     	;# 
   311  0190                     	;# 
   312  0191                     	;# 
   313  0191                     	;# 
   314  0192                     	;# 
   315  0193                     	;# 
   316  0193                     	;# 
   317  0193                     	;# 
   318  0194                     	;# 
   319  0195                     	;# 
   320  0196                     	;# 
   321  0199                     	;# 
   322  019A                     	;# 
   323  019B                     	;# 
   324  019B                     	;# 
   325  019B                     	;# 
   326  019B                     	;# 
   327  019C                     	;# 
   328  019C                     	;# 
   329  019D                     	;# 
   330  019E                     	;# 
   331  019F                     	;# 
   332  020D                     	;# 
   333  0210                     	;# 
   334  0211                     	;# 
   335  0212                     	;# 
   336  0213                     	;# 
   337  0214                     	;# 
   338  0215                     	;# 
   339  0215                     	;# 
   340  0216                     	;# 
   341  0217                     	;# 
   342  0291                     	;# 
   343  0291                     	;# 
   344  0292                     	;# 
   345  0293                     	;# 
   346  0294                     	;# 
   347  0295                     	;# 
   348  0295                     	;# 
   349  0296                     	;# 
   350  0298                     	;# 
   351  0298                     	;# 
   352  0299                     	;# 
   353  029A                     	;# 
   354  029B                     	;# 
   355  029C                     	;# 
   356  029C                     	;# 
   357  029D                     	;# 
   358  029E                     	;# 
   359  029F                     	;# 
   360  0311                     	;# 
   361  0311                     	;# 
   362  0312                     	;# 
   363  0313                     	;# 
   364  0314                     	;# 
   365  0315                     	;# 
   366  0315                     	;# 
   367  0316                     	;# 
   368  0318                     	;# 
   369  0318                     	;# 
   370  0319                     	;# 
   371  031A                     	;# 
   372  031C                     	;# 
   373  031C                     	;# 
   374  031D                     	;# 
   375  031E                     	;# 
   376  0394                     	;# 
   377  0395                     	;# 
   378  0396                     	;# 
   379  0415                     	;# 
   380  0416                     	;# 
   381  0417                     	;# 
   382  041C                     	;# 
   383  041D                     	;# 
   384  041E                     	;# 
   385  0791                     	;# 
   386  0792                     	;# 
   387  0793                     	;# 
   388  0794                     	;# 
   389  0795                     	;# 
   390  0798                     	;# 
   391  0799                     	;# 
   392  079A                     	;# 
   393  07A0                     	;# 
   394  07A1                     	;# 
   395  07A2                     	;# 
   396  07A3                     	;# 
   397  07A4                     	;# 
   398  07A5                     	;# 
   399  07A6                     	;# 
   400  07A7                     	;# 
   401  07A8                     	;# 
   402  07A9                     	;# 
   403  07AA                     	;# 
   404  07AB                     	;# 
   405  0FE4                     	;# 
   406  0FE5                     	;# 
   407  0FE6                     	;# 
   408  0FE7                     	;# 
   409  0FE8                     	;# 
   410  0FE9                     	;# 
   411  0FEA                     	;# 
   412  0FEB                     	;# 
   413  0FED                     	;# 
   414  0FEE                     	;# 
   415  0FEF                     	;# 
   416  0000                     	;# 
   417  0001                     	;# 
   418  0002                     	;# 
   419  0003                     	;# 
   420  0004                     	;# 
   421  0005                     	;# 
   422  0006                     	;# 
   423  0007                     	;# 
   424  0008                     	;# 
   425  0009                     	;# 
   426  000A                     	;# 
   427  000B                     	;# 
   428  000C                     	;# 
   429  000D                     	;# 
   430  000E                     	;# 
   431  000F                     	;# 
   432  0010                     	;# 
   433  0011                     	;# 
   434  0012                     	;# 
   435  0013                     	;# 
   436  0015                     	;# 
   437  0016                     	;# 
   438  0016                     	;# 
   439  0017                     	;# 
   440  0018                     	;# 
   441  0019                     	;# 
   442  001A                     	;# 
   443  001B                     	;# 
   444  001C                     	;# 
   445  001E                     	;# 
   446  001F                     	;# 
   447  008C                     	;# 
   448  008D                     	;# 
   449  008E                     	;# 
   450  008F                     	;# 
   451  0090                     	;# 
   452  0091                     	;# 
   453  0092                     	;# 
   454  0093                     	;# 
   455  0095                     	;# 
   456  0096                     	;# 
   457  0097                     	;# 
   458  0098                     	;# 
   459  0099                     	;# 
   460  009A                     	;# 
   461  009B                     	;# 
   462  009B                     	;# 
   463  009C                     	;# 
   464  009D                     	;# 
   465  009E                     	;# 
   466  010C                     	;# 
   467  010D                     	;# 
   468  010E                     	;# 
   469  010F                     	;# 
   470  0110                     	;# 
   471  0111                     	;# 
   472  0112                     	;# 
   473  0113                     	;# 
   474  0114                     	;# 
   475  0115                     	;# 
   476  0116                     	;# 
   477  0117                     	;# 
   478  0118                     	;# 
   479  0119                     	;# 
   480  011A                     	;# 
   481  011B                     	;# 
   482  011D                     	;# 
   483  018C                     	;# 
   484  018D                     	;# 
   485  018F                     	;# 
   486  0190                     	;# 
   487  0191                     	;# 
   488  0191                     	;# 
   489  0192                     	;# 
   490  0193                     	;# 
   491  0193                     	;# 
   492  0193                     	;# 
   493  0194                     	;# 
   494  0195                     	;# 
   495  0196                     	;# 
   496  0199                     	;# 
   497  019A                     	;# 
   498  019B                     	;# 
   499  019B                     	;# 
   500  019B                     	;# 
   501  019B                     	;# 
   502  019C                     	;# 
   503  019C                     	;# 
   504  019D                     	;# 
   505  019E                     	;# 
   506  019F                     	;# 
   507  020D                     	;# 
   508  0210                     	;# 
   509  0211                     	;# 
   510  0212                     	;# 
   511  0213                     	;# 
   512  0214                     	;# 
   513  0215                     	;# 
   514  0215                     	;# 
   515  0216                     	;# 
   516  0217                     	;# 
   517  0291                     	;# 
   518  0291                     	;# 
   519  0292                     	;# 
   520  0293                     	;# 
   521  0294                     	;# 
   522  0295                     	;# 
   523  0295                     	;# 
   524  0296                     	;# 
   525  0298                     	;# 
   526  0298                     	;# 
   527  0299                     	;# 
   528  029A                     	;# 
   529  029B                     	;# 
   530  029C                     	;# 
   531  029C                     	;# 
   532  029D                     	;# 
   533  029E                     	;# 
   534  029F                     	;# 
   535  0311                     	;# 
   536  0311                     	;# 
   537  0312                     	;# 
   538  0313                     	;# 
   539  0314                     	;# 
   540  0315                     	;# 
   541  0315                     	;# 
   542  0316                     	;# 
   543  0318                     	;# 
   544  0318                     	;# 
   545  0319                     	;# 
   546  031A                     	;# 
   547  031C                     	;# 
   548  031C                     	;# 
   549  031D                     	;# 
   550  031E                     	;# 
   551  0394                     	;# 
   552  0395                     	;# 
   553  0396                     	;# 
   554  0415                     	;# 
   555  0416                     	;# 
   556  0417                     	;# 
   557  041C                     	;# 
   558  041D                     	;# 
   559  041E                     	;# 
   560  0791                     	;# 
   561  0792                     	;# 
   562  0793                     	;# 
   563  0794                     	;# 
   564  0795                     	;# 
   565  0798                     	;# 
   566  0799                     	;# 
   567  079A                     	;# 
   568  07A0                     	;# 
   569  07A1                     	;# 
   570  07A2                     	;# 
   571  07A3                     	;# 
   572  07A4                     	;# 
   573  07A5                     	;# 
   574  07A6                     	;# 
   575  07A7                     	;# 
   576  07A8                     	;# 
   577  07A9                     	;# 
   578  07AA                     	;# 
   579  07AB                     	;# 
   580  0FE4                     	;# 
   581  0FE5                     	;# 
   582  0FE6                     	;# 
   583  0FE7                     	;# 
   584  0FE8                     	;# 
   585  0FE9                     	;# 
   586  0FEA                     	;# 
   587  0FEB                     	;# 
   588  0FED                     	;# 
   589  0FEE                     	;# 
   590  0FEF                     	;# 
   591  0000                     	;# 
   592  0001                     	;# 
   593  0002                     	;# 
   594  0003                     	;# 
   595  0004                     	;# 
   596  0005                     	;# 
   597  0006                     	;# 
   598  0007                     	;# 
   599  0008                     	;# 
   600  0009                     	;# 
   601  000A                     	;# 
   602  000B                     	;# 
   603  000C                     	;# 
   604  000D                     	;# 
   605  000E                     	;# 
   606  000F                     	;# 
   607  0010                     	;# 
   608  0011                     	;# 
   609  0012                     	;# 
   610  0013                     	;# 
   611  0015                     	;# 
   612  0016                     	;# 
   613  0016                     	;# 
   614  0017                     	;# 
   615  0018                     	;# 
   616  0019                     	;# 
   617  001A                     	;# 
   618  001B                     	;# 
   619  001C                     	;# 
   620  001E                     	;# 
   621  001F                     	;# 
   622  008C                     	;# 
   623  008D                     	;# 
   624  008E                     	;# 
   625  008F                     	;# 
   626  0090                     	;# 
   627  0091                     	;# 
   628  0092                     	;# 
   629  0093                     	;# 
   630  0095                     	;# 
   631  0096                     	;# 
   632  0097                     	;# 
   633  0098                     	;# 
   634  0099                     	;# 
   635  009A                     	;# 
   636  009B                     	;# 
   637  009B                     	;# 
   638  009C                     	;# 
   639  009D                     	;# 
   640  009E                     	;# 
   641  010C                     	;# 
   642  010D                     	;# 
   643  010E                     	;# 
   644  010F                     	;# 
   645  0110                     	;# 
   646  0111                     	;# 
   647  0112                     	;# 
   648  0113                     	;# 
   649  0114                     	;# 
   650  0115                     	;# 
   651  0116                     	;# 
   652  0117                     	;# 
   653  0118                     	;# 
   654  0119                     	;# 
   655  011A                     	;# 
   656  011B                     	;# 
   657  011D                     	;# 
   658  018C                     	;# 
   659  018D                     	;# 
   660  018F                     	;# 
   661  0190                     	;# 
   662  0191                     	;# 
   663  0191                     	;# 
   664  0192                     	;# 
   665  0193                     	;# 
   666  0193                     	;# 
   667  0193                     	;# 
   668  0194                     	;# 
   669  0195                     	;# 
   670  0196                     	;# 
   671  0199                     	;# 
   672  019A                     	;# 
   673  019B                     	;# 
   674  019B                     	;# 
   675  019B                     	;# 
   676  019B                     	;# 
   677  019C                     	;# 
   678  019C                     	;# 
   679  019D                     	;# 
   680  019E                     	;# 
   681  019F                     	;# 
   682  020D                     	;# 
   683  0210                     	;# 
   684  0211                     	;# 
   685  0212                     	;# 
   686  0213                     	;# 
   687  0214                     	;# 
   688  0215                     	;# 
   689  0215                     	;# 
   690  0216                     	;# 
   691  0217                     	;# 
   692  0291                     	;# 
   693  0291                     	;# 
   694  0292                     	;# 
   695  0293                     	;# 
   696  0294                     	;# 
   697  0295                     	;# 
   698  0295                     	;# 
   699  0296                     	;# 
   700  0298                     	;# 
   701  0298                     	;# 
   702  0299                     	;# 
   703  029A                     	;# 
   704  029B                     	;# 
   705  029C                     	;# 
   706  029C                     	;# 
   707  029D                     	;# 
   708  029E                     	;# 
   709  029F                     	;# 
   710  0311                     	;# 
   711  0311                     	;# 
   712  0312                     	;# 
   713  0313                     	;# 
   714  0314                     	;# 
   715  0315                     	;# 
   716  0315                     	;# 
   717  0316                     	;# 
   718  0318                     	;# 
   719  0318                     	;# 
   720  0319                     	;# 
   721  031A                     	;# 
   722  031C                     	;# 
   723  031C                     	;# 
   724  031D                     	;# 
   725  031E                     	;# 
   726  0394                     	;# 
   727  0395                     	;# 
   728  0396                     	;# 
   729  0415                     	;# 
   730  0416                     	;# 
   731  0417                     	;# 
   732  041C                     	;# 
   733  041D                     	;# 
   734  041E                     	;# 
   735  0791                     	;# 
   736  0792                     	;# 
   737  0793                     	;# 
   738  0794                     	;# 
   739  0795                     	;# 
   740  0798                     	;# 
   741  0799                     	;# 
   742  079A                     	;# 
   743  07A0                     	;# 
   744  07A1                     	;# 
   745  07A2                     	;# 
   746  07A3                     	;# 
   747  07A4                     	;# 
   748  07A5                     	;# 
   749  07A6                     	;# 
   750  07A7                     	;# 
   751  07A8                     	;# 
   752  07A9                     	;# 
   753  07AA                     	;# 
   754  07AB                     	;# 
   755  0FE4                     	;# 
   756  0FE5                     	;# 
   757  0FE6                     	;# 
   758  0FE7                     	;# 
   759  0FE8                     	;# 
   760  0FE9                     	;# 
   761  0FEA                     	;# 
   762  0FEB                     	;# 
   763  0FED                     	;# 
   764  0FEE                     	;# 
   765  0FEF                     	;# 
   766  0000                     	;# 
   767  0001                     	;# 
   768  0002                     	;# 
   769  0003                     	;# 
   770  0004                     	;# 
   771  0005                     	;# 
   772  0006                     	;# 
   773  0007                     	;# 
   774  0008                     	;# 
   775  0009                     	;# 
   776  000A                     	;# 
   777  000B                     	;# 
   778  000C                     	;# 
   779  000D                     	;# 
   780  000E                     	;# 
   781  000F                     	;# 
   782  0010                     	;# 
   783  0011                     	;# 
   784  0012                     	;# 
   785  0013                     	;# 
   786  0015                     	;# 
   787  0016                     	;# 
   788  0016                     	;# 
   789  0017                     	;# 
   790  0018                     	;# 
   791  0019                     	;# 
   792  001A                     	;# 
   793  001B                     	;# 
   794  001C                     	;# 
   795  001E                     	;# 
   796  001F                     	;# 
   797  008C                     	;# 
   798  008D                     	;# 
   799  008E                     	;# 
   800  008F                     	;# 
   801  0090                     	;# 
   802  0091                     	;# 
   803  0092                     	;# 
   804  0093                     	;# 
   805  0095                     	;# 
   806  0096                     	;# 
   807  0097                     	;# 
   808  0098                     	;# 
   809  0099                     	;# 
   810  009A                     	;# 
   811  009B                     	;# 
   812  009B                     	;# 
   813  009C                     	;# 
   814  009D                     	;# 
   815  009E                     	;# 
   816  010C                     	;# 
   817  010D                     	;# 
   818  010E                     	;# 
   819  010F                     	;# 
   820  0110                     	;# 
   821  0111                     	;# 
   822  0112                     	;# 
   823  0113                     	;# 
   824  0114                     	;# 
   825  0115                     	;# 
   826  0116                     	;# 
   827  0117                     	;# 
   828  0118                     	;# 
   829  0119                     	;# 
   830  011A                     	;# 
   831  011B                     	;# 
   832  011D                     	;# 
   833  018C                     	;# 
   834  018D                     	;# 
   835  018F                     	;# 
   836  0190                     	;# 
   837  0191                     	;# 
   838  0191                     	;# 
   839  0192                     	;# 
   840  0193                     	;# 
   841  0193                     	;# 
   842  0193                     	;# 
   843  0194                     	;# 
   844  0195                     	;# 
   845  0196                     	;# 
   846  0199                     	;# 
   847  019A                     	;# 
   848  019B                     	;# 
   849  019B                     	;# 
   850  019B                     	;# 
   851  019B                     	;# 
   852  019C                     	;# 
   853  019C                     	;# 
   854  019D                     	;# 
   855  019E                     	;# 
   856  019F                     	;# 
   857  020D                     	;# 
   858  0210                     	;# 
   859  0211                     	;# 
   860  0212                     	;# 
   861  0213                     	;# 
   862  0214                     	;# 
   863  0215                     	;# 
   864  0215                     	;# 
   865  0216                     	;# 
   866  0217                     	;# 
   867  0291                     	;# 
   868  0291                     	;# 
   869  0292                     	;# 
   870  0293                     	;# 
   871  0294                     	;# 
   872  0295                     	;# 
   873  0295                     	;# 
   874  0296                     	;# 
   875  0298                     	;# 
   876  0298                     	;# 
   877  0299                     	;# 
   878  029A                     	;# 
   879  029B                     	;# 
   880  029C                     	;# 
   881  029C                     	;# 
   882  029D                     	;# 
   883  029E                     	;# 
   884  029F                     	;# 
   885  0311                     	;# 
   886  0311                     	;# 
   887  0312                     	;# 
   888  0313                     	;# 
   889  0314                     	;# 
   890  0315                     	;# 
   891  0315                     	;# 
   892  0316                     	;# 
   893  0318                     	;# 
   894  0318                     	;# 
   895  0319                     	;# 
   896  031A                     	;# 
   897  031C                     	;# 
   898  031C                     	;# 
   899  031D                     	;# 
   900  031E                     	;# 
   901  0394                     	;# 
   902  0395                     	;# 
   903  0396                     	;# 
   904  0415                     	;# 
   905  0416                     	;# 
   906  0417                     	;# 
   907  041C                     	;# 
   908  041D                     	;# 
   909  041E                     	;# 
   910  0791                     	;# 
   911  0792                     	;# 
   912  0793                     	;# 
   913  0794                     	;# 
   914  0795                     	;# 
   915  0798                     	;# 
   916  0799                     	;# 
   917  079A                     	;# 
   918  07A0                     	;# 
   919  07A1                     	;# 
   920  07A2                     	;# 
   921  07A3                     	;# 
   922  07A4                     	;# 
   923  07A5                     	;# 
   924  07A6                     	;# 
   925  07A7                     	;# 
   926  07A8                     	;# 
   927  07A9                     	;# 
   928  07AA                     	;# 
   929  07AB                     	;# 
   930  0FE4                     	;# 
   931  0FE5                     	;# 
   932  0FE6                     	;# 
   933  0FE7                     	;# 
   934  0FE8                     	;# 
   935  0FE9                     	;# 
   936  0FEA                     	;# 
   937  0FEB                     	;# 
   938  0FED                     	;# 
   939  0FEE                     	;# 
   940  0FEF                     	;# 
   941                           
   942                           	psect	nvBANK0
   943  0038                     __pnvBANK0:	
   944  0038                     _eusartTxBufferRemaining:	
   945  0038                     	ds	1
   946  0011                     _PIR1bits	set	17
   947  000B                     _INTCONbits	set	11
   948  0091                     _PIE1bits	set	145
   949  0095                     _OPTION_REGbits	set	149
   950  008F                     _TRISD	set	143
   951  008E                     _TRISC	set	142
   952  008D                     _TRISB	set	141
   953  008C                     _TRISA	set	140
   954  0090                     _TRISE	set	144
   955  0097                     _WDTCON	set	151
   956  0098                     _OSCTUNE	set	152
   957  0099                     _OSCCON	set	153
   958  011D                     _APFCON	set	285
   959  010E                     _LATC	set	270
   960  010D                     _LATB	set	269
   961  010C                     _LATA	set	268
   962  010F                     _LATD	set	271
   963  0110                     _LATE	set	272
   964  0199                     _RCREG	set	409
   965  019D                     _RCSTAbits	set	413
   966  019A                     _TXREG	set	410
   967  019C                     _SPBRGH	set	412
   968  019B                     _SPBRGL	set	411
   969  019E                     _TXSTA	set	414
   970  019D                     _RCSTA	set	413
   971  019F                     _BAUDCON	set	415
   972  018C                     _ANSELA	set	396
   973  0190                     _ANSELE	set	400
   974  018F                     _ANSELD	set	399
   975  018D                     _ANSELB	set	397
   976  020D                     _WPUB	set	525
   977  0210                     _WPUE	set	528
   978                           
   979                           	psect	stringtext1
   980  018C                     __pstringtext1:	
   981  018C                     STR_5:	
   982  018C  3441               	retlw	65	;'A'
   983  018D  3454               	retlw	84	;'T'
   984  018E  342B               	retlw	43	;'+'
   985  018F  3443               	retlw	67	;'C'
   986  0190  344D               	retlw	77	;'M'
   987  0191  3447               	retlw	71	;'G'
   988  0192  3453               	retlw	83	;'S'
   989  0193  343D               	retlw	61	;'='
   990  0194  3422               	retlw	34	;'"'
   991  0195  3430               	retlw	48	;'0'
   992  0196  3437               	retlw	55	;'7'
   993  0197  3435               	retlw	53	;'5'
   994  0198  3437               	retlw	55	;'7'
   995  0199  3434               	retlw	52	;'4'
   996  019A  3439               	retlw	57	;'9'
   997  019B  3434               	retlw	52	;'4'
   998  019C  3438               	retlw	56	;'8'
   999  019D  3432               	retlw	50	;'2'
  1000  019E  3433               	retlw	51	;'3'
  1001  019F  3422               	retlw	34	;'"'
  1002  01A0  3400               	retlw	0
  1003                           
  1004                           	psect	stringtext2
  1005  01A1                     __pstringtext2:	
  1006  01A1                     STR_6:	
  1007  01A1  3473               	retlw	115	;'s'
  1008  01A2  346D               	retlw	109	;'m'
  1009  01A3  3473               	retlw	115	;'s'
  1010  01A4  3420               	retlw	32	;' '
  1011  01A5  3464               	retlw	100	;'d'
  1012  01A6  3465               	retlw	101	;'e'
  1013  01A7  346C               	retlw	108	;'l'
  1014  01A8  3461               	retlw	97	;'a'
  1015  01A9  3420               	retlw	32	;' '
  1016  01AA  3461               	retlw	97	;'a'
  1017  01AB  346E               	retlw	110	;'n'
  1018  01AC  3475               	retlw	117	;'u'
  1019  01AD  3474               	retlw	116	;'t'
  1020  01AE  347A               	retlw	122	;'z'
  1021  01AF  3461               	retlw	97	;'a'
  1022  01B0  3400               	retlw	0
  1023                           
  1024                           	psect	stringtext3
  1025  01B1                     __pstringtext3:	
  1026  01B1                     STR_2:	
  1027  01B1  3441               	retlw	65	;'A'
  1028  01B2  3454               	retlw	84	;'T'
  1029  01B3  342B               	retlw	43	;'+'
  1030  01B4  3443               	retlw	67	;'C'
  1031  01B5  3450               	retlw	80	;'P'
  1032  01B6  3449               	retlw	73	;'I'
  1033  01B7  344E               	retlw	78	;'N'
  1034  01B8  343D               	retlw	61	;'='
  1035  01B9  3422               	retlw	34	;'"'
  1036  01BA  3431               	retlw	49	;'1'
  1037  01BB  3432               	retlw	50	;'2'
  1038  01BC  3433               	retlw	51	;'3'
  1039  01BD  3434               	retlw	52	;'4'
  1040  01BE  3422               	retlw	34	;'"'
  1041  01BF  3400               	retlw	0
  1042                           
  1043                           	psect	stringtext4
  1044  01C0                     __pstringtext4:	
  1045  01C0                     STR_4:	
  1046  01C0  3441               	retlw	65	;'A'
  1047  01C1  3454               	retlw	84	;'T'
  1048  01C2  342B               	retlw	43	;'+'
  1049  01C3  3443               	retlw	67	;'C'
  1050  01C4  3453               	retlw	83	;'S'
  1051  01C5  3443               	retlw	67	;'C'
  1052  01C6  3453               	retlw	83	;'S'
  1053  01C7  343D               	retlw	61	;'='
  1054  01C8  3422               	retlw	34	;'"'
  1055  01C9  3447               	retlw	71	;'G'
  1056  01CA  3453               	retlw	83	;'S'
  1057  01CB  344D               	retlw	77	;'M'
  1058  01CC  3422               	retlw	34	;'"'
  1059  01CD  3400               	retlw	0
  1060                           
  1061                           	psect	stringtext5
  1062  01DA                     __pstringtext5:	
  1063  01DA                     STR_3:	
  1064  01DA  3441               	retlw	65	;'A'
  1065  01DB  3454               	retlw	84	;'T'
  1066  01DC  342B               	retlw	43	;'+'
  1067  01DD  3443               	retlw	67	;'C'
  1068  01DE  344D               	retlw	77	;'M'
  1069  01DF  3447               	retlw	71	;'G'
  1070  01E0  3446               	retlw	70	;'F'
  1071  01E1  343D               	retlw	61	;'='
  1072  01E2  3431               	retlw	49	;'1'
  1073  01E3  3400               	retlw	0
  1074                           
  1075                           	psect	stringtext6
  1076  01F8                     __pstringtext6:	
  1077  01F8                     STR_1:	
  1078  01F8  3441               	retlw	65	;'A'
  1079  01F9  3454               	retlw	84	;'T'
  1080  01FA  3400               	retlw	0
  1081                           
  1082                           	psect	stringtext7
  1083  0000                     __pstringtext7:	
  1084                           
  1085                           ; #config settings
  1086  0000                     
  1087                           	psect	cinit
  1088  0026                     start_initialization:	
  1089  0026                     __initialization:	
  1090                           
  1091                           ; Clear objects allocated to COMMON
  1092  0026  01FA               	clrf	__pbssCOMMON& (0+127)
  1093  0027  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1094                           
  1095                           ; Clear objects allocated to BANK0
  1096  0028  3020               	movlw	low __pbssBANK0
  1097  0029  0084               	movwf	4
  1098  002A  3000               	movlw	high __pbssBANK0
  1099  002B  0085               	movwf	5
  1100  002C  3013               	movlw	19
  1101  002D  3181  21E4         	fcall	clear_ram0
  1102  002F                     end_of_initialization:	
  1103                           ;End of C runtime variable initialization code
  1104                           
  1105  002F                     __end_of__initialization:	
  1106  002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1107  0030  0020               	movlb	0
  1108  0031  3180  2833         	ljmp	_main	;jump to C main() function
  1109                           
  1110                           	psect	bssCOMMON
  1111  007A                     __pbssCOMMON:	
  1112  007A                     _eusartTxTail:	
  1113  007A                     	ds	1
  1114  007B                     _eusartTxHead:	
  1115  007B                     	ds	1
  1116                           
  1117                           	psect	bssBANK0
  1118  0020                     __pbssBANK0:	
  1119  0020                     _eusartRxBuffer:	
  1120  0020                     	ds	8
  1121  0028                     _eusartTxBuffer:	
  1122  0028                     	ds	8
  1123  0030                     _eusartRxCount:	
  1124  0030                     	ds	1
  1125  0031                     _eusartRxTail:	
  1126  0031                     	ds	1
  1127  0032                     _eusartRxHead:	
  1128  0032                     	ds	1
  1129                           
  1130                           	psect	clrtext
  1131  01E4                     clear_ram0:	
  1132                           ;	Called with FSR0 containing the base address, and
  1133                           ;	WREG with the size to clear
  1134                           
  1135  01E4  0064               	clrwdt	;clear the watchdog before getting into this loop
  1136  01E5                     clrloop0:	
  1137  01E5  0180               	clrf	0	;clear RAM location pointed to by FSR
  1138  01E6  3101               	addfsr 0,1
  1139  01E7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1140  01E8  29E5               	goto	clrloop0	;have we reached the end yet?
  1141  01E9  3400               	retlw	0	;all done for this memory range, return
  1142                           
  1143                           	psect	cstackCOMMON
  1144  0070                     __pcstackCOMMON:	
  1145  0070                     ?_PIN_MANAGER_Initialize:	
  1146  0070                     ?_OSCILLATOR_Initialize:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0070                     ?_WDT_Initialize:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  0070                     ?_EUSART_Initialize:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0070                     ?_SYSTEM_Initialize:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0070                     ?_EUSART_Write:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0070                     ?_putch:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0070                     ?_EUSART_Transmit_ISR:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0070                     ??_EUSART_Transmit_ISR:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0070                     ?_EUSART_Receive_ISR:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0070                     ??_EUSART_Receive_ISR:	
  1174                           ; 1 bytes @ 0x0
  1175                           
  1176  0070                     ?_INTERRUPT_InterruptManager:	
  1177                           ; 1 bytes @ 0x0
  1178                           
  1179  0070                     ?_main:	
  1180                           ; 1 bytes @ 0x0
  1181                           
  1182                           
  1183                           ; 1 bytes @ 0x0
  1184  0070                     	ds	1
  1185  0071                     ??_INTERRUPT_InterruptManager:	
  1186                           
  1187                           ; 1 bytes @ 0x1
  1188  0071                     	ds	1
  1189  0072                     ??_PIN_MANAGER_Initialize:	
  1190  0072                     ??_OSCILLATOR_Initialize:	
  1191                           ; 1 bytes @ 0x2
  1192                           
  1193  0072                     ??_WDT_Initialize:	
  1194                           ; 1 bytes @ 0x2
  1195                           
  1196  0072                     ??_EUSART_Initialize:	
  1197                           ; 1 bytes @ 0x2
  1198                           
  1199  0072                     ??_EUSART_Write:	
  1200                           ; 1 bytes @ 0x2
  1201                           
  1202                           
  1203                           ; 1 bytes @ 0x2
  1204  0072                     	ds	1
  1205  0073                     ??_SYSTEM_Initialize:	
  1206  0073                     EUSART_Write@txData:	
  1207                           ; 1 bytes @ 0x3
  1208                           
  1209                           
  1210                           ; 1 bytes @ 0x3
  1211  0073                     	ds	1
  1212  0074                     ??_putch:	
  1213  0074                     putch@txData:	
  1214                           ; 1 bytes @ 0x4
  1215                           
  1216                           
  1217                           ; 1 bytes @ 0x4
  1218  0074                     	ds	1
  1219  0075                     ?_printf:	
  1220  0075                     printf@f:	
  1221                           ; 2 bytes @ 0x5
  1222                           
  1223                           
  1224                           ; 2 bytes @ 0x5
  1225  0075                     	ds	2
  1226  0077                     ??_printf:	
  1227                           
  1228                           ; 1 bytes @ 0x7
  1229  0077                     	ds	3
  1230                           
  1231                           	psect	cstackBANK0
  1232  0033                     __pcstackBANK0:	
  1233  0033                     printf@ap:	
  1234                           
  1235                           ; 1 bytes @ 0x0
  1236  0033                     	ds	1
  1237  0034                     printf@c:	
  1238                           
  1239                           ; 1 bytes @ 0x1
  1240  0034                     	ds	1
  1241  0035                     ??_main:	
  1242                           
  1243                           ; 1 bytes @ 0x2
  1244  0035                     	ds	2
  1245  0037                     main@x:	
  1246                           
  1247                           ; 1 bytes @ 0x4
  1248  0037                     	ds	1
  1249                           
  1250                           	psect	maintext
  1251  0033                     __pmaintext:	
  1252 ;;
  1253 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1254 ;;
  1255 ;; *************** function _main *****************
  1256 ;; Defined at:
  1257 ;;		line 51 in file "main.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;		None
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;  x               1    4[BANK0 ] unsigned char 
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1266 ;; Tracked objects:
  1267 ;;		On entry : B1F/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1271 ;;      Params:         0       0       0       0       0       0       0       0
  1272 ;;      Locals:         0       1       0       0       0       0       0       0
  1273 ;;      Temps:          0       2       0       0       0       0       0       0
  1274 ;;      Totals:         0       3       0       0       0       0       0       0
  1275 ;;Total ram usage:        3 bytes
  1276 ;; Hardware stack levels required when called:    5
  1277 ;; This function calls:
  1278 ;;		_SYSTEM_Initialize
  1279 ;;		_printf
  1280 ;;		_putch
  1281 ;; This function is called by:
  1282 ;;		Startup code after reset
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           
  1287                           ;psect for function _main
  1288  0033                     _main:	
  1289                           
  1290                           ;main.c: 53: char x=0;
  1291                           
  1292                           ;incstack = 0
  1293                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1294  0033  0020               	movlb	0	; select bank0
  1295  0034  01B7               	clrf	main@x
  1296                           
  1297                           ;main.c: 56: SYSTEM_Initialize();
  1298  0035  3181  21CE  3180   	fcall	_SYSTEM_Initialize
  1299                           
  1300                           ;main.c: 63: (INTCONbits.GIE = 1);
  1301  0038  178B               	bsf	11,7	;volatile
  1302                           
  1303                           ;main.c: 66: (INTCONbits.PEIE = 1);
  1304  0039  170B               	bsf	11,6	;volatile
  1305                           
  1306                           ;main.c: 73: _delay((unsigned long)((3000)*(18432000/4000.0)));
  1307  003A  3047               	movlw	71
  1308  003B  0020               	movlb	0	; select bank0
  1309  003C  00B6               	movwf	??_main+1
  1310  003D  3022               	movlw	34
  1311  003E  00B5               	movwf	??_main
  1312  003F  300D               	movlw	13
  1313  0040                     u377:	
  1314  0040  0B89               	decfsz	9,f
  1315  0041  2840               	goto	u377
  1316  0042  0BB5               	decfsz	??_main,f
  1317  0043  2840               	goto	u377
  1318  0044  0BB6               	decfsz	??_main+1,f
  1319  0045  2840               	goto	u377
  1320  0046  3200               	nop2
  1321                           
  1322                           ;main.c: 75: printf("AT");
  1323  0047  30F8               	movlw	low (STR_1| (0+32768))
  1324  0048  00F5               	movwf	printf@f
  1325  0049  3081               	movlw	high (STR_1| (0+32768))
  1326  004A  00F6               	movwf	printf@f+1
  1327  004B  3181  211C  3180   	fcall	_printf
  1328                           
  1329                           ;main.c: 76: putch(0x0d);
  1330  004E  300D               	movlw	13
  1331  004F  3181  21EA  3180   	fcall	_putch
  1332                           
  1333                           ;main.c: 77: _delay((unsigned long)((4000)*(18432000/4000.0)));
  1334  0052  305E               	movlw	94
  1335  0053  0020               	movlb	0	; select bank0
  1336  0054  00B6               	movwf	??_main+1
  1337  0055  3082               	movlw	130
  1338  0056  00B5               	movwf	??_main
  1339  0057  3069               	movlw	105
  1340  0058                     u387:	
  1341  0058  0B89               	decfsz	9,f
  1342  0059  2858               	goto	u387
  1343  005A  0BB5               	decfsz	??_main,f
  1344  005B  2858               	goto	u387
  1345  005C  0BB6               	decfsz	??_main+1,f
  1346  005D  2858               	goto	u387
  1347                           
  1348                           ;main.c: 79: printf("AT+CPIN=\"1234\"");
  1349  005E  30B1               	movlw	low (STR_2| (0+32768))
  1350  005F  00F5               	movwf	printf@f
  1351  0060  3081               	movlw	high (STR_2| (0+32768))
  1352  0061  00F6               	movwf	printf@f+1
  1353  0062  3181  211C  3180   	fcall	_printf
  1354                           
  1355                           ;main.c: 80: putch(0x0d);
  1356  0065  300D               	movlw	13
  1357  0066  3181  21EA  3180   	fcall	_putch
  1358                           
  1359                           ;main.c: 81: _delay((unsigned long)((4000)*(18432000/4000.0)));
  1360  0069  305E               	movlw	94
  1361  006A  0020               	movlb	0	; select bank0
  1362  006B  00B6               	movwf	??_main+1
  1363  006C  3082               	movlw	130
  1364  006D  00B5               	movwf	??_main
  1365  006E  3069               	movlw	105
  1366  006F                     u397:	
  1367  006F  0B89               	decfsz	9,f
  1368  0070  286F               	goto	u397
  1369  0071  0BB5               	decfsz	??_main,f
  1370  0072  286F               	goto	u397
  1371  0073  0BB6               	decfsz	??_main+1,f
  1372  0074  286F               	goto	u397
  1373                           
  1374                           ;main.c: 82: printf("AT+CMGF=1");
  1375  0075  30DA               	movlw	low (STR_3| (0+32768))
  1376  0076  00F5               	movwf	printf@f
  1377  0077  3081               	movlw	high (STR_3| (0+32768))
  1378  0078  00F6               	movwf	printf@f+1
  1379  0079  3181  211C  3180   	fcall	_printf
  1380                           
  1381                           ;main.c: 83: putch(0x0d);
  1382  007C  300D               	movlw	13
  1383  007D  3181  21EA  3180   	fcall	_putch
  1384                           
  1385                           ;main.c: 84: _delay((unsigned long)((4000)*(18432000/4000.0)));
  1386  0080  305E               	movlw	94
  1387  0081  0020               	movlb	0	; select bank0
  1388  0082  00B6               	movwf	??_main+1
  1389  0083  3082               	movlw	130
  1390  0084  00B5               	movwf	??_main
  1391  0085  3069               	movlw	105
  1392  0086                     u407:	
  1393  0086  0B89               	decfsz	9,f
  1394  0087  2886               	goto	u407
  1395  0088  0BB5               	decfsz	??_main,f
  1396  0089  2886               	goto	u407
  1397  008A  0BB6               	decfsz	??_main+1,f
  1398  008B  2886               	goto	u407
  1399                           
  1400                           ;main.c: 85: printf("AT+CSCS=\"GSM\"");
  1401  008C  30C0               	movlw	low (STR_4| (0+32768))
  1402  008D  00F5               	movwf	printf@f
  1403  008E  3081               	movlw	high (STR_4| (0+32768))
  1404  008F  00F6               	movwf	printf@f+1
  1405  0090  3181  211C  3180   	fcall	_printf
  1406                           
  1407                           ;main.c: 86: putch(0x0d);
  1408  0093  300D               	movlw	13
  1409  0094  3181  21EA  3180   	fcall	_putch
  1410                           
  1411                           ;main.c: 87: _delay((unsigned long)((4000)*(18432000/4000.0)));
  1412  0097  305E               	movlw	94
  1413  0098  0020               	movlb	0	; select bank0
  1414  0099  00B6               	movwf	??_main+1
  1415  009A  3082               	movlw	130
  1416  009B  00B5               	movwf	??_main
  1417  009C  3069               	movlw	105
  1418  009D                     u417:	
  1419  009D  0B89               	decfsz	9,f
  1420  009E  289D               	goto	u417
  1421  009F  0BB5               	decfsz	??_main,f
  1422  00A0  289D               	goto	u417
  1423  00A1  0BB6               	decfsz	??_main+1,f
  1424  00A2  289D               	goto	u417
  1425                           
  1426                           ;main.c: 88: printf("AT+CMGS=\"0757494823\"");
  1427  00A3  308C               	movlw	low (STR_5| (0+32768))
  1428  00A4  00F5               	movwf	printf@f
  1429  00A5  3081               	movlw	high (STR_5| (0+32768))
  1430  00A6  00F6               	movwf	printf@f+1
  1431  00A7  3181  211C  3180   	fcall	_printf
  1432                           
  1433                           ;main.c: 89: putch(0x0d);
  1434  00AA  300D               	movlw	13
  1435  00AB  3181  21EA  3180   	fcall	_putch
  1436                           
  1437                           ;main.c: 90: _delay((unsigned long)((4000)*(18432000/4000.0)));
  1438  00AE  305E               	movlw	94
  1439  00AF  0020               	movlb	0	; select bank0
  1440  00B0  00B6               	movwf	??_main+1
  1441  00B1  3082               	movlw	130
  1442  00B2  00B5               	movwf	??_main
  1443  00B3  3069               	movlw	105
  1444  00B4                     u427:	
  1445  00B4  0B89               	decfsz	9,f
  1446  00B5  28B4               	goto	u427
  1447  00B6  0BB5               	decfsz	??_main,f
  1448  00B7  28B4               	goto	u427
  1449  00B8  0BB6               	decfsz	??_main+1,f
  1450  00B9  28B4               	goto	u427
  1451                           
  1452                           ;main.c: 91: printf("sms dela anutza");
  1453  00BA  30A1               	movlw	low (STR_6| (0+32768))
  1454  00BB  00F5               	movwf	printf@f
  1455  00BC  3081               	movlw	high (STR_6| (0+32768))
  1456  00BD  00F6               	movwf	printf@f+1
  1457  00BE  3181  211C  3180   	fcall	_printf
  1458                           
  1459                           ;main.c: 92: putch(26);
  1460  00C1  301A               	movlw	26
  1461  00C2  3181  21EA  3180   	fcall	_putch
  1462                           
  1463                           ;main.c: 93: putch(0x0d);
  1464  00C5  300D               	movlw	13
  1465  00C6  3181  21EA  3180   	fcall	_putch
  1466                           
  1467                           ;main.c: 94: _delay((unsigned long)((500)*(18432000/4000.0)));
  1468  00C9  300C               	movlw	12
  1469  00CA  0020               	movlb	0	; select bank0
  1470  00CB  00B6               	movwf	??_main+1
  1471  00CC  30B1               	movlw	177
  1472  00CD  00B5               	movwf	??_main
  1473  00CE  302B               	movlw	43
  1474  00CF                     u437:	
  1475  00CF  0B89               	decfsz	9,f
  1476  00D0  28CF               	goto	u437
  1477  00D1  0BB5               	decfsz	??_main,f
  1478  00D2  28CF               	goto	u437
  1479  00D3  0BB6               	decfsz	??_main+1,f
  1480  00D4  28CF               	goto	u437
  1481  00D5                     l169:	
  1482                           ;main.c: 97: while (1)
  1483                           
  1484                           
  1485                           ;main.c: 98: {
  1486  00D5  28D5               	goto	l169
  1487  00D6                     __end_of_main:	
  1488                           
  1489                           	psect	text1
  1490  011C                     __ptext1:	
  1491 ;; *************** function _printf *****************
  1492 ;; Defined at:
  1493 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\doprnt.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;  f               2    5[COMMON] PTR const unsigned char 
  1496 ;;		 -> STR_6(16), STR_5(21), STR_4(14), STR_3(10), 
  1497 ;;		 -> STR_2(15), STR_1(3), 
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;  tmpval          4    0        struct .
  1500 ;;  cp              2    0        PTR const unsigned char 
  1501 ;;  len             2    0        unsigned int 
  1502 ;;  val             2    0        unsigned int 
  1503 ;;  c               1    1[BANK0 ] char 
  1504 ;;  ap              1    0[BANK0 ] PTR void [1]
  1505 ;;		 -> ?_printf(2), 
  1506 ;;  flag            1    0        unsigned char 
  1507 ;;  prec            1    0        char 
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  2    5[COMMON] int 
  1510 ;; Registers used:
  1511 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1517 ;;      Params:         2       0       0       0       0       0       0       0
  1518 ;;      Locals:         0       2       0       0       0       0       0       0
  1519 ;;      Temps:          3       0       0       0       0       0       0       0
  1520 ;;      Totals:         5       2       0       0       0       0       0       0
  1521 ;;Total ram usage:        7 bytes
  1522 ;; Hardware stack levels used:    1
  1523 ;; Hardware stack levels required when called:    4
  1524 ;; This function calls:
  1525 ;;		_putch
  1526 ;; This function is called by:
  1527 ;;		_main
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           
  1532                           ;psect for function _printf
  1533  011C                     _printf:	
  1534                           
  1535                           ;doprnt.c: 466: va_list ap;
  1536                           ;doprnt.c: 499: signed char c;
  1537                           ;doprnt.c: 506: signed char prec;
  1538                           ;doprnt.c: 508: unsigned char flag;
  1539                           ;doprnt.c: 523: union {
  1540                           ;doprnt.c: 524: unsigned long vd;
  1541                           ;doprnt.c: 525: double integ;
  1542                           ;doprnt.c: 526: } tmpval;
  1543                           ;doprnt.c: 528: unsigned int val;
  1544                           ;doprnt.c: 529: unsigned len;
  1545                           ;doprnt.c: 530: const char * cp;
  1546                           ;doprnt.c: 533: *ap = __va_start();
  1547                           
  1548                           ;incstack = 0
  1549                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1550  011C  3077               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1551  011D  00F7               	movwf	??_printf
  1552  011E  0877               	movf	??_printf,w
  1553  011F  0020               	movlb	0	; select bank0
  1554  0120  00B3               	movwf	printf@ap
  1555  0121                     l1042:	
  1556                           ;doprnt.c: 543: }
  1557                           ;doprnt.c: 1422: {
  1558                           
  1559                           ;doprnt.c: 542: continue;
  1560                           
  1561                           ;doprnt.c: 536: while(c = *f++) {
  1562                           
  1563  0121  0876               	movf	printf@f+1,w
  1564  0122  00F8               	movwf	??_printf+1
  1565  0123  0875               	movf	printf@f,w
  1566  0124  00F7               	movwf	??_printf
  1567  0125  0AF5               	incf	printf@f,f
  1568  0126  1903               	skipnz
  1569  0127  0AF6               	incf	printf@f+1,f
  1570  0128  0877               	movf	??_printf,w
  1571  0129  0084               	movwf	4
  1572  012A  0878               	movf	??_printf+1,w
  1573  012B  0085               	movwf	5
  1574  012C  0800               	movf	0,w	;code access
  1575  012D  00F9               	movwf	??_printf+2
  1576  012E  0879               	movf	??_printf+2,w
  1577  012F  0020               	movlb	0	; select bank0
  1578  0130  00B4               	movwf	printf@c
  1579  0131  0834               	movf	printf@c,w
  1580  0132  1903               	btfsc	3,2
  1581  0133  0008               	return
  1582                           
  1583                           ;doprnt.c: 540: {
  1584                           ;doprnt.c: 541: (putch(c) );
  1585  0134  0834               	movf	printf@c,w
  1586  0135  3181  21EA  3181   	fcall	_putch
  1587  0138  2921               	goto	l1042
  1588  0139                     __end_of_printf:	
  1589                           ;doprnt.c: 1469: }
  1590                           ;doprnt.c: 1533: }
  1591                           ;doprnt.c: 1540: return 0;
  1592                           ;	Return value of _printf is never used
  1593                           
  1594                           
  1595                           	psect	text2
  1596  01EA                     __ptext2:	
  1597 ;; *************** function _putch *****************
  1598 ;; Defined at:
  1599 ;;		line 160 in file "mcc_generated_files/eusart.c"
  1600 ;; Parameters:    Size  Location     Type
  1601 ;;  txData          1    wreg     unsigned char 
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;  txData          1    4[COMMON] unsigned char 
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  1    wreg      void 
  1606 ;; Registers used:
  1607 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1613 ;;      Params:         0       0       0       0       0       0       0       0
  1614 ;;      Locals:         1       0       0       0       0       0       0       0
  1615 ;;      Temps:          0       0       0       0       0       0       0       0
  1616 ;;      Totals:         1       0       0       0       0       0       0       0
  1617 ;;Total ram usage:        1 bytes
  1618 ;; Hardware stack levels used:    1
  1619 ;; Hardware stack levels required when called:    3
  1620 ;; This function calls:
  1621 ;;		_EUSART_Write
  1622 ;; This function is called by:
  1623 ;;		_main
  1624 ;;		_printf
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           
  1629                           ;psect for function _putch
  1630  01EA                     _putch:	
  1631                           
  1632                           ;incstack = 0
  1633                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1634                           ;putch@txData stored from wreg
  1635  01EA  00F4               	movwf	putch@txData
  1636                           
  1637                           ;eusart.c: 162: EUSART_Write(txData);
  1638  01EB  0874               	movf	putch@txData,w
  1639  01EC  3180  20D6         	fcall	_EUSART_Write
  1640  01EE  0008               	return
  1641  01EF                     __end_of_putch:	
  1642                           
  1643                           	psect	text3
  1644  00D6                     __ptext3:	
  1645 ;; *************** function _EUSART_Write *****************
  1646 ;; Defined at:
  1647 ;;		line 132 in file "mcc_generated_files/eusart.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;  txData          1    wreg     unsigned char 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;  txData          1    3[COMMON] unsigned char 
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      void 
  1654 ;; Registers used:
  1655 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1661 ;;      Params:         0       0       0       0       0       0       0       0
  1662 ;;      Locals:         1       0       0       0       0       0       0       0
  1663 ;;      Temps:          1       0       0       0       0       0       0       0
  1664 ;;      Totals:         2       0       0       0       0       0       0       0
  1665 ;;Total ram usage:        2 bytes
  1666 ;; Hardware stack levels used:    1
  1667 ;; Hardware stack levels required when called:    2
  1668 ;; This function calls:
  1669 ;;		Nothing
  1670 ;; This function is called by:
  1671 ;;		_putch
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           
  1676                           ;psect for function _EUSART_Write
  1677  00D6                     _EUSART_Write:	
  1678                           
  1679                           ;incstack = 0
  1680                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  1681                           ;EUSART_Write@txData stored from wreg
  1682  00D6  00F3               	movwf	EUSART_Write@txData
  1683  00D7                     l1020:	
  1684                           ;eusart.c: 135: {
  1685                           
  1686                           ;eusart.c: 134: while(0 == eusartTxBufferRemaining)
  1687                           
  1688  00D7  0020               	movlb	0	; select bank0
  1689  00D8  0838               	movf	_eusartTxBufferRemaining,w	;volatile
  1690  00D9  1903               	btfsc	3,2
  1691  00DA  28D7               	goto	l1020
  1692                           
  1693                           ;eusart.c: 136: }
  1694                           ;eusart.c: 138: if(0 == PIE1bits.TXIE)
  1695  00DB  0021               	movlb	1	; select bank1
  1696  00DC  1A11               	btfsc	17,4	;volatile
  1697  00DD  28E2               	goto	l115
  1698                           
  1699                           ;eusart.c: 139: {
  1700                           ;eusart.c: 140: TXREG = txData;
  1701  00DE  0873               	movf	EUSART_Write@txData,w
  1702  00DF  0023               	movlb	3	; select bank3
  1703  00E0  009A               	movwf	26	;volatile
  1704                           
  1705                           ;eusart.c: 141: }
  1706  00E1  28F6               	goto	l1034
  1707  00E2                     l115:	
  1708                           
  1709                           ;eusart.c: 142: else
  1710                           ;eusart.c: 143: {
  1711                           ;eusart.c: 144: PIE1bits.TXIE = 0;
  1712  00E2  1211               	bcf	17,4	;volatile
  1713                           
  1714                           ;eusart.c: 145: eusartTxBuffer[eusartTxHead++] = txData;
  1715  00E3  0873               	movf	EUSART_Write@txData,w
  1716  00E4  00F2               	movwf	??_EUSART_Write
  1717  00E5  087B               	movf	_eusartTxHead,w
  1718  00E6  3E28               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  1719  00E7  0086               	movwf	6
  1720  00E8  0187               	clrf	7
  1721  00E9  0872               	movf	??_EUSART_Write,w
  1722  00EA  0081               	movwf	1
  1723  00EB  3001               	movlw	1
  1724  00EC  00F2               	movwf	??_EUSART_Write
  1725  00ED  0872               	movf	??_EUSART_Write,w
  1726  00EE  07FB               	addwf	_eusartTxHead,f	;volatile
  1727                           
  1728                           ;eusart.c: 146: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  1729  00EF  3008               	movlw	8
  1730  00F0  027B               	subwf	_eusartTxHead,w	;volatile
  1731  00F1  1803               	btfsc	3,0
  1732                           
  1733                           ;eusart.c: 147: {
  1734                           ;eusart.c: 148: eusartTxHead = 0;
  1735  00F2  01FB               	clrf	_eusartTxHead	;volatile
  1736                           
  1737                           ;eusart.c: 149: }
  1738                           ;eusart.c: 150: eusartTxBufferRemaining--;
  1739  00F3  3001               	movlw	1
  1740  00F4  0020               	movlb	0	; select bank0
  1741  00F5  02B8               	subwf	_eusartTxBufferRemaining,f	;volatile
  1742  00F6                     l1034:	
  1743                           
  1744                           ;eusart.c: 151: }
  1745                           ;eusart.c: 152: PIE1bits.TXIE = 1;
  1746  00F6  0021               	movlb	1	; select bank1
  1747  00F7  1611               	bsf	17,4	;volatile
  1748  00F8  0008               	return
  1749  00F9                     __end_of_EUSART_Write:	
  1750                           
  1751                           	psect	text4
  1752  01CE                     __ptext4:	
  1753 ;; *************** function _SYSTEM_Initialize *****************
  1754 ;; Defined at:
  1755 ;;		line 70 in file "mcc_generated_files/mcc.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;		None
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;		None
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  1    wreg      void 
  1762 ;; Registers used:
  1763 ;;		wreg, status,2, status,0, pclath, cstack
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1769 ;;      Params:         0       0       0       0       0       0       0       0
  1770 ;;      Locals:         0       0       0       0       0       0       0       0
  1771 ;;      Temps:          0       0       0       0       0       0       0       0
  1772 ;;      Totals:         0       0       0       0       0       0       0       0
  1773 ;;Total ram usage:        0 bytes
  1774 ;; Hardware stack levels used:    1
  1775 ;; Hardware stack levels required when called:    3
  1776 ;; This function calls:
  1777 ;;		_EUSART_Initialize
  1778 ;;		_OSCILLATOR_Initialize
  1779 ;;		_PIN_MANAGER_Initialize
  1780 ;;		_WDT_Initialize
  1781 ;; This function is called by:
  1782 ;;		_main
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           
  1787                           ;psect for function _SYSTEM_Initialize
  1788  01CE                     _SYSTEM_Initialize:	
  1789                           
  1790                           ;mcc.c: 73: PIN_MANAGER_Initialize();
  1791                           
  1792                           ;incstack = 0
  1793                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1794  01CE  3180  20F9  3181   	fcall	_PIN_MANAGER_Initialize
  1795                           
  1796                           ;mcc.c: 74: OSCILLATOR_Initialize();
  1797  01D1  3181  21EF  3181   	fcall	_OSCILLATOR_Initialize
  1798                           
  1799                           ;mcc.c: 75: WDT_Initialize();
  1800  01D4  3181  21F4  3181   	fcall	_WDT_Initialize
  1801                           
  1802                           ;mcc.c: 76: EUSART_Initialize();
  1803  01D7  3181  2156         	fcall	_EUSART_Initialize
  1804  01D9  0008               	return
  1805  01DA                     __end_of_SYSTEM_Initialize:	
  1806                           
  1807                           	psect	text5
  1808  01F4                     __ptext5:	
  1809 ;; *************** function _WDT_Initialize *****************
  1810 ;; Defined at:
  1811 ;;		line 87 in file "mcc_generated_files/mcc.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;		None
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;		None
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      void 
  1818 ;; Registers used:
  1819 ;;		wreg
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1825 ;;      Params:         0       0       0       0       0       0       0       0
  1826 ;;      Locals:         0       0       0       0       0       0       0       0
  1827 ;;      Temps:          0       0       0       0       0       0       0       0
  1828 ;;      Totals:         0       0       0       0       0       0       0       0
  1829 ;;Total ram usage:        0 bytes
  1830 ;; Hardware stack levels used:    1
  1831 ;; Hardware stack levels required when called:    2
  1832 ;; This function calls:
  1833 ;;		Nothing
  1834 ;; This function is called by:
  1835 ;;		_SYSTEM_Initialize
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           
  1840                           ;psect for function _WDT_Initialize
  1841  01F4                     _WDT_Initialize:	
  1842                           
  1843                           ;mcc.c: 90: WDTCON = 0x16;
  1844                           
  1845                           ;incstack = 0
  1846                           ; Regs used in _WDT_Initialize: [wreg]
  1847  01F4  3016               	movlw	22
  1848  01F5  0021               	movlb	1	; select bank1
  1849  01F6  0097               	movwf	23	;volatile
  1850  01F7  0008               	return
  1851  01F8                     __end_of_WDT_Initialize:	
  1852                           
  1853                           	psect	text6
  1854  00F9                     __ptext6:	
  1855 ;; *************** function _PIN_MANAGER_Initialize *****************
  1856 ;; Defined at:
  1857 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;		None
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;		None
  1862 ;; Return value:  Size  Location     Type
  1863 ;;                  1    wreg      void 
  1864 ;; Registers used:
  1865 ;;		wreg, status,2
  1866 ;; Tracked objects:
  1867 ;;		On entry : 0/0
  1868 ;;		On exit  : 0/0
  1869 ;;		Unchanged: 0/0
  1870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1871 ;;      Params:         0       0       0       0       0       0       0       0
  1872 ;;      Locals:         0       0       0       0       0       0       0       0
  1873 ;;      Temps:          0       0       0       0       0       0       0       0
  1874 ;;      Totals:         0       0       0       0       0       0       0       0
  1875 ;;Total ram usage:        0 bytes
  1876 ;; Hardware stack levels used:    1
  1877 ;; Hardware stack levels required when called:    2
  1878 ;; This function calls:
  1879 ;;		Nothing
  1880 ;; This function is called by:
  1881 ;;		_SYSTEM_Initialize
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885                           
  1886                           ;psect for function _PIN_MANAGER_Initialize
  1887  00F9                     _PIN_MANAGER_Initialize:	
  1888                           
  1889                           ;pin_manager.c: 57: LATE = 0x00;
  1890                           
  1891                           ;incstack = 0
  1892                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1893  00F9  0022               	movlb	2	; select bank2
  1894  00FA  0190               	clrf	16	;volatile
  1895                           
  1896                           ;pin_manager.c: 58: LATD = 0x00;
  1897  00FB  018F               	clrf	15	;volatile
  1898                           
  1899                           ;pin_manager.c: 59: LATA = 0x00;
  1900  00FC  018C               	clrf	12	;volatile
  1901                           
  1902                           ;pin_manager.c: 60: LATB = 0x00;
  1903  00FD  018D               	clrf	13	;volatile
  1904                           
  1905                           ;pin_manager.c: 61: LATC = 0x00;
  1906  00FE  018E               	clrf	14	;volatile
  1907                           
  1908                           ;pin_manager.c: 66: TRISE = 0x0F;
  1909  00FF  300F               	movlw	15
  1910  0100  0021               	movlb	1	; select bank1
  1911  0101  0090               	movwf	16	;volatile
  1912                           
  1913                           ;pin_manager.c: 67: TRISA = 0xFF;
  1914  0102  30FF               	movlw	255
  1915  0103  008C               	movwf	12	;volatile
  1916                           
  1917                           ;pin_manager.c: 68: TRISB = 0x00;
  1918  0104  018D               	clrf	13	;volatile
  1919                           
  1920                           ;pin_manager.c: 69: TRISC = 0xBF;
  1921  0105  30BF               	movlw	191
  1922  0106  008E               	movwf	14	;volatile
  1923                           
  1924                           ;pin_manager.c: 70: TRISD = 0xFF;
  1925  0107  30FF               	movlw	255
  1926  0108  008F               	movwf	15	;volatile
  1927                           
  1928                           ;pin_manager.c: 75: ANSELB = 0x3F;
  1929  0109  303F               	movlw	63
  1930  010A  0023               	movlb	3	; select bank3
  1931  010B  008D               	movwf	13	;volatile
  1932                           
  1933                           ;pin_manager.c: 76: ANSELD = 0xFF;
  1934  010C  30FF               	movlw	255
  1935  010D  008F               	movwf	15	;volatile
  1936                           
  1937                           ;pin_manager.c: 77: ANSELE = 0x07;
  1938  010E  3007               	movlw	7
  1939  010F  0090               	movwf	16	;volatile
  1940                           
  1941                           ;pin_manager.c: 78: ANSELA = 0x3F;
  1942  0110  303F               	movlw	63
  1943  0111  008C               	movwf	12	;volatile
  1944                           
  1945                           ;pin_manager.c: 83: WPUE = 0x08;
  1946  0112  3008               	movlw	8
  1947  0113  0024               	movlb	4	; select bank4
  1948  0114  0090               	movwf	16	;volatile
  1949                           
  1950                           ;pin_manager.c: 84: WPUB = 0xFF;
  1951  0115  30FF               	movlw	255
  1952  0116  008D               	movwf	13	;volatile
  1953                           
  1954                           ;pin_manager.c: 85: OPTION_REGbits.nWPUEN = 0;
  1955  0117  0021               	movlb	1	; select bank1
  1956  0118  1395               	bcf	21,7	;volatile
  1957                           
  1958                           ;pin_manager.c: 91: APFCON = 0x00;
  1959  0119  0022               	movlb	2	; select bank2
  1960  011A  019D               	clrf	29	;volatile
  1961  011B  0008               	return
  1962  011C                     __end_of_PIN_MANAGER_Initialize:	
  1963                           
  1964                           	psect	text7
  1965  01EF                     __ptext7:	
  1966 ;; *************** function _OSCILLATOR_Initialize *****************
  1967 ;; Defined at:
  1968 ;;		line 79 in file "mcc_generated_files/mcc.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;		None
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;		None
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  1    wreg      void 
  1975 ;; Registers used:
  1976 ;;		wreg, status,2
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1982 ;;      Params:         0       0       0       0       0       0       0       0
  1983 ;;      Locals:         0       0       0       0       0       0       0       0
  1984 ;;      Temps:          0       0       0       0       0       0       0       0
  1985 ;;      Totals:         0       0       0       0       0       0       0       0
  1986 ;;Total ram usage:        0 bytes
  1987 ;; Hardware stack levels used:    1
  1988 ;; Hardware stack levels required when called:    2
  1989 ;; This function calls:
  1990 ;;		Nothing
  1991 ;; This function is called by:
  1992 ;;		_SYSTEM_Initialize
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           
  1997                           ;psect for function _OSCILLATOR_Initialize
  1998  01EF                     _OSCILLATOR_Initialize:	
  1999                           
  2000                           ;mcc.c: 82: OSCCON = 0x38;
  2001                           
  2002                           ;incstack = 0
  2003                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2004  01EF  3038               	movlw	56
  2005  01F0  0021               	movlb	1	; select bank1
  2006  01F1  0099               	movwf	25	;volatile
  2007                           
  2008                           ;mcc.c: 84: OSCTUNE = 0x00;
  2009  01F2  0198               	clrf	24	;volatile
  2010  01F3  0008               	return
  2011  01F4                     __end_of_OSCILLATOR_Initialize:	
  2012                           
  2013                           	psect	text8
  2014  0156                     __ptext8:	
  2015 ;; *************** function _EUSART_Initialize *****************
  2016 ;; Defined at:
  2017 ;;		line 75 in file "mcc_generated_files/eusart.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;		None
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;		None
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		wreg, status,2
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2031 ;;      Params:         0       0       0       0       0       0       0       0
  2032 ;;      Locals:         0       0       0       0       0       0       0       0
  2033 ;;      Temps:          1       0       0       0       0       0       0       0
  2034 ;;      Totals:         1       0       0       0       0       0       0       0
  2035 ;;Total ram usage:        1 bytes
  2036 ;; Hardware stack levels used:    1
  2037 ;; Hardware stack levels required when called:    2
  2038 ;; This function calls:
  2039 ;;		Nothing
  2040 ;; This function is called by:
  2041 ;;		_SYSTEM_Initialize
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           
  2046                           ;psect for function _EUSART_Initialize
  2047  0156                     _EUSART_Initialize:	
  2048                           
  2049                           ;eusart.c: 78: PIE1bits.RCIE = 0;
  2050                           
  2051                           ;incstack = 0
  2052                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  2053  0156  0021               	movlb	1	; select bank1
  2054  0157  1291               	bcf	17,5	;volatile
  2055                           
  2056                           ;eusart.c: 79: PIE1bits.TXIE = 0;
  2057  0158  1211               	bcf	17,4	;volatile
  2058                           
  2059                           ;eusart.c: 84: BAUDCON = 0x08;
  2060  0159  3008               	movlw	8
  2061  015A  0023               	movlb	3	; select bank3
  2062  015B  009F               	movwf	31	;volatile
  2063                           
  2064                           ;eusart.c: 87: RCSTA = 0x90;
  2065  015C  3090               	movlw	144
  2066  015D  009D               	movwf	29	;volatile
  2067                           
  2068                           ;eusart.c: 90: TXSTA = 0x24;
  2069  015E  3024               	movlw	36
  2070  015F  009E               	movwf	30	;volatile
  2071                           
  2072                           ;eusart.c: 93: SPBRGL = 0xDF;
  2073  0160  30DF               	movlw	223
  2074  0161  009B               	movwf	27	;volatile
  2075                           
  2076                           ;eusart.c: 96: SPBRGH = 0x01;
  2077  0162  3001               	movlw	1
  2078  0163  009C               	movwf	28	;volatile
  2079                           
  2080                           ;eusart.c: 100: eusartTxHead = 0;
  2081  0164  01FB               	clrf	_eusartTxHead	;volatile
  2082                           
  2083                           ;eusart.c: 101: eusartTxTail = 0;
  2084  0165  01FA               	clrf	_eusartTxTail	;volatile
  2085                           
  2086                           ;eusart.c: 102: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  2087  0166  3008               	movlw	8
  2088  0167  00F2               	movwf	??_EUSART_Initialize
  2089  0168  0872               	movf	??_EUSART_Initialize,w
  2090  0169  0020               	movlb	0	; select bank0
  2091  016A  00B8               	movwf	_eusartTxBufferRemaining	;volatile
  2092                           
  2093                           ;eusart.c: 104: eusartRxHead = 0;
  2094  016B  01B2               	clrf	_eusartRxHead	;volatile
  2095                           
  2096                           ;eusart.c: 105: eusartRxTail = 0;
  2097  016C  01B1               	clrf	_eusartRxTail	;volatile
  2098                           
  2099                           ;eusart.c: 106: eusartRxCount = 0;
  2100  016D  01B0               	clrf	_eusartRxCount	;volatile
  2101                           
  2102                           ;eusart.c: 109: PIE1bits.RCIE = 1;
  2103  016E  0021               	movlb	1	; select bank1
  2104  016F  1691               	bsf	17,5	;volatile
  2105  0170  0008               	return
  2106  0171                     __end_of_EUSART_Initialize:	
  2107                           
  2108                           	psect	intentry
  2109  0004                     __pintentry:	
  2110 ;; *************** function _INTERRUPT_InterruptManager *****************
  2111 ;; Defined at:
  2112 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;		None
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;		None
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      void 
  2119 ;; Registers used:
  2120 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2126 ;;      Params:         0       0       0       0       0       0       0       0
  2127 ;;      Locals:         0       0       0       0       0       0       0       0
  2128 ;;      Temps:          1       0       0       0       0       0       0       0
  2129 ;;      Totals:         1       0       0       0       0       0       0       0
  2130 ;;Total ram usage:        1 bytes
  2131 ;; Hardware stack levels used:    1
  2132 ;; Hardware stack levels required when called:    1
  2133 ;; This function calls:
  2134 ;;		_EUSART_Receive_ISR
  2135 ;;		_EUSART_Transmit_ISR
  2136 ;; This function is called by:
  2137 ;;		Interrupt level 1
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141  0004                     _INTERRUPT_InterruptManager:	
  2142                           
  2143                           ;incstack = 0
  2144  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2145                           
  2146                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  2147  0005  3180               	pagesel	$
  2148  0006  0020               	movlb	0	; select bank0
  2149  0007  087F               	movf	127,w
  2150  0008  00F1               	movwf	??_INTERRUPT_InterruptManager
  2151                           
  2152                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE1bits.TXIE == 1 && PIR1bits.TXIF
      +                           == 1)
  2153  0009  1F0B               	btfss	11,6	;volatile
  2154  000A  2815               	goto	i1l150
  2155  000B  0021               	movlb	1	; select bank1
  2156  000C  1E11               	btfss	17,4	;volatile
  2157  000D  2815               	goto	i1l150
  2158  000E  0020               	movlb	0	; select bank0
  2159  000F  1E11               	btfss	17,4	;volatile
  2160  0010  2815               	goto	i1l150
  2161                           
  2162                           ;interrupt_manager.c: 55: {
  2163                           ;interrupt_manager.c: 56: EUSART_Transmit_ISR();
  2164  0011  3181  2139  3180   	fcall	_EUSART_Transmit_ISR
  2165                           
  2166                           ;interrupt_manager.c: 57: }
  2167  0014  281F               	goto	i1l154
  2168  0015                     i1l150:	
  2169                           
  2170                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE1bits.RCIE == 1 && PIR1bits
      +                          .RCIF == 1)
  2171  0015  1F0B               	btfss	11,6	;volatile
  2172  0016  281F               	goto	i1l154
  2173  0017  0021               	movlb	1	; select bank1
  2174  0018  1E91               	btfss	17,5	;volatile
  2175  0019  281F               	goto	i1l154
  2176  001A  0020               	movlb	0	; select bank0
  2177  001B  1E91               	btfss	17,5	;volatile
  2178  001C  281F               	goto	i1l154
  2179                           
  2180                           ;interrupt_manager.c: 59: {
  2181                           ;interrupt_manager.c: 61: EUSART_Receive_ISR();
  2182  001D  3181  2171         	fcall	_EUSART_Receive_ISR
  2183  001F                     i1l154:	
  2184                           ;interrupt_manager.c: 63: else
  2185                           ;interrupt_manager.c: 64: {
  2186                           
  2187                           ;interrupt_manager.c: 62: }
  2188                           
  2189  001F  0871               	movf	??_INTERRUPT_InterruptManager,w
  2190  0020  0020               	movlb	0	; select bank0
  2191  0021  00FF               	movwf	127
  2192  0022  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2193  0023  0009               	retfie
  2194  0024                     __end_of_INTERRUPT_InterruptManager:	
  2195                           
  2196                           	psect	text10
  2197  0139                     __ptext10:	
  2198 ;; *************** function _EUSART_Transmit_ISR *****************
  2199 ;; Defined at:
  2200 ;;		line 165 in file "mcc_generated_files/eusart.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;		None
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;		None
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  1    wreg      void 
  2207 ;; Registers used:
  2208 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2214 ;;      Params:         0       0       0       0       0       0       0       0
  2215 ;;      Locals:         0       0       0       0       0       0       0       0
  2216 ;;      Temps:          1       0       0       0       0       0       0       0
  2217 ;;      Totals:         1       0       0       0       0       0       0       0
  2218 ;;Total ram usage:        1 bytes
  2219 ;; Hardware stack levels used:    1
  2220 ;; This function calls:
  2221 ;;		Nothing
  2222 ;; This function is called by:
  2223 ;;		_INTERRUPT_InterruptManager
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227                           
  2228                           ;psect for function _EUSART_Transmit_ISR
  2229  0139                     _EUSART_Transmit_ISR:	
  2230                           
  2231                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  2232                           
  2233                           ;incstack = 0
  2234                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2235  0139  3008               	movlw	8
  2236  013A  0020               	movlb	0	; select bank0
  2237  013B  0238               	subwf	_eusartTxBufferRemaining,w	;volatile
  2238  013C  1803               	skipnc
  2239  013D  2953               	goto	i1l127
  2240                           
  2241                           ;eusart.c: 170: {
  2242                           ;eusart.c: 171: TXREG = eusartTxBuffer[eusartTxTail++];
  2243  013E  087A               	movf	_eusartTxTail,w
  2244  013F  3E28               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  2245  0140  0086               	movwf	6
  2246  0141  0187               	clrf	7
  2247  0142  0801               	movf	1,w
  2248  0143  0023               	movlb	3	; select bank3
  2249  0144  009A               	movwf	26	;volatile
  2250  0145  3001               	movlw	1
  2251  0146  00F0               	movwf	??_EUSART_Transmit_ISR
  2252  0147  0870               	movf	??_EUSART_Transmit_ISR,w
  2253  0148  07FA               	addwf	_eusartTxTail,f	;volatile
  2254                           
  2255                           ;eusart.c: 172: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  2256  0149  3008               	movlw	8
  2257  014A  027A               	subwf	_eusartTxTail,w	;volatile
  2258  014B  1803               	btfsc	3,0
  2259                           
  2260                           ;eusart.c: 173: {
  2261                           ;eusart.c: 174: eusartTxTail = 0;
  2262  014C  01FA               	clrf	_eusartTxTail	;volatile
  2263                           
  2264                           ;eusart.c: 175: }
  2265                           ;eusart.c: 176: eusartTxBufferRemaining++;
  2266  014D  3001               	movlw	1
  2267  014E  00F0               	movwf	??_EUSART_Transmit_ISR
  2268  014F  0870               	movf	??_EUSART_Transmit_ISR,w
  2269  0150  0020               	movlb	0	; select bank0
  2270  0151  07B8               	addwf	_eusartTxBufferRemaining,f	;volatile
  2271                           
  2272                           ;eusart.c: 177: }
  2273  0152  0008               	return
  2274  0153                     i1l127:	
  2275                           
  2276                           ;eusart.c: 178: else
  2277                           ;eusart.c: 179: {
  2278                           ;eusart.c: 180: PIE1bits.TXIE = 0;
  2279  0153  0021               	movlb	1	; select bank1
  2280  0154  1211               	bcf	17,4	;volatile
  2281  0155  0008               	return
  2282  0156                     __end_of_EUSART_Transmit_ISR:	
  2283                           
  2284                           	psect	text11
  2285  0171                     __ptext11:	
  2286 ;; *************** function _EUSART_Receive_ISR *****************
  2287 ;; Defined at:
  2288 ;;		line 184 in file "mcc_generated_files/eusart.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;		None
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;		None
  2293 ;; Return value:  Size  Location     Type
  2294 ;;                  1    wreg      void 
  2295 ;; Registers used:
  2296 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2302 ;;      Params:         0       0       0       0       0       0       0       0
  2303 ;;      Locals:         0       0       0       0       0       0       0       0
  2304 ;;      Temps:          1       0       0       0       0       0       0       0
  2305 ;;      Totals:         1       0       0       0       0       0       0       0
  2306 ;;Total ram usage:        1 bytes
  2307 ;; Hardware stack levels used:    1
  2308 ;; This function calls:
  2309 ;;		Nothing
  2310 ;; This function is called by:
  2311 ;;		_INTERRUPT_InterruptManager
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           
  2316                           ;psect for function _EUSART_Receive_ISR
  2317  0171                     _EUSART_Receive_ISR:	
  2318                           
  2319                           ;eusart.c: 187: if(1 == RCSTAbits.OERR)
  2320                           
  2321                           ;incstack = 0
  2322                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2323  0171  0023               	movlb	3	; select bank3
  2324  0172  1C9D               	btfss	29,1	;volatile
  2325  0173  2976               	goto	i1l936
  2326                           
  2327                           ;eusart.c: 188: {
  2328                           ;eusart.c: 191: RCSTAbits.CREN = 0;
  2329  0174  121D               	bcf	29,4	;volatile
  2330                           
  2331                           ;eusart.c: 192: RCSTAbits.CREN = 1;
  2332  0175  161D               	bsf	29,4	;volatile
  2333  0176                     i1l936:	
  2334                           
  2335                           ;eusart.c: 193: }
  2336                           ;eusart.c: 196: eusartRxBuffer[eusartRxHead++] = RCREG;
  2337  0176  0819               	movf	25,w	;volatile
  2338  0177  00F0               	movwf	??_EUSART_Receive_ISR
  2339  0178  0020               	movlb	0	; select bank0
  2340  0179  0832               	movf	_eusartRxHead,w
  2341  017A  3E20               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  2342  017B  0086               	movwf	6
  2343  017C  0187               	clrf	7
  2344  017D  0870               	movf	??_EUSART_Receive_ISR,w
  2345  017E  0081               	movwf	1
  2346  017F  3001               	movlw	1
  2347  0180  00F0               	movwf	??_EUSART_Receive_ISR
  2348  0181  0870               	movf	??_EUSART_Receive_ISR,w
  2349  0182  07B2               	addwf	_eusartRxHead,f	;volatile
  2350                           
  2351                           ;eusart.c: 200: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  2352  0183  3008               	movlw	8
  2353  0184  0232               	subwf	_eusartRxHead,w	;volatile
  2354  0185  1803               	btfsc	3,0
  2355                           
  2356                           ;eusart.c: 201: {
  2357                           ;eusart.c: 202: eusartRxHead = 0;
  2358  0186  01B2               	clrf	_eusartRxHead	;volatile
  2359                           
  2360                           ;eusart.c: 203: }
  2361                           ;eusart.c: 204: eusartRxCount++;
  2362  0187  3001               	movlw	1
  2363  0188  00F0               	movwf	??_EUSART_Receive_ISR
  2364  0189  0870               	movf	??_EUSART_Receive_ISR,w
  2365  018A  07B0               	addwf	_eusartRxCount,f	;volatile
  2366  018B  0008               	return
  2367  018C                     __end_of_EUSART_Receive_ISR:	
  2368  007E                     btemp	set	126	;btemp
  2369  007E                     int$flags	set	126
  2370  007E                     wtemp0	set	126


Data Sizes:
    Strings     79
    Constant    0
    Data        0
    BSS         21
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      5      25
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_6(CODE[16]), STR_5(CODE[21]), STR_4(CODE[14]), STR_3(CODE[10]), 
		 -> STR_2(CODE[15]), STR_1(CODE[3]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_printf
    _printf->_putch
    _putch->_EUSART_Write
    _SYSTEM_Initialize->_EUSART_Initialize

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     647
                                              2 BANK0      3     3      0
                  _SYSTEM_Initialize
                             _printf
                              _putch
 ---------------------------------------------------------------------------------
 (1) _printf                                              19    17      2     551
                                              5 COMMON     5     3      2
                                              0 BANK0      2     2      0
                              _putch
 ---------------------------------------------------------------------------------
 (1) _putch                                                1     1      0      93
                                              4 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         2     2      0      62
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _printf
     _putch
       _EUSART_Write
   _putch
     _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      25       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      5      19       6       31.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      25      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Tue Sep 26 21:16:23 2017

                        __CFG_CP$OFF 0000                          __CFG_LVP$ON 0000  
                                l115 00E2                                  l169 00D5  
                                u407 0086                                  u417 009D  
                       __CFG_CPD$OFF 0000                                  u427 00B4  
                                u437 00CF                                  u377 0040  
                                u387 0058                                  u397 006F  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                       __CFG_IESO$ON 0000                         __CFG_FOSC$HS 0000  
                               l1020 00D7                                 l1034 00F6  
                               l1042 0121                                 STR_1 01F8  
                               STR_2 01B1                                 STR_3 01DA  
                               STR_4 01C0                                 STR_5 018C  
                               STR_6 01A1                                 _LATA 010C  
                               _LATB 010D                                 _LATC 010E  
                               _LATD 010F                                 _LATE 0110  
                               _WPUB 020D                                 _WPUE 0210  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
                               _main 0033                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                      __CFG_BOREN$ON 0000                                 start 0024  
                      __CFG_MCLRE$ON 0000                        ?_EUSART_Write 0070  
     __size_of_OSCILLATOR_Initialize 0005        __end_of_OSCILLATOR_Initialize 01F4  
                              ?_main 0070                        __CFG_WDTE$OFF 0000  
                              i1l150 0015                                i1l127 0153  
                              i1l154 001F                                i1l936 0176  
                              _RCREG 0199                                _RCSTA 019D  
                              _TRISA 008C                                _TRISB 008D  
                              _TRISC 008E                                _TRISD 008F  
                              _TRISE 0090                                _TXREG 019A  
                              _TXSTA 019E                       _WDT_Initialize 01F4  
                              _putch 01EA                                main@x 0037  
                              status 0003                                wtemp0 007E  
                    __initialization 0026                         __end_of_main 00D6  
                     ??_EUSART_Write 0072          ?_INTERRUPT_InterruptManager 0070  
                             ??_main 0035                       __CFG_PLLEN$OFF 0000  
             __end_of_WDT_Initialize 01F8                               _APFCON 011D  
                             _ANSELA 018C                               ?_putch 0070  
                             _ANSELB 018D                               _ANSELD 018F  
                             _ANSELE 0190                               _OSCCON 0099  
                             _SPBRGH 019C                               _SPBRGL 019B  
                             _WDTCON 0097                       __CFG_PWRTE$OFF 0000  
                     __CFG_STVREN$ON 0000                  _EUSART_Transmit_ISR 0139  
                             _printf 011C                      ?_WDT_Initialize 0070  
               ?_EUSART_Transmit_ISR 0070                    _SYSTEM_Initialize 01CE  
            __end_of__initialization 002F                   ?_SYSTEM_Initialize 0070  
                     __pcstackCOMMON 0070                  ??_SYSTEM_Initialize 0073  
                      __end_of_putch 01EF                       _OPTION_REGbits 0095  
          __end_of_SYSTEM_Initialize 01DA                ??_EUSART_Transmit_ISR 0070  
                            ??_putch 0074                           __pbssBANK0 0020  
               __end_of_EUSART_Write 00F9                      __CFG_VCAPEN$OFF 0000  
        __size_of_EUSART_Receive_ISR 001B                           __pmaintext 0033  
                         __pintentry 0004                              _BAUDCON 019F  
                            ?_printf 0075                        _eusartRxCount 0030  
                            _OSCTUNE 0098                              __ptext1 011C  
                            __ptext2 01EA                              __ptext3 00D6  
                            __ptext4 01CE                              __ptext5 01F4  
                            __ptext6 00F9                              __ptext7 01EF  
                            __ptext8 0156                      __size_of_printf 001D  
              _OSCILLATOR_Initialize 01EF             ??_PIN_MANAGER_Initialize 0072  
         __size_of_SYSTEM_Initialize 000C                              clrloop0 01E5  
               end_of_initialization 002F                    _EUSART_Initialize 0156  
                 ?_EUSART_Initialize 0070                            _RCSTAbits 019D  
                            printf@c 0034                              printf@f 0075  
                ??_EUSART_Initialize 0072                     ??_WDT_Initialize 0072  
              __size_of_EUSART_Write 0023            __end_of_EUSART_Initialize 0171  
                       _EUSART_Write 00D6               ?_OSCILLATOR_Initialize 0070  
                     __end_of_printf 0139                  start_initialization 0026  
    __size_of_PIN_MANAGER_Initialize 0023                          putch@txData 0074  
                           ??_printf 0077          __end_of_EUSART_Transmit_ISR 0156  
                        __pbssCOMMON 007A                            ___latbits 0002  
                      __pcstackBANK0 0033           __end_of_EUSART_Receive_ISR 018C  
         __size_of_EUSART_Initialize 001B                            __pnvBANK0 0038  
             _PIN_MANAGER_Initialize 00F9                         _eusartRxHead 0032  
                       _eusartTxHead 007B                         _eusartRxTail 0031  
                       _eusartTxTail 007A         ??_INTERRUPT_InterruptManager 0071  
            _eusartTxBufferRemaining 0038                       __size_of_putch 0005  
                     _eusartRxBuffer 0020                       _eusartTxBuffer 0028  
                          clear_ram0 01E4                             _PIE1bits 0091  
__size_of_INTERRUPT_InterruptManager 0020                             _PIR1bits 0011  
            ??_OSCILLATOR_Initialize 0072                             __ptext10 0139  
                           __ptext11 0171                        __size_of_main 00A3  
                           int$flags 007E   __end_of_INTERRUPT_InterruptManager 0024  
         _INTERRUPT_InterruptManager 0004                           _INTCONbits 000B  
            __size_of_WDT_Initialize 0004                             intlevel1 0000  
            ?_PIN_MANAGER_Initialize 0070                    __CFG_CLKOUTEN$OFF 0000  
                           printf@ap 0033                   _EUSART_Receive_ISR 0171  
                      __pstringtext1 018C                        __pstringtext2 01A1  
                      __pstringtext3 01B1                        __pstringtext4 01C0  
                      __pstringtext5 01DA                        __pstringtext6 01F8  
                      __pstringtext7 0000                  ?_EUSART_Receive_ISR 0070  
                 EUSART_Write@txData 0073         __size_of_EUSART_Transmit_ISR 001D  
     __end_of_PIN_MANAGER_Initialize 011C                 ??_EUSART_Receive_ISR 0070  
