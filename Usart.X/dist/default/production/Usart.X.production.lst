

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Tue Sep 26 11:48:22 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F1937
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 1.42
    28                           ; Generated 13/04/2017 GMT
    29                           ; 
    30                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F1937 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  0110                     	;# 
   116  0111                     	;# 
   117  0112                     	;# 
   118  0113                     	;# 
   119  0114                     	;# 
   120  0115                     	;# 
   121  0116                     	;# 
   122  0117                     	;# 
   123  0118                     	;# 
   124  0119                     	;# 
   125  011A                     	;# 
   126  011B                     	;# 
   127  011D                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  018F                     	;# 
   131  0190                     	;# 
   132  0191                     	;# 
   133  0191                     	;# 
   134  0192                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0193                     	;# 
   138  0194                     	;# 
   139  0195                     	;# 
   140  0196                     	;# 
   141  0199                     	;# 
   142  019A                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019C                     	;# 
   148  019C                     	;# 
   149  019D                     	;# 
   150  019E                     	;# 
   151  019F                     	;# 
   152  020D                     	;# 
   153  0210                     	;# 
   154  0211                     	;# 
   155  0212                     	;# 
   156  0213                     	;# 
   157  0214                     	;# 
   158  0215                     	;# 
   159  0215                     	;# 
   160  0216                     	;# 
   161  0217                     	;# 
   162  0291                     	;# 
   163  0291                     	;# 
   164  0292                     	;# 
   165  0293                     	;# 
   166  0294                     	;# 
   167  0295                     	;# 
   168  0295                     	;# 
   169  0296                     	;# 
   170  0298                     	;# 
   171  0298                     	;# 
   172  0299                     	;# 
   173  029A                     	;# 
   174  029B                     	;# 
   175  029C                     	;# 
   176  029C                     	;# 
   177  029D                     	;# 
   178  029E                     	;# 
   179  029F                     	;# 
   180  0311                     	;# 
   181  0311                     	;# 
   182  0312                     	;# 
   183  0313                     	;# 
   184  0314                     	;# 
   185  0315                     	;# 
   186  0315                     	;# 
   187  0316                     	;# 
   188  0318                     	;# 
   189  0318                     	;# 
   190  0319                     	;# 
   191  031A                     	;# 
   192  031C                     	;# 
   193  031C                     	;# 
   194  031D                     	;# 
   195  031E                     	;# 
   196  0394                     	;# 
   197  0395                     	;# 
   198  0396                     	;# 
   199  0415                     	;# 
   200  0416                     	;# 
   201  0417                     	;# 
   202  041C                     	;# 
   203  041D                     	;# 
   204  041E                     	;# 
   205  0791                     	;# 
   206  0792                     	;# 
   207  0793                     	;# 
   208  0794                     	;# 
   209  0795                     	;# 
   210  0798                     	;# 
   211  0799                     	;# 
   212  079A                     	;# 
   213  07A0                     	;# 
   214  07A1                     	;# 
   215  07A2                     	;# 
   216  07A3                     	;# 
   217  07A4                     	;# 
   218  07A5                     	;# 
   219  07A6                     	;# 
   220  07A7                     	;# 
   221  07A8                     	;# 
   222  07A9                     	;# 
   223  07AA                     	;# 
   224  07AB                     	;# 
   225  0FE4                     	;# 
   226  0FE5                     	;# 
   227  0FE6                     	;# 
   228  0FE7                     	;# 
   229  0FE8                     	;# 
   230  0FE9                     	;# 
   231  0FEA                     	;# 
   232  0FEB                     	;# 
   233  0FED                     	;# 
   234  0FEE                     	;# 
   235  0FEF                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  0007                     	;# 
   244  0008                     	;# 
   245  0009                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  000D                     	;# 
   250  000E                     	;# 
   251  000F                     	;# 
   252  0010                     	;# 
   253  0011                     	;# 
   254  0012                     	;# 
   255  0013                     	;# 
   256  0015                     	;# 
   257  0016                     	;# 
   258  0016                     	;# 
   259  0017                     	;# 
   260  0018                     	;# 
   261  0019                     	;# 
   262  001A                     	;# 
   263  001B                     	;# 
   264  001C                     	;# 
   265  001E                     	;# 
   266  001F                     	;# 
   267  008C                     	;# 
   268  008D                     	;# 
   269  008E                     	;# 
   270  008F                     	;# 
   271  0090                     	;# 
   272  0091                     	;# 
   273  0092                     	;# 
   274  0093                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009B                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  010F                     	;# 
   290  0110                     	;# 
   291  0111                     	;# 
   292  0112                     	;# 
   293  0113                     	;# 
   294  0114                     	;# 
   295  0115                     	;# 
   296  0116                     	;# 
   297  0117                     	;# 
   298  0118                     	;# 
   299  0119                     	;# 
   300  011A                     	;# 
   301  011B                     	;# 
   302  011D                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  018F                     	;# 
   306  0190                     	;# 
   307  0191                     	;# 
   308  0191                     	;# 
   309  0192                     	;# 
   310  0193                     	;# 
   311  0193                     	;# 
   312  0193                     	;# 
   313  0194                     	;# 
   314  0195                     	;# 
   315  0196                     	;# 
   316  0199                     	;# 
   317  019A                     	;# 
   318  019B                     	;# 
   319  019B                     	;# 
   320  019B                     	;# 
   321  019B                     	;# 
   322  019C                     	;# 
   323  019C                     	;# 
   324  019D                     	;# 
   325  019E                     	;# 
   326  019F                     	;# 
   327  020D                     	;# 
   328  0210                     	;# 
   329  0211                     	;# 
   330  0212                     	;# 
   331  0213                     	;# 
   332  0214                     	;# 
   333  0215                     	;# 
   334  0215                     	;# 
   335  0216                     	;# 
   336  0217                     	;# 
   337  0291                     	;# 
   338  0291                     	;# 
   339  0292                     	;# 
   340  0293                     	;# 
   341  0294                     	;# 
   342  0295                     	;# 
   343  0295                     	;# 
   344  0296                     	;# 
   345  0298                     	;# 
   346  0298                     	;# 
   347  0299                     	;# 
   348  029A                     	;# 
   349  029B                     	;# 
   350  029C                     	;# 
   351  029C                     	;# 
   352  029D                     	;# 
   353  029E                     	;# 
   354  029F                     	;# 
   355  0311                     	;# 
   356  0311                     	;# 
   357  0312                     	;# 
   358  0313                     	;# 
   359  0314                     	;# 
   360  0315                     	;# 
   361  0315                     	;# 
   362  0316                     	;# 
   363  0318                     	;# 
   364  0318                     	;# 
   365  0319                     	;# 
   366  031A                     	;# 
   367  031C                     	;# 
   368  031C                     	;# 
   369  031D                     	;# 
   370  031E                     	;# 
   371  0394                     	;# 
   372  0395                     	;# 
   373  0396                     	;# 
   374  0415                     	;# 
   375  0416                     	;# 
   376  0417                     	;# 
   377  041C                     	;# 
   378  041D                     	;# 
   379  041E                     	;# 
   380  0791                     	;# 
   381  0792                     	;# 
   382  0793                     	;# 
   383  0794                     	;# 
   384  0795                     	;# 
   385  0798                     	;# 
   386  0799                     	;# 
   387  079A                     	;# 
   388  07A0                     	;# 
   389  07A1                     	;# 
   390  07A2                     	;# 
   391  07A3                     	;# 
   392  07A4                     	;# 
   393  07A5                     	;# 
   394  07A6                     	;# 
   395  07A7                     	;# 
   396  07A8                     	;# 
   397  07A9                     	;# 
   398  07AA                     	;# 
   399  07AB                     	;# 
   400  0FE4                     	;# 
   401  0FE5                     	;# 
   402  0FE6                     	;# 
   403  0FE7                     	;# 
   404  0FE8                     	;# 
   405  0FE9                     	;# 
   406  0FEA                     	;# 
   407  0FEB                     	;# 
   408  0FED                     	;# 
   409  0FEE                     	;# 
   410  0FEF                     	;# 
   411  0000                     	;# 
   412  0001                     	;# 
   413  0002                     	;# 
   414  0003                     	;# 
   415  0004                     	;# 
   416  0005                     	;# 
   417  0006                     	;# 
   418  0007                     	;# 
   419  0008                     	;# 
   420  0009                     	;# 
   421  000A                     	;# 
   422  000B                     	;# 
   423  000C                     	;# 
   424  000D                     	;# 
   425  000E                     	;# 
   426  000F                     	;# 
   427  0010                     	;# 
   428  0011                     	;# 
   429  0012                     	;# 
   430  0013                     	;# 
   431  0015                     	;# 
   432  0016                     	;# 
   433  0016                     	;# 
   434  0017                     	;# 
   435  0018                     	;# 
   436  0019                     	;# 
   437  001A                     	;# 
   438  001B                     	;# 
   439  001C                     	;# 
   440  001E                     	;# 
   441  001F                     	;# 
   442  008C                     	;# 
   443  008D                     	;# 
   444  008E                     	;# 
   445  008F                     	;# 
   446  0090                     	;# 
   447  0091                     	;# 
   448  0092                     	;# 
   449  0093                     	;# 
   450  0095                     	;# 
   451  0096                     	;# 
   452  0097                     	;# 
   453  0098                     	;# 
   454  0099                     	;# 
   455  009A                     	;# 
   456  009B                     	;# 
   457  009B                     	;# 
   458  009C                     	;# 
   459  009D                     	;# 
   460  009E                     	;# 
   461  010C                     	;# 
   462  010D                     	;# 
   463  010E                     	;# 
   464  010F                     	;# 
   465  0110                     	;# 
   466  0111                     	;# 
   467  0112                     	;# 
   468  0113                     	;# 
   469  0114                     	;# 
   470  0115                     	;# 
   471  0116                     	;# 
   472  0117                     	;# 
   473  0118                     	;# 
   474  0119                     	;# 
   475  011A                     	;# 
   476  011B                     	;# 
   477  011D                     	;# 
   478  018C                     	;# 
   479  018D                     	;# 
   480  018F                     	;# 
   481  0190                     	;# 
   482  0191                     	;# 
   483  0191                     	;# 
   484  0192                     	;# 
   485  0193                     	;# 
   486  0193                     	;# 
   487  0193                     	;# 
   488  0194                     	;# 
   489  0195                     	;# 
   490  0196                     	;# 
   491  0199                     	;# 
   492  019A                     	;# 
   493  019B                     	;# 
   494  019B                     	;# 
   495  019B                     	;# 
   496  019B                     	;# 
   497  019C                     	;# 
   498  019C                     	;# 
   499  019D                     	;# 
   500  019E                     	;# 
   501  019F                     	;# 
   502  020D                     	;# 
   503  0210                     	;# 
   504  0211                     	;# 
   505  0212                     	;# 
   506  0213                     	;# 
   507  0214                     	;# 
   508  0215                     	;# 
   509  0215                     	;# 
   510  0216                     	;# 
   511  0217                     	;# 
   512  0291                     	;# 
   513  0291                     	;# 
   514  0292                     	;# 
   515  0293                     	;# 
   516  0294                     	;# 
   517  0295                     	;# 
   518  0295                     	;# 
   519  0296                     	;# 
   520  0298                     	;# 
   521  0298                     	;# 
   522  0299                     	;# 
   523  029A                     	;# 
   524  029B                     	;# 
   525  029C                     	;# 
   526  029C                     	;# 
   527  029D                     	;# 
   528  029E                     	;# 
   529  029F                     	;# 
   530  0311                     	;# 
   531  0311                     	;# 
   532  0312                     	;# 
   533  0313                     	;# 
   534  0314                     	;# 
   535  0315                     	;# 
   536  0315                     	;# 
   537  0316                     	;# 
   538  0318                     	;# 
   539  0318                     	;# 
   540  0319                     	;# 
   541  031A                     	;# 
   542  031C                     	;# 
   543  031C                     	;# 
   544  031D                     	;# 
   545  031E                     	;# 
   546  0394                     	;# 
   547  0395                     	;# 
   548  0396                     	;# 
   549  0415                     	;# 
   550  0416                     	;# 
   551  0417                     	;# 
   552  041C                     	;# 
   553  041D                     	;# 
   554  041E                     	;# 
   555  0791                     	;# 
   556  0792                     	;# 
   557  0793                     	;# 
   558  0794                     	;# 
   559  0795                     	;# 
   560  0798                     	;# 
   561  0799                     	;# 
   562  079A                     	;# 
   563  07A0                     	;# 
   564  07A1                     	;# 
   565  07A2                     	;# 
   566  07A3                     	;# 
   567  07A4                     	;# 
   568  07A5                     	;# 
   569  07A6                     	;# 
   570  07A7                     	;# 
   571  07A8                     	;# 
   572  07A9                     	;# 
   573  07AA                     	;# 
   574  07AB                     	;# 
   575  0FE4                     	;# 
   576  0FE5                     	;# 
   577  0FE6                     	;# 
   578  0FE7                     	;# 
   579  0FE8                     	;# 
   580  0FE9                     	;# 
   581  0FEA                     	;# 
   582  0FEB                     	;# 
   583  0FED                     	;# 
   584  0FEE                     	;# 
   585  0FEF                     	;# 
   586  0000                     	;# 
   587  0001                     	;# 
   588  0002                     	;# 
   589  0003                     	;# 
   590  0004                     	;# 
   591  0005                     	;# 
   592  0006                     	;# 
   593  0007                     	;# 
   594  0008                     	;# 
   595  0009                     	;# 
   596  000A                     	;# 
   597  000B                     	;# 
   598  000C                     	;# 
   599  000D                     	;# 
   600  000E                     	;# 
   601  000F                     	;# 
   602  0010                     	;# 
   603  0011                     	;# 
   604  0012                     	;# 
   605  0013                     	;# 
   606  0015                     	;# 
   607  0016                     	;# 
   608  0016                     	;# 
   609  0017                     	;# 
   610  0018                     	;# 
   611  0019                     	;# 
   612  001A                     	;# 
   613  001B                     	;# 
   614  001C                     	;# 
   615  001E                     	;# 
   616  001F                     	;# 
   617  008C                     	;# 
   618  008D                     	;# 
   619  008E                     	;# 
   620  008F                     	;# 
   621  0090                     	;# 
   622  0091                     	;# 
   623  0092                     	;# 
   624  0093                     	;# 
   625  0095                     	;# 
   626  0096                     	;# 
   627  0097                     	;# 
   628  0098                     	;# 
   629  0099                     	;# 
   630  009A                     	;# 
   631  009B                     	;# 
   632  009B                     	;# 
   633  009C                     	;# 
   634  009D                     	;# 
   635  009E                     	;# 
   636  010C                     	;# 
   637  010D                     	;# 
   638  010E                     	;# 
   639  010F                     	;# 
   640  0110                     	;# 
   641  0111                     	;# 
   642  0112                     	;# 
   643  0113                     	;# 
   644  0114                     	;# 
   645  0115                     	;# 
   646  0116                     	;# 
   647  0117                     	;# 
   648  0118                     	;# 
   649  0119                     	;# 
   650  011A                     	;# 
   651  011B                     	;# 
   652  011D                     	;# 
   653  018C                     	;# 
   654  018D                     	;# 
   655  018F                     	;# 
   656  0190                     	;# 
   657  0191                     	;# 
   658  0191                     	;# 
   659  0192                     	;# 
   660  0193                     	;# 
   661  0193                     	;# 
   662  0193                     	;# 
   663  0194                     	;# 
   664  0195                     	;# 
   665  0196                     	;# 
   666  0199                     	;# 
   667  019A                     	;# 
   668  019B                     	;# 
   669  019B                     	;# 
   670  019B                     	;# 
   671  019B                     	;# 
   672  019C                     	;# 
   673  019C                     	;# 
   674  019D                     	;# 
   675  019E                     	;# 
   676  019F                     	;# 
   677  020D                     	;# 
   678  0210                     	;# 
   679  0211                     	;# 
   680  0212                     	;# 
   681  0213                     	;# 
   682  0214                     	;# 
   683  0215                     	;# 
   684  0215                     	;# 
   685  0216                     	;# 
   686  0217                     	;# 
   687  0291                     	;# 
   688  0291                     	;# 
   689  0292                     	;# 
   690  0293                     	;# 
   691  0294                     	;# 
   692  0295                     	;# 
   693  0295                     	;# 
   694  0296                     	;# 
   695  0298                     	;# 
   696  0298                     	;# 
   697  0299                     	;# 
   698  029A                     	;# 
   699  029B                     	;# 
   700  029C                     	;# 
   701  029C                     	;# 
   702  029D                     	;# 
   703  029E                     	;# 
   704  029F                     	;# 
   705  0311                     	;# 
   706  0311                     	;# 
   707  0312                     	;# 
   708  0313                     	;# 
   709  0314                     	;# 
   710  0315                     	;# 
   711  0315                     	;# 
   712  0316                     	;# 
   713  0318                     	;# 
   714  0318                     	;# 
   715  0319                     	;# 
   716  031A                     	;# 
   717  031C                     	;# 
   718  031C                     	;# 
   719  031D                     	;# 
   720  031E                     	;# 
   721  0394                     	;# 
   722  0395                     	;# 
   723  0396                     	;# 
   724  0415                     	;# 
   725  0416                     	;# 
   726  0417                     	;# 
   727  041C                     	;# 
   728  041D                     	;# 
   729  041E                     	;# 
   730  0791                     	;# 
   731  0792                     	;# 
   732  0793                     	;# 
   733  0794                     	;# 
   734  0795                     	;# 
   735  0798                     	;# 
   736  0799                     	;# 
   737  079A                     	;# 
   738  07A0                     	;# 
   739  07A1                     	;# 
   740  07A2                     	;# 
   741  07A3                     	;# 
   742  07A4                     	;# 
   743  07A5                     	;# 
   744  07A6                     	;# 
   745  07A7                     	;# 
   746  07A8                     	;# 
   747  07A9                     	;# 
   748  07AA                     	;# 
   749  07AB                     	;# 
   750  0FE4                     	;# 
   751  0FE5                     	;# 
   752  0FE6                     	;# 
   753  0FE7                     	;# 
   754  0FE8                     	;# 
   755  0FE9                     	;# 
   756  0FEA                     	;# 
   757  0FEB                     	;# 
   758  0FED                     	;# 
   759  0FEE                     	;# 
   760  0FEF                     	;# 
   761  0000                     	;# 
   762  0001                     	;# 
   763  0002                     	;# 
   764  0003                     	;# 
   765  0004                     	;# 
   766  0005                     	;# 
   767  0006                     	;# 
   768  0007                     	;# 
   769  0008                     	;# 
   770  0009                     	;# 
   771  000A                     	;# 
   772  000B                     	;# 
   773  000C                     	;# 
   774  000D                     	;# 
   775  000E                     	;# 
   776  000F                     	;# 
   777  0010                     	;# 
   778  0011                     	;# 
   779  0012                     	;# 
   780  0013                     	;# 
   781  0015                     	;# 
   782  0016                     	;# 
   783  0016                     	;# 
   784  0017                     	;# 
   785  0018                     	;# 
   786  0019                     	;# 
   787  001A                     	;# 
   788  001B                     	;# 
   789  001C                     	;# 
   790  001E                     	;# 
   791  001F                     	;# 
   792  008C                     	;# 
   793  008D                     	;# 
   794  008E                     	;# 
   795  008F                     	;# 
   796  0090                     	;# 
   797  0091                     	;# 
   798  0092                     	;# 
   799  0093                     	;# 
   800  0095                     	;# 
   801  0096                     	;# 
   802  0097                     	;# 
   803  0098                     	;# 
   804  0099                     	;# 
   805  009A                     	;# 
   806  009B                     	;# 
   807  009B                     	;# 
   808  009C                     	;# 
   809  009D                     	;# 
   810  009E                     	;# 
   811  010C                     	;# 
   812  010D                     	;# 
   813  010E                     	;# 
   814  010F                     	;# 
   815  0110                     	;# 
   816  0111                     	;# 
   817  0112                     	;# 
   818  0113                     	;# 
   819  0114                     	;# 
   820  0115                     	;# 
   821  0116                     	;# 
   822  0117                     	;# 
   823  0118                     	;# 
   824  0119                     	;# 
   825  011A                     	;# 
   826  011B                     	;# 
   827  011D                     	;# 
   828  018C                     	;# 
   829  018D                     	;# 
   830  018F                     	;# 
   831  0190                     	;# 
   832  0191                     	;# 
   833  0191                     	;# 
   834  0192                     	;# 
   835  0193                     	;# 
   836  0193                     	;# 
   837  0193                     	;# 
   838  0194                     	;# 
   839  0195                     	;# 
   840  0196                     	;# 
   841  0199                     	;# 
   842  019A                     	;# 
   843  019B                     	;# 
   844  019B                     	;# 
   845  019B                     	;# 
   846  019B                     	;# 
   847  019C                     	;# 
   848  019C                     	;# 
   849  019D                     	;# 
   850  019E                     	;# 
   851  019F                     	;# 
   852  020D                     	;# 
   853  0210                     	;# 
   854  0211                     	;# 
   855  0212                     	;# 
   856  0213                     	;# 
   857  0214                     	;# 
   858  0215                     	;# 
   859  0215                     	;# 
   860  0216                     	;# 
   861  0217                     	;# 
   862  0291                     	;# 
   863  0291                     	;# 
   864  0292                     	;# 
   865  0293                     	;# 
   866  0294                     	;# 
   867  0295                     	;# 
   868  0295                     	;# 
   869  0296                     	;# 
   870  0298                     	;# 
   871  0298                     	;# 
   872  0299                     	;# 
   873  029A                     	;# 
   874  029B                     	;# 
   875  029C                     	;# 
   876  029C                     	;# 
   877  029D                     	;# 
   878  029E                     	;# 
   879  029F                     	;# 
   880  0311                     	;# 
   881  0311                     	;# 
   882  0312                     	;# 
   883  0313                     	;# 
   884  0314                     	;# 
   885  0315                     	;# 
   886  0315                     	;# 
   887  0316                     	;# 
   888  0318                     	;# 
   889  0318                     	;# 
   890  0319                     	;# 
   891  031A                     	;# 
   892  031C                     	;# 
   893  031C                     	;# 
   894  031D                     	;# 
   895  031E                     	;# 
   896  0394                     	;# 
   897  0395                     	;# 
   898  0396                     	;# 
   899  0415                     	;# 
   900  0416                     	;# 
   901  0417                     	;# 
   902  041C                     	;# 
   903  041D                     	;# 
   904  041E                     	;# 
   905  0791                     	;# 
   906  0792                     	;# 
   907  0793                     	;# 
   908  0794                     	;# 
   909  0795                     	;# 
   910  0798                     	;# 
   911  0799                     	;# 
   912  079A                     	;# 
   913  07A0                     	;# 
   914  07A1                     	;# 
   915  07A2                     	;# 
   916  07A3                     	;# 
   917  07A4                     	;# 
   918  07A5                     	;# 
   919  07A6                     	;# 
   920  07A7                     	;# 
   921  07A8                     	;# 
   922  07A9                     	;# 
   923  07AA                     	;# 
   924  07AB                     	;# 
   925  0FE4                     	;# 
   926  0FE5                     	;# 
   927  0FE6                     	;# 
   928  0FE7                     	;# 
   929  0FE8                     	;# 
   930  0FE9                     	;# 
   931  0FEA                     	;# 
   932  0FEB                     	;# 
   933  0FED                     	;# 
   934  0FEE                     	;# 
   935  0FEF                     	;# 
   936                           
   937                           	psect	nvBANK0
   938  0038                     __pnvBANK0:	
   939  0038                     _eusartTxBufferRemaining:	
   940  0038                     	ds	1
   941  0011                     _PIR1bits	set	17
   942  000B                     _INTCONbits	set	11
   943  0091                     _PIE1bits	set	145
   944  0095                     _OPTION_REGbits	set	149
   945  008F                     _TRISD	set	143
   946  008E                     _TRISC	set	142
   947  008D                     _TRISB	set	141
   948  008C                     _TRISA	set	140
   949  0090                     _TRISE	set	144
   950  0097                     _WDTCON	set	151
   951  0098                     _OSCTUNE	set	152
   952  0099                     _OSCCON	set	153
   953  011D                     _APFCON	set	285
   954  010E                     _LATC	set	270
   955  010D                     _LATB	set	269
   956  010C                     _LATA	set	268
   957  010F                     _LATD	set	271
   958  0110                     _LATE	set	272
   959  0199                     _RCREG	set	409
   960  019D                     _RCSTAbits	set	413
   961  019A                     _TXREG	set	410
   962  019C                     _SPBRGH	set	412
   963  019B                     _SPBRGL	set	411
   964  019E                     _TXSTA	set	414
   965  019D                     _RCSTA	set	413
   966  019F                     _BAUDCON	set	415
   967  018C                     _ANSELA	set	396
   968  0190                     _ANSELE	set	400
   969  018F                     _ANSELD	set	399
   970  018D                     _ANSELB	set	397
   971  020D                     _WPUB	set	525
   972  0210                     _WPUE	set	528
   973                           
   974                           	psect	stringtext1
   975  012D                     __pstringtext1:	
   976  012D                     STR_1:	
   977  012D  346D               	retlw	109	;'m'
   978  012E  3465               	retlw	101	;'e'
   979  012F  3472               	retlw	114	;'r'
   980  0130  3467               	retlw	103	;'g'
   981  0131  3465               	retlw	101	;'e'
   982  0132  3420               	retlw	32	;' '
   983  0133  346F               	retlw	111	;'o'
   984  0134  3420               	retlw	32	;' '
   985  0135  3470               	retlw	112	;'p'
   986  0136  3475               	retlw	117	;'u'
   987  0137  346C               	retlw	108	;'l'
   988  0138  3461               	retlw	97	;'a'
   989  0139  340A               	retlw	10
   990  013A  340D               	retlw	13
   991  013B  3400               	retlw	0
   992                           
   993                           	psect	stringtext2
   994  0000                     __pstringtext2:	
   995  012D                     
   996                           ; #config settings
   997  0000                     
   998                           	psect	cinit
   999  0029                     start_initialization:	
  1000  0029                     __initialization:	
  1001                           
  1002                           ; Clear objects allocated to COMMON
  1003  0029  01FA               	clrf	__pbssCOMMON& (0+127)
  1004  002A  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1005                           
  1006                           ; Clear objects allocated to BANK0
  1007  002B  3020               	movlw	low __pbssBANK0
  1008  002C  0084               	movwf	4
  1009  002D  3000               	movlw	high __pbssBANK0
  1010  002E  0085               	movwf	5
  1011  002F  3013               	movlw	19
  1012  0030  3181  2148         	fcall	clear_ram0
  1013  0032                     end_of_initialization:	
  1014                           ;End of C runtime variable initialization code
  1015                           
  1016  0032                     __end_of__initialization:	
  1017  0032  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1018  0033  0020               	movlb	0
  1019  0034  3180  2836         	ljmp	_main	;jump to C main() function
  1020                           
  1021                           	psect	bssCOMMON
  1022  007A                     __pbssCOMMON:	
  1023  007A                     _eusartTxTail:	
  1024  007A                     	ds	1
  1025  007B                     _eusartTxHead:	
  1026  007B                     	ds	1
  1027                           
  1028                           	psect	bssBANK0
  1029  0020                     __pbssBANK0:	
  1030  0020                     _eusartRxBuffer:	
  1031  0020                     	ds	8
  1032  0028                     _eusartTxBuffer:	
  1033  0028                     	ds	8
  1034  0030                     _eusartRxCount:	
  1035  0030                     	ds	1
  1036  0031                     _eusartRxTail:	
  1037  0031                     	ds	1
  1038  0032                     _eusartRxHead:	
  1039  0032                     	ds	1
  1040                           
  1041                           	psect	clrtext
  1042  0148                     clear_ram0:	
  1043                           ;	Called with FSR0 containing the base address, and
  1044                           ;	WREG with the size to clear
  1045                           
  1046  0148  0064               	clrwdt	;clear the watchdog before getting into this loop
  1047  0149                     clrloop0:	
  1048  0149  0180               	clrf	0	;clear RAM location pointed to by FSR
  1049  014A  3101               	addfsr 0,1
  1050  014B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1051  014C  2949               	goto	clrloop0	;have we reached the end yet?
  1052  014D  3400               	retlw	0	;all done for this memory range, return
  1053                           
  1054                           	psect	cstackCOMMON
  1055  0070                     __pcstackCOMMON:	
  1056  0070                     ?_PIN_MANAGER_Initialize:	
  1057  0070                     ?_OSCILLATOR_Initialize:	
  1058                           ; 1 bytes @ 0x0
  1059                           
  1060  0070                     ?_WDT_Initialize:	
  1061                           ; 1 bytes @ 0x0
  1062                           
  1063  0070                     ?_EUSART_Initialize:	
  1064                           ; 1 bytes @ 0x0
  1065                           
  1066  0070                     ?_SYSTEM_Initialize:	
  1067                           ; 1 bytes @ 0x0
  1068                           
  1069  0070                     ?_EUSART_Write:	
  1070                           ; 1 bytes @ 0x0
  1071                           
  1072  0070                     ?_putch:	
  1073                           ; 1 bytes @ 0x0
  1074                           
  1075  0070                     ?_EUSART_Transmit_ISR:	
  1076                           ; 1 bytes @ 0x0
  1077                           
  1078  0070                     ??_EUSART_Transmit_ISR:	
  1079                           ; 1 bytes @ 0x0
  1080                           
  1081  0070                     ?_EUSART_Receive_ISR:	
  1082                           ; 1 bytes @ 0x0
  1083                           
  1084  0070                     ??_EUSART_Receive_ISR:	
  1085                           ; 1 bytes @ 0x0
  1086                           
  1087  0070                     ?_INTERRUPT_InterruptManager:	
  1088                           ; 1 bytes @ 0x0
  1089                           
  1090  0070                     ?_main:	
  1091                           ; 1 bytes @ 0x0
  1092                           
  1093                           
  1094                           ; 1 bytes @ 0x0
  1095  0070                     	ds	1
  1096  0071                     ??_INTERRUPT_InterruptManager:	
  1097                           
  1098                           ; 1 bytes @ 0x1
  1099  0071                     	ds	1
  1100  0072                     ??_PIN_MANAGER_Initialize:	
  1101  0072                     ??_OSCILLATOR_Initialize:	
  1102                           ; 1 bytes @ 0x2
  1103                           
  1104  0072                     ??_WDT_Initialize:	
  1105                           ; 1 bytes @ 0x2
  1106                           
  1107  0072                     ??_EUSART_Initialize:	
  1108                           ; 1 bytes @ 0x2
  1109                           
  1110  0072                     ??_EUSART_Write:	
  1111                           ; 1 bytes @ 0x2
  1112                           
  1113                           
  1114                           ; 1 bytes @ 0x2
  1115  0072                     	ds	1
  1116  0073                     ??_SYSTEM_Initialize:	
  1117  0073                     EUSART_Write@txData:	
  1118                           ; 1 bytes @ 0x3
  1119                           
  1120                           
  1121                           ; 1 bytes @ 0x3
  1122  0073                     	ds	1
  1123  0074                     ??_putch:	
  1124  0074                     putch@txData:	
  1125                           ; 1 bytes @ 0x4
  1126                           
  1127                           
  1128                           ; 1 bytes @ 0x4
  1129  0074                     	ds	1
  1130  0075                     ?_printf:	
  1131  0075                     printf@f:	
  1132                           ; 2 bytes @ 0x5
  1133                           
  1134                           
  1135                           ; 2 bytes @ 0x5
  1136  0075                     	ds	2
  1137  0077                     ??_printf:	
  1138                           
  1139                           ; 1 bytes @ 0x7
  1140  0077                     	ds	3
  1141                           
  1142                           	psect	cstackBANK0
  1143  0033                     __pcstackBANK0:	
  1144  0033                     printf@ap:	
  1145                           
  1146                           ; 1 bytes @ 0x0
  1147  0033                     	ds	1
  1148  0034                     printf@c:	
  1149                           
  1150                           ; 1 bytes @ 0x1
  1151  0034                     	ds	1
  1152  0035                     ??_main:	
  1153                           
  1154                           ; 1 bytes @ 0x2
  1155  0035                     	ds	2
  1156  0037                     main@x:	
  1157                           
  1158                           ; 1 bytes @ 0x4
  1159  0037                     	ds	1
  1160                           
  1161                           	psect	maintext
  1162  0036                     __pmaintext:	
  1163 ;;
  1164 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1165 ;;
  1166 ;; *************** function _main *****************
  1167 ;; Defined at:
  1168 ;;		line 51 in file "main.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;		None
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;  x               1    4[BANK0 ] unsigned char 
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1177 ;; Tracked objects:
  1178 ;;		On entry : B1F/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1182 ;;      Params:         0       0       0       0       0       0       0       0
  1183 ;;      Locals:         0       1       0       0       0       0       0       0
  1184 ;;      Temps:          0       2       0       0       0       0       0       0
  1185 ;;      Totals:         0       3       0       0       0       0       0       0
  1186 ;;Total ram usage:        3 bytes
  1187 ;; Hardware stack levels required when called:    5
  1188 ;; This function calls:
  1189 ;;		_SYSTEM_Initialize
  1190 ;;		_printf
  1191 ;; This function is called by:
  1192 ;;		Startup code after reset
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           
  1197                           ;psect for function _main
  1198  0036                     _main:	
  1199                           
  1200                           ;main.c: 53: char x=0;
  1201                           
  1202                           ;incstack = 0
  1203                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1204  0036  0020               	movlb	0	; select bank0
  1205  0037  01B7               	clrf	main@x
  1206                           
  1207                           ;main.c: 55: SYSTEM_Initialize();
  1208  0038  3181  213C  3180   	fcall	_SYSTEM_Initialize
  1209                           
  1210                           ;main.c: 62: (INTCONbits.GIE = 1);
  1211  003B  178B               	bsf	11,7	;volatile
  1212                           
  1213                           ;main.c: 65: (INTCONbits.PEIE = 1);
  1214  003C  170B               	bsf	11,6	;volatile
  1215                           
  1216                           ;main.c: 72: printf("merge o pula\n\r");
  1217  003D  302D               	movlw	low (STR_1| (0+32768))
  1218  003E  00F5               	movwf	printf@f
  1219  003F  3081               	movlw	high (STR_1| (0+32768))
  1220  0040  00F6               	movwf	printf@f+1
  1221  0041  3180  20BD  3180   	fcall	_printf
  1222                           
  1223                           ;main.c: 73: _delay((unsigned long)((500)*(18432000/4000.0)));
  1224  0044  300C               	movlw	12
  1225  0045  0020               	movlb	0	; select bank0
  1226  0046  00B6               	movwf	??_main+1
  1227  0047  30B1               	movlw	177
  1228  0048  00B5               	movwf	??_main
  1229  0049  302B               	movlw	43
  1230  004A                     u377:	
  1231  004A  0B89               	decfsz	9,f
  1232  004B  284A               	goto	u377
  1233  004C  0BB5               	decfsz	??_main,f
  1234  004D  284A               	goto	u377
  1235  004E  0BB6               	decfsz	??_main+1,f
  1236  004F  284A               	goto	u377
  1237                           
  1238                           ;main.c: 74: printf("merge o pula\n\r");
  1239  0050  302D               	movlw	low (STR_1| (0+32768))
  1240  0051  00F5               	movwf	printf@f
  1241  0052  3081               	movlw	high (STR_1| (0+32768))
  1242  0053  00F6               	movwf	printf@f+1
  1243  0054  3180  20BD  3180   	fcall	_printf
  1244                           
  1245                           ;main.c: 75: _delay((unsigned long)((500)*(18432000/4000.0)));
  1246  0057  300C               	movlw	12
  1247  0058  0020               	movlb	0	; select bank0
  1248  0059  00B6               	movwf	??_main+1
  1249  005A  30B1               	movlw	177
  1250  005B  00B5               	movwf	??_main
  1251  005C  302B               	movlw	43
  1252  005D                     u387:	
  1253  005D  0B89               	decfsz	9,f
  1254  005E  285D               	goto	u387
  1255  005F  0BB5               	decfsz	??_main,f
  1256  0060  285D               	goto	u387
  1257  0061  0BB6               	decfsz	??_main+1,f
  1258  0062  285D               	goto	u387
  1259                           
  1260                           ;main.c: 76: printf("merge o pula\n\r");
  1261  0063  302D               	movlw	low (STR_1| (0+32768))
  1262  0064  00F5               	movwf	printf@f
  1263  0065  3081               	movlw	high (STR_1| (0+32768))
  1264  0066  00F6               	movwf	printf@f+1
  1265  0067  3180  20BD  3180   	fcall	_printf
  1266                           
  1267                           ;main.c: 77: _delay((unsigned long)((500)*(18432000/4000.0)));
  1268  006A  300C               	movlw	12
  1269  006B  0020               	movlb	0	; select bank0
  1270  006C  00B6               	movwf	??_main+1
  1271  006D  30B1               	movlw	177
  1272  006E  00B5               	movwf	??_main
  1273  006F  302B               	movlw	43
  1274  0070                     u397:	
  1275  0070  0B89               	decfsz	9,f
  1276  0071  2870               	goto	u397
  1277  0072  0BB5               	decfsz	??_main,f
  1278  0073  2870               	goto	u397
  1279  0074  0BB6               	decfsz	??_main+1,f
  1280  0075  2870               	goto	u397
  1281  0076                     l169:	
  1282                           ;main.c: 78: while (1)
  1283                           
  1284                           
  1285                           ;main.c: 79: {
  1286  0076  2876               	goto	l169
  1287  0077                     __end_of_main:	
  1288                           
  1289                           	psect	text1
  1290  00BD                     __ptext1:	
  1291 ;; *************** function _printf *****************
  1292 ;; Defined at:
  1293 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\doprnt.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;  f               2    5[COMMON] PTR const unsigned char 
  1296 ;;		 -> STR_3(15), STR_2(15), STR_1(15), 
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;  tmpval          4    0        struct .
  1299 ;;  cp              2    0        PTR const unsigned char 
  1300 ;;  len             2    0        unsigned int 
  1301 ;;  val             2    0        unsigned int 
  1302 ;;  c               1    1[BANK0 ] char 
  1303 ;;  ap              1    0[BANK0 ] PTR void [1]
  1304 ;;		 -> ?_printf(2), 
  1305 ;;  flag            1    0        unsigned char 
  1306 ;;  prec            1    0        char 
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  2    5[COMMON] int 
  1309 ;; Registers used:
  1310 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1316 ;;      Params:         2       0       0       0       0       0       0       0
  1317 ;;      Locals:         0       2       0       0       0       0       0       0
  1318 ;;      Temps:          3       0       0       0       0       0       0       0
  1319 ;;      Totals:         5       2       0       0       0       0       0       0
  1320 ;;Total ram usage:        7 bytes
  1321 ;; Hardware stack levels used:    1
  1322 ;; Hardware stack levels required when called:    4
  1323 ;; This function calls:
  1324 ;;		_putch
  1325 ;; This function is called by:
  1326 ;;		_main
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           
  1331                           ;psect for function _printf
  1332  00BD                     _printf:	
  1333                           
  1334                           ;doprnt.c: 466: va_list ap;
  1335                           ;doprnt.c: 499: signed char c;
  1336                           ;doprnt.c: 506: signed char prec;
  1337                           ;doprnt.c: 508: unsigned char flag;
  1338                           ;doprnt.c: 523: union {
  1339                           ;doprnt.c: 524: unsigned long vd;
  1340                           ;doprnt.c: 525: double integ;
  1341                           ;doprnt.c: 526: } tmpval;
  1342                           ;doprnt.c: 528: unsigned int val;
  1343                           ;doprnt.c: 529: unsigned len;
  1344                           ;doprnt.c: 530: const char * cp;
  1345                           ;doprnt.c: 533: *ap = __va_start();
  1346                           
  1347                           ;incstack = 0
  1348                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1349  00BD  3077               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1350  00BE  00F7               	movwf	??_printf
  1351  00BF  0877               	movf	??_printf,w
  1352  00C0  0020               	movlb	0	; select bank0
  1353  00C1  00B3               	movwf	printf@ap
  1354  00C2                     l990:	
  1355                           ;doprnt.c: 543: }
  1356                           ;doprnt.c: 1422: {
  1357                           
  1358                           ;doprnt.c: 542: continue;
  1359                           
  1360                           ;doprnt.c: 536: while(c = *f++) {
  1361                           
  1362  00C2  0876               	movf	printf@f+1,w
  1363  00C3  00F8               	movwf	??_printf+1
  1364  00C4  0875               	movf	printf@f,w
  1365  00C5  00F7               	movwf	??_printf
  1366  00C6  0AF5               	incf	printf@f,f
  1367  00C7  1903               	skipnz
  1368  00C8  0AF6               	incf	printf@f+1,f
  1369  00C9  0877               	movf	??_printf,w
  1370  00CA  0084               	movwf	4
  1371  00CB  0878               	movf	??_printf+1,w
  1372  00CC  0085               	movwf	5
  1373  00CD  0800               	movf	0,w	;code access
  1374  00CE  00F9               	movwf	??_printf+2
  1375  00CF  0879               	movf	??_printf+2,w
  1376  00D0  0020               	movlb	0	; select bank0
  1377  00D1  00B4               	movwf	printf@c
  1378  00D2  0834               	movf	printf@c,w
  1379  00D3  1903               	btfsc	3,2
  1380  00D4  0008               	return
  1381                           
  1382                           ;doprnt.c: 540: {
  1383                           ;doprnt.c: 541: (putch(c) );
  1384  00D5  0834               	movf	printf@c,w
  1385  00D6  3181  214E  3180   	fcall	_putch
  1386  00D9  28C2               	goto	l990
  1387  00DA                     __end_of_printf:	
  1388                           ;doprnt.c: 1469: }
  1389                           ;doprnt.c: 1533: }
  1390                           ;doprnt.c: 1540: return 0;
  1391                           ;	Return value of _printf is never used
  1392                           
  1393                           
  1394                           	psect	text2
  1395  014E                     __ptext2:	
  1396 ;; *************** function _putch *****************
  1397 ;; Defined at:
  1398 ;;		line 160 in file "mcc_generated_files/eusart.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;  txData          1    wreg     unsigned char 
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;  txData          1    4[COMMON] unsigned char 
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      void 
  1405 ;; Registers used:
  1406 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1412 ;;      Params:         0       0       0       0       0       0       0       0
  1413 ;;      Locals:         1       0       0       0       0       0       0       0
  1414 ;;      Temps:          0       0       0       0       0       0       0       0
  1415 ;;      Totals:         1       0       0       0       0       0       0       0
  1416 ;;Total ram usage:        1 bytes
  1417 ;; Hardware stack levels used:    1
  1418 ;; Hardware stack levels required when called:    3
  1419 ;; This function calls:
  1420 ;;		_EUSART_Write
  1421 ;; This function is called by:
  1422 ;;		_printf
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           
  1427                           ;psect for function _putch
  1428  014E                     _putch:	
  1429                           
  1430                           ;incstack = 0
  1431                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1432                           ;putch@txData stored from wreg
  1433  014E  00F4               	movwf	putch@txData
  1434                           
  1435                           ;eusart.c: 162: EUSART_Write(txData);
  1436  014F  0874               	movf	putch@txData,w
  1437  0150  3180  2077         	fcall	_EUSART_Write
  1438  0152  0008               	return
  1439  0153                     __end_of_putch:	
  1440                           
  1441                           	psect	text3
  1442  0077                     __ptext3:	
  1443 ;; *************** function _EUSART_Write *****************
  1444 ;; Defined at:
  1445 ;;		line 132 in file "mcc_generated_files/eusart.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;  txData          1    wreg     unsigned char 
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;  txData          1    3[COMMON] unsigned char 
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      void 
  1452 ;; Registers used:
  1453 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1459 ;;      Params:         0       0       0       0       0       0       0       0
  1460 ;;      Locals:         1       0       0       0       0       0       0       0
  1461 ;;      Temps:          1       0       0       0       0       0       0       0
  1462 ;;      Totals:         2       0       0       0       0       0       0       0
  1463 ;;Total ram usage:        2 bytes
  1464 ;; Hardware stack levels used:    1
  1465 ;; Hardware stack levels required when called:    2
  1466 ;; This function calls:
  1467 ;;		Nothing
  1468 ;; This function is called by:
  1469 ;;		_putch
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           
  1474                           ;psect for function _EUSART_Write
  1475  0077                     _EUSART_Write:	
  1476                           
  1477                           ;incstack = 0
  1478                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  1479                           ;EUSART_Write@txData stored from wreg
  1480  0077  00F3               	movwf	EUSART_Write@txData
  1481  0078                     l968:	
  1482                           ;eusart.c: 135: {
  1483                           
  1484                           ;eusart.c: 134: while(0 == eusartTxBufferRemaining)
  1485                           
  1486  0078  0020               	movlb	0	; select bank0
  1487  0079  0838               	movf	_eusartTxBufferRemaining,w	;volatile
  1488  007A  1903               	btfsc	3,2
  1489  007B  2878               	goto	l968
  1490                           
  1491                           ;eusart.c: 136: }
  1492                           ;eusart.c: 138: if(0 == PIE1bits.TXIE)
  1493  007C  0021               	movlb	1	; select bank1
  1494  007D  1A11               	btfsc	17,4	;volatile
  1495  007E  2883               	goto	l115
  1496                           
  1497                           ;eusart.c: 139: {
  1498                           ;eusart.c: 140: TXREG = txData;
  1499  007F  0873               	movf	EUSART_Write@txData,w
  1500  0080  0023               	movlb	3	; select bank3
  1501  0081  009A               	movwf	26	;volatile
  1502                           
  1503                           ;eusart.c: 141: }
  1504  0082  2897               	goto	l982
  1505  0083                     l115:	
  1506                           
  1507                           ;eusart.c: 142: else
  1508                           ;eusart.c: 143: {
  1509                           ;eusart.c: 144: PIE1bits.TXIE = 0;
  1510  0083  1211               	bcf	17,4	;volatile
  1511                           
  1512                           ;eusart.c: 145: eusartTxBuffer[eusartTxHead++] = txData;
  1513  0084  0873               	movf	EUSART_Write@txData,w
  1514  0085  00F2               	movwf	??_EUSART_Write
  1515  0086  087B               	movf	_eusartTxHead,w
  1516  0087  3E28               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  1517  0088  0086               	movwf	6
  1518  0089  0187               	clrf	7
  1519  008A  0872               	movf	??_EUSART_Write,w
  1520  008B  0081               	movwf	1
  1521  008C  3001               	movlw	1
  1522  008D  00F2               	movwf	??_EUSART_Write
  1523  008E  0872               	movf	??_EUSART_Write,w
  1524  008F  07FB               	addwf	_eusartTxHead,f	;volatile
  1525                           
  1526                           ;eusart.c: 146: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  1527  0090  3008               	movlw	8
  1528  0091  027B               	subwf	_eusartTxHead,w	;volatile
  1529  0092  1803               	btfsc	3,0
  1530                           
  1531                           ;eusart.c: 147: {
  1532                           ;eusart.c: 148: eusartTxHead = 0;
  1533  0093  01FB               	clrf	_eusartTxHead	;volatile
  1534                           
  1535                           ;eusart.c: 149: }
  1536                           ;eusart.c: 150: eusartTxBufferRemaining--;
  1537  0094  3001               	movlw	1
  1538  0095  0020               	movlb	0	; select bank0
  1539  0096  02B8               	subwf	_eusartTxBufferRemaining,f	;volatile
  1540  0097                     l982:	
  1541                           
  1542                           ;eusart.c: 151: }
  1543                           ;eusart.c: 152: PIE1bits.TXIE = 1;
  1544  0097  0021               	movlb	1	; select bank1
  1545  0098  1611               	bsf	17,4	;volatile
  1546  0099  0008               	return
  1547  009A                     __end_of_EUSART_Write:	
  1548                           
  1549                           	psect	text4
  1550  013C                     __ptext4:	
  1551 ;; *************** function _SYSTEM_Initialize *****************
  1552 ;; Defined at:
  1553 ;;		line 70 in file "mcc_generated_files/mcc.c"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;		None
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;		None
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  1    wreg      void 
  1560 ;; Registers used:
  1561 ;;		wreg, status,2, status,0, pclath, cstack
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1567 ;;      Params:         0       0       0       0       0       0       0       0
  1568 ;;      Locals:         0       0       0       0       0       0       0       0
  1569 ;;      Temps:          0       0       0       0       0       0       0       0
  1570 ;;      Totals:         0       0       0       0       0       0       0       0
  1571 ;;Total ram usage:        0 bytes
  1572 ;; Hardware stack levels used:    1
  1573 ;; Hardware stack levels required when called:    3
  1574 ;; This function calls:
  1575 ;;		_EUSART_Initialize
  1576 ;;		_OSCILLATOR_Initialize
  1577 ;;		_PIN_MANAGER_Initialize
  1578 ;;		_WDT_Initialize
  1579 ;; This function is called by:
  1580 ;;		_main
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584                           
  1585                           ;psect for function _SYSTEM_Initialize
  1586  013C                     _SYSTEM_Initialize:	
  1587                           
  1588                           ;mcc.c: 73: PIN_MANAGER_Initialize();
  1589                           
  1590                           ;incstack = 0
  1591                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  1592  013C  3180  209A  3181   	fcall	_PIN_MANAGER_Initialize
  1593                           
  1594                           ;mcc.c: 74: OSCILLATOR_Initialize();
  1595  013F  3181  2153  3181   	fcall	_OSCILLATOR_Initialize
  1596                           
  1597                           ;mcc.c: 75: WDT_Initialize();
  1598  0142  3181  2158  3181   	fcall	_WDT_Initialize
  1599                           
  1600                           ;mcc.c: 76: EUSART_Initialize();
  1601  0145  3180  20F7         	fcall	_EUSART_Initialize
  1602  0147  0008               	return
  1603  0148                     __end_of_SYSTEM_Initialize:	
  1604                           
  1605                           	psect	text5
  1606  0158                     __ptext5:	
  1607 ;; *************** function _WDT_Initialize *****************
  1608 ;; Defined at:
  1609 ;;		line 87 in file "mcc_generated_files/mcc.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;		None
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;		None
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		wreg
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1623 ;;      Params:         0       0       0       0       0       0       0       0
  1624 ;;      Locals:         0       0       0       0       0       0       0       0
  1625 ;;      Temps:          0       0       0       0       0       0       0       0
  1626 ;;      Totals:         0       0       0       0       0       0       0       0
  1627 ;;Total ram usage:        0 bytes
  1628 ;; Hardware stack levels used:    1
  1629 ;; Hardware stack levels required when called:    2
  1630 ;; This function calls:
  1631 ;;		Nothing
  1632 ;; This function is called by:
  1633 ;;		_SYSTEM_Initialize
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           
  1638                           ;psect for function _WDT_Initialize
  1639  0158                     _WDT_Initialize:	
  1640                           
  1641                           ;mcc.c: 90: WDTCON = 0x16;
  1642                           
  1643                           ;incstack = 0
  1644                           ; Regs used in _WDT_Initialize: [wreg]
  1645  0158  3016               	movlw	22
  1646  0159  0021               	movlb	1	; select bank1
  1647  015A  0097               	movwf	23	;volatile
  1648  015B  0008               	return
  1649  015C                     __end_of_WDT_Initialize:	
  1650                           
  1651                           	psect	text6
  1652  009A                     __ptext6:	
  1653 ;; *************** function _PIN_MANAGER_Initialize *****************
  1654 ;; Defined at:
  1655 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;		None
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;		None
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  1    wreg      void 
  1662 ;; Registers used:
  1663 ;;		wreg, status,2
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1669 ;;      Params:         0       0       0       0       0       0       0       0
  1670 ;;      Locals:         0       0       0       0       0       0       0       0
  1671 ;;      Temps:          0       0       0       0       0       0       0       0
  1672 ;;      Totals:         0       0       0       0       0       0       0       0
  1673 ;;Total ram usage:        0 bytes
  1674 ;; Hardware stack levels used:    1
  1675 ;; Hardware stack levels required when called:    2
  1676 ;; This function calls:
  1677 ;;		Nothing
  1678 ;; This function is called by:
  1679 ;;		_SYSTEM_Initialize
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           
  1684                           ;psect for function _PIN_MANAGER_Initialize
  1685  009A                     _PIN_MANAGER_Initialize:	
  1686                           
  1687                           ;pin_manager.c: 57: LATE = 0x00;
  1688                           
  1689                           ;incstack = 0
  1690                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1691  009A  0022               	movlb	2	; select bank2
  1692  009B  0190               	clrf	16	;volatile
  1693                           
  1694                           ;pin_manager.c: 58: LATD = 0x00;
  1695  009C  018F               	clrf	15	;volatile
  1696                           
  1697                           ;pin_manager.c: 59: LATA = 0x00;
  1698  009D  018C               	clrf	12	;volatile
  1699                           
  1700                           ;pin_manager.c: 60: LATB = 0x00;
  1701  009E  018D               	clrf	13	;volatile
  1702                           
  1703                           ;pin_manager.c: 61: LATC = 0x00;
  1704  009F  018E               	clrf	14	;volatile
  1705                           
  1706                           ;pin_manager.c: 66: TRISE = 0x0F;
  1707  00A0  300F               	movlw	15
  1708  00A1  0021               	movlb	1	; select bank1
  1709  00A2  0090               	movwf	16	;volatile
  1710                           
  1711                           ;pin_manager.c: 67: TRISA = 0xFF;
  1712  00A3  30FF               	movlw	255
  1713  00A4  008C               	movwf	12	;volatile
  1714                           
  1715                           ;pin_manager.c: 68: TRISB = 0x00;
  1716  00A5  018D               	clrf	13	;volatile
  1717                           
  1718                           ;pin_manager.c: 69: TRISC = 0xBF;
  1719  00A6  30BF               	movlw	191
  1720  00A7  008E               	movwf	14	;volatile
  1721                           
  1722                           ;pin_manager.c: 70: TRISD = 0xFF;
  1723  00A8  30FF               	movlw	255
  1724  00A9  008F               	movwf	15	;volatile
  1725                           
  1726                           ;pin_manager.c: 75: ANSELB = 0x3F;
  1727  00AA  303F               	movlw	63
  1728  00AB  0023               	movlb	3	; select bank3
  1729  00AC  008D               	movwf	13	;volatile
  1730                           
  1731                           ;pin_manager.c: 76: ANSELD = 0xFF;
  1732  00AD  30FF               	movlw	255
  1733  00AE  008F               	movwf	15	;volatile
  1734                           
  1735                           ;pin_manager.c: 77: ANSELE = 0x07;
  1736  00AF  3007               	movlw	7
  1737  00B0  0090               	movwf	16	;volatile
  1738                           
  1739                           ;pin_manager.c: 78: ANSELA = 0x3F;
  1740  00B1  303F               	movlw	63
  1741  00B2  008C               	movwf	12	;volatile
  1742                           
  1743                           ;pin_manager.c: 83: WPUE = 0x08;
  1744  00B3  3008               	movlw	8
  1745  00B4  0024               	movlb	4	; select bank4
  1746  00B5  0090               	movwf	16	;volatile
  1747                           
  1748                           ;pin_manager.c: 84: WPUB = 0xFF;
  1749  00B6  30FF               	movlw	255
  1750  00B7  008D               	movwf	13	;volatile
  1751                           
  1752                           ;pin_manager.c: 85: OPTION_REGbits.nWPUEN = 0;
  1753  00B8  0021               	movlb	1	; select bank1
  1754  00B9  1395               	bcf	21,7	;volatile
  1755                           
  1756                           ;pin_manager.c: 91: APFCON = 0x00;
  1757  00BA  0022               	movlb	2	; select bank2
  1758  00BB  019D               	clrf	29	;volatile
  1759  00BC  0008               	return
  1760  00BD                     __end_of_PIN_MANAGER_Initialize:	
  1761                           
  1762                           	psect	text7
  1763  0153                     __ptext7:	
  1764 ;; *************** function _OSCILLATOR_Initialize *****************
  1765 ;; Defined at:
  1766 ;;		line 79 in file "mcc_generated_files/mcc.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;		None
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;		None
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg, status,2
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1780 ;;      Params:         0       0       0       0       0       0       0       0
  1781 ;;      Locals:         0       0       0       0       0       0       0       0
  1782 ;;      Temps:          0       0       0       0       0       0       0       0
  1783 ;;      Totals:         0       0       0       0       0       0       0       0
  1784 ;;Total ram usage:        0 bytes
  1785 ;; Hardware stack levels used:    1
  1786 ;; Hardware stack levels required when called:    2
  1787 ;; This function calls:
  1788 ;;		Nothing
  1789 ;; This function is called by:
  1790 ;;		_SYSTEM_Initialize
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           
  1795                           ;psect for function _OSCILLATOR_Initialize
  1796  0153                     _OSCILLATOR_Initialize:	
  1797                           
  1798                           ;mcc.c: 82: OSCCON = 0x38;
  1799                           
  1800                           ;incstack = 0
  1801                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1802  0153  3038               	movlw	56
  1803  0154  0021               	movlb	1	; select bank1
  1804  0155  0099               	movwf	25	;volatile
  1805                           
  1806                           ;mcc.c: 84: OSCTUNE = 0x00;
  1807  0156  0198               	clrf	24	;volatile
  1808  0157  0008               	return
  1809  0158                     __end_of_OSCILLATOR_Initialize:	
  1810                           
  1811                           	psect	text8
  1812  00F7                     __ptext8:	
  1813 ;; *************** function _EUSART_Initialize *****************
  1814 ;; Defined at:
  1815 ;;		line 75 in file "mcc_generated_files/eusart.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;		None
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;		None
  1820 ;; Return value:  Size  Location     Type
  1821 ;;                  1    wreg      void 
  1822 ;; Registers used:
  1823 ;;		wreg, status,2
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 0/0
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1829 ;;      Params:         0       0       0       0       0       0       0       0
  1830 ;;      Locals:         0       0       0       0       0       0       0       0
  1831 ;;      Temps:          1       0       0       0       0       0       0       0
  1832 ;;      Totals:         1       0       0       0       0       0       0       0
  1833 ;;Total ram usage:        1 bytes
  1834 ;; Hardware stack levels used:    1
  1835 ;; Hardware stack levels required when called:    2
  1836 ;; This function calls:
  1837 ;;		Nothing
  1838 ;; This function is called by:
  1839 ;;		_SYSTEM_Initialize
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843                           
  1844                           ;psect for function _EUSART_Initialize
  1845  00F7                     _EUSART_Initialize:	
  1846                           
  1847                           ;eusart.c: 78: PIE1bits.RCIE = 0;
  1848                           
  1849                           ;incstack = 0
  1850                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  1851  00F7  0021               	movlb	1	; select bank1
  1852  00F8  1291               	bcf	17,5	;volatile
  1853                           
  1854                           ;eusart.c: 79: PIE1bits.TXIE = 0;
  1855  00F9  1211               	bcf	17,4	;volatile
  1856                           
  1857                           ;eusart.c: 84: BAUDCON = 0x08;
  1858  00FA  3008               	movlw	8
  1859  00FB  0023               	movlb	3	; select bank3
  1860  00FC  009F               	movwf	31	;volatile
  1861                           
  1862                           ;eusart.c: 87: RCSTA = 0x90;
  1863  00FD  3090               	movlw	144
  1864  00FE  009D               	movwf	29	;volatile
  1865                           
  1866                           ;eusart.c: 90: TXSTA = 0x24;
  1867  00FF  3024               	movlw	36
  1868  0100  009E               	movwf	30	;volatile
  1869                           
  1870                           ;eusart.c: 93: SPBRGL = 0xDF;
  1871  0101  30DF               	movlw	223
  1872  0102  009B               	movwf	27	;volatile
  1873                           
  1874                           ;eusart.c: 96: SPBRGH = 0x01;
  1875  0103  3001               	movlw	1
  1876  0104  009C               	movwf	28	;volatile
  1877                           
  1878                           ;eusart.c: 100: eusartTxHead = 0;
  1879  0105  01FB               	clrf	_eusartTxHead	;volatile
  1880                           
  1881                           ;eusart.c: 101: eusartTxTail = 0;
  1882  0106  01FA               	clrf	_eusartTxTail	;volatile
  1883                           
  1884                           ;eusart.c: 102: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  1885  0107  3008               	movlw	8
  1886  0108  00F2               	movwf	??_EUSART_Initialize
  1887  0109  0872               	movf	??_EUSART_Initialize,w
  1888  010A  0020               	movlb	0	; select bank0
  1889  010B  00B8               	movwf	_eusartTxBufferRemaining	;volatile
  1890                           
  1891                           ;eusart.c: 104: eusartRxHead = 0;
  1892  010C  01B2               	clrf	_eusartRxHead	;volatile
  1893                           
  1894                           ;eusart.c: 105: eusartRxTail = 0;
  1895  010D  01B1               	clrf	_eusartRxTail	;volatile
  1896                           
  1897                           ;eusart.c: 106: eusartRxCount = 0;
  1898  010E  01B0               	clrf	_eusartRxCount	;volatile
  1899                           
  1900                           ;eusart.c: 109: PIE1bits.RCIE = 1;
  1901  010F  0021               	movlb	1	; select bank1
  1902  0110  1691               	bsf	17,5	;volatile
  1903  0111  0008               	return
  1904  0112                     __end_of_EUSART_Initialize:	
  1905                           
  1906                           	psect	intentry
  1907  0004                     __pintentry:	
  1908 ;; *************** function _INTERRUPT_InterruptManager *****************
  1909 ;; Defined at:
  1910 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;		None
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;		None
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      void 
  1917 ;; Registers used:
  1918 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1924 ;;      Params:         0       0       0       0       0       0       0       0
  1925 ;;      Locals:         0       0       0       0       0       0       0       0
  1926 ;;      Temps:          1       0       0       0       0       0       0       0
  1927 ;;      Totals:         1       0       0       0       0       0       0       0
  1928 ;;Total ram usage:        1 bytes
  1929 ;; Hardware stack levels used:    1
  1930 ;; Hardware stack levels required when called:    1
  1931 ;; This function calls:
  1932 ;;		_EUSART_Receive_ISR
  1933 ;;		_EUSART_Transmit_ISR
  1934 ;; This function is called by:
  1935 ;;		Interrupt level 1
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939  0004                     _INTERRUPT_InterruptManager:	
  1940                           
  1941                           ;incstack = 0
  1942  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1943                           
  1944                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  1945  0005  3180               	pagesel	$
  1946  0006  0020               	movlb	0	; select bank0
  1947  0007  087F               	movf	127,w
  1948  0008  00F1               	movwf	??_INTERRUPT_InterruptManager
  1949                           
  1950                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE1bits.TXIE == 1 && PIR1bits.TXIF
      +                           == 1)
  1951  0009  1F0B               	btfss	11,6	;volatile
  1952  000A  2815               	goto	i1l152
  1953  000B  0021               	movlb	1	; select bank1
  1954  000C  1E11               	btfss	17,4	;volatile
  1955  000D  2815               	goto	i1l152
  1956  000E  0020               	movlb	0	; select bank0
  1957  000F  1E11               	btfss	17,4	;volatile
  1958  0010  2815               	goto	i1l152
  1959                           
  1960                           ;interrupt_manager.c: 55: {
  1961                           ;interrupt_manager.c: 56: EUSART_Transmit_ISR();
  1962  0011  3180  20DA  3180   	fcall	_EUSART_Transmit_ISR
  1963                           
  1964                           ;interrupt_manager.c: 57: }
  1965  0014  2822               	goto	i1l156
  1966  0015                     i1l152:	
  1967                           
  1968                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE1bits.RCIE == 1 && PIR1bits
      +                          .RCIF == 1)
  1969  0015  1F0B               	btfss	11,6	;volatile
  1970  0016  2822               	goto	i1l156
  1971  0017  0021               	movlb	1	; select bank1
  1972  0018  1E91               	btfss	17,5	;volatile
  1973  0019  2822               	goto	i1l156
  1974  001A  0020               	movlb	0	; select bank0
  1975  001B  1E91               	btfss	17,5	;volatile
  1976  001C  2822               	goto	i1l156
  1977                           
  1978                           ;interrupt_manager.c: 59: {
  1979                           ;interrupt_manager.c: 60: LATB=0xAA;
  1980  001D  30AA               	movlw	170
  1981  001E  0022               	movlb	2	; select bank2
  1982  001F  008D               	movwf	13	;volatile
  1983                           
  1984                           ;interrupt_manager.c: 61: EUSART_Receive_ISR();
  1985  0020  3181  2112         	fcall	_EUSART_Receive_ISR
  1986  0022                     i1l156:	
  1987                           ;interrupt_manager.c: 63: else
  1988                           ;interrupt_manager.c: 64: {
  1989                           
  1990                           ;interrupt_manager.c: 62: }
  1991                           
  1992  0022  0871               	movf	??_INTERRUPT_InterruptManager,w
  1993  0023  0020               	movlb	0	; select bank0
  1994  0024  00FF               	movwf	127
  1995  0025  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1996  0026  0009               	retfie
  1997  0027                     __end_of_INTERRUPT_InterruptManager:	
  1998                           
  1999                           	psect	text10
  2000  00DA                     __ptext10:	
  2001 ;; *************** function _EUSART_Transmit_ISR *****************
  2002 ;; Defined at:
  2003 ;;		line 165 in file "mcc_generated_files/eusart.c"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;		None
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;		None
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  1    wreg      void 
  2010 ;; Registers used:
  2011 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2017 ;;      Params:         0       0       0       0       0       0       0       0
  2018 ;;      Locals:         0       0       0       0       0       0       0       0
  2019 ;;      Temps:          1       0       0       0       0       0       0       0
  2020 ;;      Totals:         1       0       0       0       0       0       0       0
  2021 ;;Total ram usage:        1 bytes
  2022 ;; Hardware stack levels used:    1
  2023 ;; This function calls:
  2024 ;;		Nothing
  2025 ;; This function is called by:
  2026 ;;		_INTERRUPT_InterruptManager
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           
  2031                           ;psect for function _EUSART_Transmit_ISR
  2032  00DA                     _EUSART_Transmit_ISR:	
  2033                           
  2034                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  2035                           
  2036                           ;incstack = 0
  2037                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2038  00DA  3008               	movlw	8
  2039  00DB  0020               	movlb	0	; select bank0
  2040  00DC  0238               	subwf	_eusartTxBufferRemaining,w	;volatile
  2041  00DD  1803               	skipnc
  2042  00DE  28F4               	goto	i1l127
  2043                           
  2044                           ;eusart.c: 170: {
  2045                           ;eusart.c: 171: TXREG = eusartTxBuffer[eusartTxTail++];
  2046  00DF  087A               	movf	_eusartTxTail,w
  2047  00E0  3E28               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  2048  00E1  0086               	movwf	6
  2049  00E2  0187               	clrf	7
  2050  00E3  0801               	movf	1,w
  2051  00E4  0023               	movlb	3	; select bank3
  2052  00E5  009A               	movwf	26	;volatile
  2053  00E6  3001               	movlw	1
  2054  00E7  00F0               	movwf	??_EUSART_Transmit_ISR
  2055  00E8  0870               	movf	??_EUSART_Transmit_ISR,w
  2056  00E9  07FA               	addwf	_eusartTxTail,f	;volatile
  2057                           
  2058                           ;eusart.c: 172: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  2059  00EA  3008               	movlw	8
  2060  00EB  027A               	subwf	_eusartTxTail,w	;volatile
  2061  00EC  1803               	btfsc	3,0
  2062                           
  2063                           ;eusart.c: 173: {
  2064                           ;eusart.c: 174: eusartTxTail = 0;
  2065  00ED  01FA               	clrf	_eusartTxTail	;volatile
  2066                           
  2067                           ;eusart.c: 175: }
  2068                           ;eusart.c: 176: eusartTxBufferRemaining++;
  2069  00EE  3001               	movlw	1
  2070  00EF  00F0               	movwf	??_EUSART_Transmit_ISR
  2071  00F0  0870               	movf	??_EUSART_Transmit_ISR,w
  2072  00F1  0020               	movlb	0	; select bank0
  2073  00F2  07B8               	addwf	_eusartTxBufferRemaining,f	;volatile
  2074                           
  2075                           ;eusart.c: 177: }
  2076  00F3  0008               	return
  2077  00F4                     i1l127:	
  2078                           
  2079                           ;eusart.c: 178: else
  2080                           ;eusart.c: 179: {
  2081                           ;eusart.c: 180: PIE1bits.TXIE = 0;
  2082  00F4  0021               	movlb	1	; select bank1
  2083  00F5  1211               	bcf	17,4	;volatile
  2084  00F6  0008               	return
  2085  00F7                     __end_of_EUSART_Transmit_ISR:	
  2086                           
  2087                           	psect	text11
  2088  0112                     __ptext11:	
  2089 ;; *************** function _EUSART_Receive_ISR *****************
  2090 ;; Defined at:
  2091 ;;		line 184 in file "mcc_generated_files/eusart.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;		None
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;		None
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  1    wreg      void 
  2098 ;; Registers used:
  2099 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2105 ;;      Params:         0       0       0       0       0       0       0       0
  2106 ;;      Locals:         0       0       0       0       0       0       0       0
  2107 ;;      Temps:          1       0       0       0       0       0       0       0
  2108 ;;      Totals:         1       0       0       0       0       0       0       0
  2109 ;;Total ram usage:        1 bytes
  2110 ;; Hardware stack levels used:    1
  2111 ;; This function calls:
  2112 ;;		Nothing
  2113 ;; This function is called by:
  2114 ;;		_INTERRUPT_InterruptManager
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           
  2119                           ;psect for function _EUSART_Receive_ISR
  2120  0112                     _EUSART_Receive_ISR:	
  2121                           
  2122                           ;eusart.c: 187: if(1 == RCSTAbits.OERR)
  2123                           
  2124                           ;incstack = 0
  2125                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2126  0112  0023               	movlb	3	; select bank3
  2127  0113  1C9D               	btfss	29,1	;volatile
  2128  0114  2917               	goto	i1l910
  2129                           
  2130                           ;eusart.c: 188: {
  2131                           ;eusart.c: 191: RCSTAbits.CREN = 0;
  2132  0115  121D               	bcf	29,4	;volatile
  2133                           
  2134                           ;eusart.c: 192: RCSTAbits.CREN = 1;
  2135  0116  161D               	bsf	29,4	;volatile
  2136  0117                     i1l910:	
  2137                           
  2138                           ;eusart.c: 193: }
  2139                           ;eusart.c: 196: eusartRxBuffer[eusartRxHead++] = RCREG;
  2140  0117  0819               	movf	25,w	;volatile
  2141  0118  00F0               	movwf	??_EUSART_Receive_ISR
  2142  0119  0020               	movlb	0	; select bank0
  2143  011A  0832               	movf	_eusartRxHead,w
  2144  011B  3E20               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  2145  011C  0086               	movwf	6
  2146  011D  0187               	clrf	7
  2147  011E  0870               	movf	??_EUSART_Receive_ISR,w
  2148  011F  0081               	movwf	1
  2149  0120  3001               	movlw	1
  2150  0121  00F0               	movwf	??_EUSART_Receive_ISR
  2151  0122  0870               	movf	??_EUSART_Receive_ISR,w
  2152  0123  07B2               	addwf	_eusartRxHead,f	;volatile
  2153                           
  2154                           ;eusart.c: 197: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  2155  0124  3008               	movlw	8
  2156  0125  0232               	subwf	_eusartRxHead,w	;volatile
  2157  0126  1803               	btfsc	3,0
  2158                           
  2159                           ;eusart.c: 198: {
  2160                           ;eusart.c: 199: eusartRxHead = 0;
  2161  0127  01B2               	clrf	_eusartRxHead	;volatile
  2162                           
  2163                           ;eusart.c: 200: }
  2164                           ;eusart.c: 201: eusartRxCount++;
  2165  0128  3001               	movlw	1
  2166  0129  00F0               	movwf	??_EUSART_Receive_ISR
  2167  012A  0870               	movf	??_EUSART_Receive_ISR,w
  2168  012B  07B0               	addwf	_eusartRxCount,f	;volatile
  2169  012C  0008               	return
  2170  012D                     __end_of_EUSART_Receive_ISR:	
  2171  007E                     btemp	set	126	;btemp
  2172  007E                     int$flags	set	126
  2173  007E                     wtemp0	set	126


Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         21
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      5      25
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_printf
    _printf->_putch
    _putch->_EUSART_Write
    _SYSTEM_Initialize->_EUSART_Initialize

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     359
                                              2 BANK0      3     3      0
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              19    17      2     356
                                              5 COMMON     5     3      2
                                              0 BANK0      2     2      0
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      93
                                              4 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      62
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _printf
     _putch
       _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      25       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      5      19       6       31.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      25      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Tue Sep 26 11:48:22 2017

                        __CFG_CP$OFF 0000                          __CFG_LVP$ON 0000  
                                l115 0083                                  l169 0076  
                                l982 0097                                  l990 00C2  
                                l968 0078                         __CFG_CPD$OFF 0000  
                                u377 004A                                  u387 005D  
                                u397 0070                         __CFG_BORV$LO 0000  
                                wreg 0009                         __CFG_IESO$ON 0000  
                       __CFG_FOSC$HS 0000                                 STR_1 012D  
                               STR_2 012D                                 STR_3 012D  
                               _LATA 010C                                 _LATB 010D  
                               _LATC 010E                                 _LATD 010F  
                               _LATE 0110                                 _WPUB 020D  
                               _WPUE 0210                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _main 0036  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                               start 0027                        __CFG_MCLRE$ON 0000  
                      ?_EUSART_Write 0070       __size_of_OSCILLATOR_Initialize 0005  
      __end_of_OSCILLATOR_Initialize 0158                                ?_main 0070  
                      __CFG_WDTE$OFF 0000                                i1l127 00F4  
                              i1l152 0015                                i1l156 0022  
                              i1l910 0117                                _RCREG 0199  
                              _RCSTA 019D                                _TRISA 008C  
                              _TRISB 008D                                _TRISC 008E  
                              _TRISD 008F                                _TRISE 0090  
                              _TXREG 019A                                _TXSTA 019E  
                     _WDT_Initialize 0158                                _putch 014E  
                              main@x 0037                                status 0003  
                              wtemp0 007E                      __initialization 0029  
                       __end_of_main 0077                       ??_EUSART_Write 0072  
        ?_INTERRUPT_InterruptManager 0070                               ??_main 0035  
                     __CFG_PLLEN$OFF 0000               __end_of_WDT_Initialize 015C  
                             _APFCON 011D                               _ANSELA 018C  
                             ?_putch 0070                               _ANSELB 018D  
                             _ANSELD 018F                               _ANSELE 0190  
                             _OSCCON 0099                               _SPBRGH 019C  
                             _SPBRGL 019B                               _WDTCON 0097  
                     __CFG_PWRTE$OFF 0000                       __CFG_STVREN$ON 0000  
                _EUSART_Transmit_ISR 00DA                               _printf 00BD  
                    ?_WDT_Initialize 0070                 ?_EUSART_Transmit_ISR 0070  
                  _SYSTEM_Initialize 013C              __end_of__initialization 0032  
                 ?_SYSTEM_Initialize 0070                       __pcstackCOMMON 0070  
                ??_SYSTEM_Initialize 0073                        __end_of_putch 0153  
                     _OPTION_REGbits 0095            __end_of_SYSTEM_Initialize 0148  
              ??_EUSART_Transmit_ISR 0070                              ??_putch 0074  
                         __pbssBANK0 0020                 __end_of_EUSART_Write 009A  
                    __CFG_VCAPEN$OFF 0000          __size_of_EUSART_Receive_ISR 001B  
                         __pmaintext 0036                           __pintentry 0004  
                            _BAUDCON 019F                              ?_printf 0075  
                      _eusartRxCount 0030                              _OSCTUNE 0098  
                            __ptext1 00BD                              __ptext2 014E  
                            __ptext3 0077                              __ptext4 013C  
                            __ptext5 0158                              __ptext6 009A  
                            __ptext7 0153                              __ptext8 00F7  
                    __size_of_printf 001D                _OSCILLATOR_Initialize 0153  
           ??_PIN_MANAGER_Initialize 0072           __size_of_SYSTEM_Initialize 000C  
                            clrloop0 0149                 end_of_initialization 0032  
                  _EUSART_Initialize 00F7                   ?_EUSART_Initialize 0070  
                          _RCSTAbits 019D                              printf@c 0034  
                            printf@f 0075                  ??_EUSART_Initialize 0072  
                   ??_WDT_Initialize 0072                __size_of_EUSART_Write 0023  
          __end_of_EUSART_Initialize 0112                         _EUSART_Write 0077  
             ?_OSCILLATOR_Initialize 0070                       __end_of_printf 00DA  
                start_initialization 0029      __size_of_PIN_MANAGER_Initialize 0023  
                        putch@txData 0074                             ??_printf 0077  
        __end_of_EUSART_Transmit_ISR 00F7                          __pbssCOMMON 007A  
                          ___latbits 0002                        __pcstackBANK0 0033  
         __end_of_EUSART_Receive_ISR 012D           __size_of_EUSART_Initialize 001B  
                          __pnvBANK0 0038               _PIN_MANAGER_Initialize 009A  
                       _eusartRxHead 0032                         _eusartTxHead 007B  
                       _eusartRxTail 0031                         _eusartTxTail 007A  
       ??_INTERRUPT_InterruptManager 0071              _eusartTxBufferRemaining 0038  
                     __size_of_putch 0005                       _eusartRxBuffer 0020  
                     _eusartTxBuffer 0028                            clear_ram0 0148  
                           _PIE1bits 0091  __size_of_INTERRUPT_InterruptManager 0023  
                           _PIR1bits 0011              ??_OSCILLATOR_Initialize 0072  
                           __ptext10 00DA                             __ptext11 0112  
                      __size_of_main 0041                             int$flags 007E  
 __end_of_INTERRUPT_InterruptManager 0027           _INTERRUPT_InterruptManager 0004  
                         _INTCONbits 000B              __size_of_WDT_Initialize 0004  
                           intlevel1 0000              ?_PIN_MANAGER_Initialize 0070  
                  __CFG_CLKOUTEN$OFF 0000                             printf@ap 0033  
                 _EUSART_Receive_ISR 0112                        __pstringtext1 012D  
                      __pstringtext2 0000                  ?_EUSART_Receive_ISR 0070  
                 EUSART_Write@txData 0073         __size_of_EUSART_Transmit_ISR 001D  
     __end_of_PIN_MANAGER_Initialize 00BD                 ??_EUSART_Receive_ISR 0070  
