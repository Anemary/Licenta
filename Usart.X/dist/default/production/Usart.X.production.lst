

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Tue Oct 17 22:37:47 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F1937
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	stringtext7,global,class=STRCODE,delta=2
    13                           	psect	stringtext8,global,class=STRCODE,delta=2
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 1.42
    44                           ; Generated 13/04/2017 GMT
    45                           ; 
    46                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F1937 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     	;# 
    78  0001                     	;# 
    79  0002                     	;# 
    80  0003                     	;# 
    81  0004                     	;# 
    82  0005                     	;# 
    83  0006                     	;# 
    84  0007                     	;# 
    85  0008                     	;# 
    86  0009                     	;# 
    87  000A                     	;# 
    88  000B                     	;# 
    89  000C                     	;# 
    90  000D                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0110                     	;# 
   132  0111                     	;# 
   133  0112                     	;# 
   134  0113                     	;# 
   135  0114                     	;# 
   136  0115                     	;# 
   137  0116                     	;# 
   138  0117                     	;# 
   139  0118                     	;# 
   140  0119                     	;# 
   141  011A                     	;# 
   142  011B                     	;# 
   143  011D                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  018F                     	;# 
   147  0190                     	;# 
   148  0191                     	;# 
   149  0191                     	;# 
   150  0192                     	;# 
   151  0193                     	;# 
   152  0193                     	;# 
   153  0193                     	;# 
   154  0194                     	;# 
   155  0195                     	;# 
   156  0196                     	;# 
   157  0199                     	;# 
   158  019A                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019B                     	;# 
   162  019B                     	;# 
   163  019C                     	;# 
   164  019C                     	;# 
   165  019D                     	;# 
   166  019E                     	;# 
   167  019F                     	;# 
   168  020D                     	;# 
   169  0210                     	;# 
   170  0211                     	;# 
   171  0212                     	;# 
   172  0213                     	;# 
   173  0214                     	;# 
   174  0215                     	;# 
   175  0215                     	;# 
   176  0216                     	;# 
   177  0217                     	;# 
   178  0291                     	;# 
   179  0291                     	;# 
   180  0292                     	;# 
   181  0293                     	;# 
   182  0294                     	;# 
   183  0295                     	;# 
   184  0295                     	;# 
   185  0296                     	;# 
   186  0298                     	;# 
   187  0298                     	;# 
   188  0299                     	;# 
   189  029A                     	;# 
   190  029B                     	;# 
   191  029C                     	;# 
   192  029C                     	;# 
   193  029D                     	;# 
   194  029E                     	;# 
   195  029F                     	;# 
   196  0311                     	;# 
   197  0311                     	;# 
   198  0312                     	;# 
   199  0313                     	;# 
   200  0314                     	;# 
   201  0315                     	;# 
   202  0315                     	;# 
   203  0316                     	;# 
   204  0318                     	;# 
   205  0318                     	;# 
   206  0319                     	;# 
   207  031A                     	;# 
   208  031C                     	;# 
   209  031C                     	;# 
   210  031D                     	;# 
   211  031E                     	;# 
   212  0394                     	;# 
   213  0395                     	;# 
   214  0396                     	;# 
   215  0415                     	;# 
   216  0416                     	;# 
   217  0417                     	;# 
   218  041C                     	;# 
   219  041D                     	;# 
   220  041E                     	;# 
   221  0791                     	;# 
   222  0792                     	;# 
   223  0793                     	;# 
   224  0794                     	;# 
   225  0795                     	;# 
   226  0798                     	;# 
   227  0799                     	;# 
   228  079A                     	;# 
   229  07A0                     	;# 
   230  07A1                     	;# 
   231  07A2                     	;# 
   232  07A3                     	;# 
   233  07A4                     	;# 
   234  07A5                     	;# 
   235  07A6                     	;# 
   236  07A7                     	;# 
   237  07A8                     	;# 
   238  07A9                     	;# 
   239  07AA                     	;# 
   240  07AB                     	;# 
   241  0FE4                     	;# 
   242  0FE5                     	;# 
   243  0FE6                     	;# 
   244  0FE7                     	;# 
   245  0FE8                     	;# 
   246  0FE9                     	;# 
   247  0FEA                     	;# 
   248  0FEB                     	;# 
   249  0FED                     	;# 
   250  0FEE                     	;# 
   251  0FEF                     	;# 
   252  0000                     	;# 
   253  0001                     	;# 
   254  0002                     	;# 
   255  0003                     	;# 
   256  0004                     	;# 
   257  0005                     	;# 
   258  0006                     	;# 
   259  0007                     	;# 
   260  0008                     	;# 
   261  0009                     	;# 
   262  000A                     	;# 
   263  000B                     	;# 
   264  000C                     	;# 
   265  000D                     	;# 
   266  000E                     	;# 
   267  000F                     	;# 
   268  0010                     	;# 
   269  0011                     	;# 
   270  0012                     	;# 
   271  0013                     	;# 
   272  0015                     	;# 
   273  0016                     	;# 
   274  0016                     	;# 
   275  0017                     	;# 
   276  0018                     	;# 
   277  0019                     	;# 
   278  001A                     	;# 
   279  001B                     	;# 
   280  001C                     	;# 
   281  001E                     	;# 
   282  001F                     	;# 
   283  008C                     	;# 
   284  008D                     	;# 
   285  008E                     	;# 
   286  008F                     	;# 
   287  0090                     	;# 
   288  0091                     	;# 
   289  0092                     	;# 
   290  0093                     	;# 
   291  0095                     	;# 
   292  0096                     	;# 
   293  0097                     	;# 
   294  0098                     	;# 
   295  0099                     	;# 
   296  009A                     	;# 
   297  009B                     	;# 
   298  009B                     	;# 
   299  009C                     	;# 
   300  009D                     	;# 
   301  009E                     	;# 
   302  010C                     	;# 
   303  010D                     	;# 
   304  010E                     	;# 
   305  010F                     	;# 
   306  0110                     	;# 
   307  0111                     	;# 
   308  0112                     	;# 
   309  0113                     	;# 
   310  0114                     	;# 
   311  0115                     	;# 
   312  0116                     	;# 
   313  0117                     	;# 
   314  0118                     	;# 
   315  0119                     	;# 
   316  011A                     	;# 
   317  011B                     	;# 
   318  011D                     	;# 
   319  018C                     	;# 
   320  018D                     	;# 
   321  018F                     	;# 
   322  0190                     	;# 
   323  0191                     	;# 
   324  0191                     	;# 
   325  0192                     	;# 
   326  0193                     	;# 
   327  0193                     	;# 
   328  0193                     	;# 
   329  0194                     	;# 
   330  0195                     	;# 
   331  0196                     	;# 
   332  0199                     	;# 
   333  019A                     	;# 
   334  019B                     	;# 
   335  019B                     	;# 
   336  019B                     	;# 
   337  019B                     	;# 
   338  019C                     	;# 
   339  019C                     	;# 
   340  019D                     	;# 
   341  019E                     	;# 
   342  019F                     	;# 
   343  020D                     	;# 
   344  0210                     	;# 
   345  0211                     	;# 
   346  0212                     	;# 
   347  0213                     	;# 
   348  0214                     	;# 
   349  0215                     	;# 
   350  0215                     	;# 
   351  0216                     	;# 
   352  0217                     	;# 
   353  0291                     	;# 
   354  0291                     	;# 
   355  0292                     	;# 
   356  0293                     	;# 
   357  0294                     	;# 
   358  0295                     	;# 
   359  0295                     	;# 
   360  0296                     	;# 
   361  0298                     	;# 
   362  0298                     	;# 
   363  0299                     	;# 
   364  029A                     	;# 
   365  029B                     	;# 
   366  029C                     	;# 
   367  029C                     	;# 
   368  029D                     	;# 
   369  029E                     	;# 
   370  029F                     	;# 
   371  0311                     	;# 
   372  0311                     	;# 
   373  0312                     	;# 
   374  0313                     	;# 
   375  0314                     	;# 
   376  0315                     	;# 
   377  0315                     	;# 
   378  0316                     	;# 
   379  0318                     	;# 
   380  0318                     	;# 
   381  0319                     	;# 
   382  031A                     	;# 
   383  031C                     	;# 
   384  031C                     	;# 
   385  031D                     	;# 
   386  031E                     	;# 
   387  0394                     	;# 
   388  0395                     	;# 
   389  0396                     	;# 
   390  0415                     	;# 
   391  0416                     	;# 
   392  0417                     	;# 
   393  041C                     	;# 
   394  041D                     	;# 
   395  041E                     	;# 
   396  0791                     	;# 
   397  0792                     	;# 
   398  0793                     	;# 
   399  0794                     	;# 
   400  0795                     	;# 
   401  0798                     	;# 
   402  0799                     	;# 
   403  079A                     	;# 
   404  07A0                     	;# 
   405  07A1                     	;# 
   406  07A2                     	;# 
   407  07A3                     	;# 
   408  07A4                     	;# 
   409  07A5                     	;# 
   410  07A6                     	;# 
   411  07A7                     	;# 
   412  07A8                     	;# 
   413  07A9                     	;# 
   414  07AA                     	;# 
   415  07AB                     	;# 
   416  0FE4                     	;# 
   417  0FE5                     	;# 
   418  0FE6                     	;# 
   419  0FE7                     	;# 
   420  0FE8                     	;# 
   421  0FE9                     	;# 
   422  0FEA                     	;# 
   423  0FEB                     	;# 
   424  0FED                     	;# 
   425  0FEE                     	;# 
   426  0FEF                     	;# 
   427  0000                     	;# 
   428  0001                     	;# 
   429  0002                     	;# 
   430  0003                     	;# 
   431  0004                     	;# 
   432  0005                     	;# 
   433  0006                     	;# 
   434  0007                     	;# 
   435  0008                     	;# 
   436  0009                     	;# 
   437  000A                     	;# 
   438  000B                     	;# 
   439  000C                     	;# 
   440  000D                     	;# 
   441  000E                     	;# 
   442  000F                     	;# 
   443  0010                     	;# 
   444  0011                     	;# 
   445  0012                     	;# 
   446  0013                     	;# 
   447  0015                     	;# 
   448  0016                     	;# 
   449  0016                     	;# 
   450  0017                     	;# 
   451  0018                     	;# 
   452  0019                     	;# 
   453  001A                     	;# 
   454  001B                     	;# 
   455  001C                     	;# 
   456  001E                     	;# 
   457  001F                     	;# 
   458  008C                     	;# 
   459  008D                     	;# 
   460  008E                     	;# 
   461  008F                     	;# 
   462  0090                     	;# 
   463  0091                     	;# 
   464  0092                     	;# 
   465  0093                     	;# 
   466  0095                     	;# 
   467  0096                     	;# 
   468  0097                     	;# 
   469  0098                     	;# 
   470  0099                     	;# 
   471  009A                     	;# 
   472  009B                     	;# 
   473  009B                     	;# 
   474  009C                     	;# 
   475  009D                     	;# 
   476  009E                     	;# 
   477  010C                     	;# 
   478  010D                     	;# 
   479  010E                     	;# 
   480  010F                     	;# 
   481  0110                     	;# 
   482  0111                     	;# 
   483  0112                     	;# 
   484  0113                     	;# 
   485  0114                     	;# 
   486  0115                     	;# 
   487  0116                     	;# 
   488  0117                     	;# 
   489  0118                     	;# 
   490  0119                     	;# 
   491  011A                     	;# 
   492  011B                     	;# 
   493  011D                     	;# 
   494  018C                     	;# 
   495  018D                     	;# 
   496  018F                     	;# 
   497  0190                     	;# 
   498  0191                     	;# 
   499  0191                     	;# 
   500  0192                     	;# 
   501  0193                     	;# 
   502  0193                     	;# 
   503  0193                     	;# 
   504  0194                     	;# 
   505  0195                     	;# 
   506  0196                     	;# 
   507  0199                     	;# 
   508  019A                     	;# 
   509  019B                     	;# 
   510  019B                     	;# 
   511  019B                     	;# 
   512  019B                     	;# 
   513  019C                     	;# 
   514  019C                     	;# 
   515  019D                     	;# 
   516  019E                     	;# 
   517  019F                     	;# 
   518  020D                     	;# 
   519  0210                     	;# 
   520  0211                     	;# 
   521  0212                     	;# 
   522  0213                     	;# 
   523  0214                     	;# 
   524  0215                     	;# 
   525  0215                     	;# 
   526  0216                     	;# 
   527  0217                     	;# 
   528  0291                     	;# 
   529  0291                     	;# 
   530  0292                     	;# 
   531  0293                     	;# 
   532  0294                     	;# 
   533  0295                     	;# 
   534  0295                     	;# 
   535  0296                     	;# 
   536  0298                     	;# 
   537  0298                     	;# 
   538  0299                     	;# 
   539  029A                     	;# 
   540  029B                     	;# 
   541  029C                     	;# 
   542  029C                     	;# 
   543  029D                     	;# 
   544  029E                     	;# 
   545  029F                     	;# 
   546  0311                     	;# 
   547  0311                     	;# 
   548  0312                     	;# 
   549  0313                     	;# 
   550  0314                     	;# 
   551  0315                     	;# 
   552  0315                     	;# 
   553  0316                     	;# 
   554  0318                     	;# 
   555  0318                     	;# 
   556  0319                     	;# 
   557  031A                     	;# 
   558  031C                     	;# 
   559  031C                     	;# 
   560  031D                     	;# 
   561  031E                     	;# 
   562  0394                     	;# 
   563  0395                     	;# 
   564  0396                     	;# 
   565  0415                     	;# 
   566  0416                     	;# 
   567  0417                     	;# 
   568  041C                     	;# 
   569  041D                     	;# 
   570  041E                     	;# 
   571  0791                     	;# 
   572  0792                     	;# 
   573  0793                     	;# 
   574  0794                     	;# 
   575  0795                     	;# 
   576  0798                     	;# 
   577  0799                     	;# 
   578  079A                     	;# 
   579  07A0                     	;# 
   580  07A1                     	;# 
   581  07A2                     	;# 
   582  07A3                     	;# 
   583  07A4                     	;# 
   584  07A5                     	;# 
   585  07A6                     	;# 
   586  07A7                     	;# 
   587  07A8                     	;# 
   588  07A9                     	;# 
   589  07AA                     	;# 
   590  07AB                     	;# 
   591  0FE4                     	;# 
   592  0FE5                     	;# 
   593  0FE6                     	;# 
   594  0FE7                     	;# 
   595  0FE8                     	;# 
   596  0FE9                     	;# 
   597  0FEA                     	;# 
   598  0FEB                     	;# 
   599  0FED                     	;# 
   600  0FEE                     	;# 
   601  0FEF                     	;# 
   602  0000                     	;# 
   603  0001                     	;# 
   604  0002                     	;# 
   605  0003                     	;# 
   606  0004                     	;# 
   607  0005                     	;# 
   608  0006                     	;# 
   609  0007                     	;# 
   610  0008                     	;# 
   611  0009                     	;# 
   612  000A                     	;# 
   613  000B                     	;# 
   614  000C                     	;# 
   615  000D                     	;# 
   616  000E                     	;# 
   617  000F                     	;# 
   618  0010                     	;# 
   619  0011                     	;# 
   620  0012                     	;# 
   621  0013                     	;# 
   622  0015                     	;# 
   623  0016                     	;# 
   624  0016                     	;# 
   625  0017                     	;# 
   626  0018                     	;# 
   627  0019                     	;# 
   628  001A                     	;# 
   629  001B                     	;# 
   630  001C                     	;# 
   631  001E                     	;# 
   632  001F                     	;# 
   633  008C                     	;# 
   634  008D                     	;# 
   635  008E                     	;# 
   636  008F                     	;# 
   637  0090                     	;# 
   638  0091                     	;# 
   639  0092                     	;# 
   640  0093                     	;# 
   641  0095                     	;# 
   642  0096                     	;# 
   643  0097                     	;# 
   644  0098                     	;# 
   645  0099                     	;# 
   646  009A                     	;# 
   647  009B                     	;# 
   648  009B                     	;# 
   649  009C                     	;# 
   650  009D                     	;# 
   651  009E                     	;# 
   652  010C                     	;# 
   653  010D                     	;# 
   654  010E                     	;# 
   655  010F                     	;# 
   656  0110                     	;# 
   657  0111                     	;# 
   658  0112                     	;# 
   659  0113                     	;# 
   660  0114                     	;# 
   661  0115                     	;# 
   662  0116                     	;# 
   663  0117                     	;# 
   664  0118                     	;# 
   665  0119                     	;# 
   666  011A                     	;# 
   667  011B                     	;# 
   668  011D                     	;# 
   669  018C                     	;# 
   670  018D                     	;# 
   671  018F                     	;# 
   672  0190                     	;# 
   673  0191                     	;# 
   674  0191                     	;# 
   675  0192                     	;# 
   676  0193                     	;# 
   677  0193                     	;# 
   678  0193                     	;# 
   679  0194                     	;# 
   680  0195                     	;# 
   681  0196                     	;# 
   682  0199                     	;# 
   683  019A                     	;# 
   684  019B                     	;# 
   685  019B                     	;# 
   686  019B                     	;# 
   687  019B                     	;# 
   688  019C                     	;# 
   689  019C                     	;# 
   690  019D                     	;# 
   691  019E                     	;# 
   692  019F                     	;# 
   693  020D                     	;# 
   694  0210                     	;# 
   695  0211                     	;# 
   696  0212                     	;# 
   697  0213                     	;# 
   698  0214                     	;# 
   699  0215                     	;# 
   700  0215                     	;# 
   701  0216                     	;# 
   702  0217                     	;# 
   703  0291                     	;# 
   704  0291                     	;# 
   705  0292                     	;# 
   706  0293                     	;# 
   707  0294                     	;# 
   708  0295                     	;# 
   709  0295                     	;# 
   710  0296                     	;# 
   711  0298                     	;# 
   712  0298                     	;# 
   713  0299                     	;# 
   714  029A                     	;# 
   715  029B                     	;# 
   716  029C                     	;# 
   717  029C                     	;# 
   718  029D                     	;# 
   719  029E                     	;# 
   720  029F                     	;# 
   721  0311                     	;# 
   722  0311                     	;# 
   723  0312                     	;# 
   724  0313                     	;# 
   725  0314                     	;# 
   726  0315                     	;# 
   727  0315                     	;# 
   728  0316                     	;# 
   729  0318                     	;# 
   730  0318                     	;# 
   731  0319                     	;# 
   732  031A                     	;# 
   733  031C                     	;# 
   734  031C                     	;# 
   735  031D                     	;# 
   736  031E                     	;# 
   737  0394                     	;# 
   738  0395                     	;# 
   739  0396                     	;# 
   740  0415                     	;# 
   741  0416                     	;# 
   742  0417                     	;# 
   743  041C                     	;# 
   744  041D                     	;# 
   745  041E                     	;# 
   746  0791                     	;# 
   747  0792                     	;# 
   748  0793                     	;# 
   749  0794                     	;# 
   750  0795                     	;# 
   751  0798                     	;# 
   752  0799                     	;# 
   753  079A                     	;# 
   754  07A0                     	;# 
   755  07A1                     	;# 
   756  07A2                     	;# 
   757  07A3                     	;# 
   758  07A4                     	;# 
   759  07A5                     	;# 
   760  07A6                     	;# 
   761  07A7                     	;# 
   762  07A8                     	;# 
   763  07A9                     	;# 
   764  07AA                     	;# 
   765  07AB                     	;# 
   766  0FE4                     	;# 
   767  0FE5                     	;# 
   768  0FE6                     	;# 
   769  0FE7                     	;# 
   770  0FE8                     	;# 
   771  0FE9                     	;# 
   772  0FEA                     	;# 
   773  0FEB                     	;# 
   774  0FED                     	;# 
   775  0FEE                     	;# 
   776  0FEF                     	;# 
   777  0000                     	;# 
   778  0001                     	;# 
   779  0002                     	;# 
   780  0003                     	;# 
   781  0004                     	;# 
   782  0005                     	;# 
   783  0006                     	;# 
   784  0007                     	;# 
   785  0008                     	;# 
   786  0009                     	;# 
   787  000A                     	;# 
   788  000B                     	;# 
   789  000C                     	;# 
   790  000D                     	;# 
   791  000E                     	;# 
   792  000F                     	;# 
   793  0010                     	;# 
   794  0011                     	;# 
   795  0012                     	;# 
   796  0013                     	;# 
   797  0015                     	;# 
   798  0016                     	;# 
   799  0016                     	;# 
   800  0017                     	;# 
   801  0018                     	;# 
   802  0019                     	;# 
   803  001A                     	;# 
   804  001B                     	;# 
   805  001C                     	;# 
   806  001E                     	;# 
   807  001F                     	;# 
   808  008C                     	;# 
   809  008D                     	;# 
   810  008E                     	;# 
   811  008F                     	;# 
   812  0090                     	;# 
   813  0091                     	;# 
   814  0092                     	;# 
   815  0093                     	;# 
   816  0095                     	;# 
   817  0096                     	;# 
   818  0097                     	;# 
   819  0098                     	;# 
   820  0099                     	;# 
   821  009A                     	;# 
   822  009B                     	;# 
   823  009B                     	;# 
   824  009C                     	;# 
   825  009D                     	;# 
   826  009E                     	;# 
   827  010C                     	;# 
   828  010D                     	;# 
   829  010E                     	;# 
   830  010F                     	;# 
   831  0110                     	;# 
   832  0111                     	;# 
   833  0112                     	;# 
   834  0113                     	;# 
   835  0114                     	;# 
   836  0115                     	;# 
   837  0116                     	;# 
   838  0117                     	;# 
   839  0118                     	;# 
   840  0119                     	;# 
   841  011A                     	;# 
   842  011B                     	;# 
   843  011D                     	;# 
   844  018C                     	;# 
   845  018D                     	;# 
   846  018F                     	;# 
   847  0190                     	;# 
   848  0191                     	;# 
   849  0191                     	;# 
   850  0192                     	;# 
   851  0193                     	;# 
   852  0193                     	;# 
   853  0193                     	;# 
   854  0194                     	;# 
   855  0195                     	;# 
   856  0196                     	;# 
   857  0199                     	;# 
   858  019A                     	;# 
   859  019B                     	;# 
   860  019B                     	;# 
   861  019B                     	;# 
   862  019B                     	;# 
   863  019C                     	;# 
   864  019C                     	;# 
   865  019D                     	;# 
   866  019E                     	;# 
   867  019F                     	;# 
   868  020D                     	;# 
   869  0210                     	;# 
   870  0211                     	;# 
   871  0212                     	;# 
   872  0213                     	;# 
   873  0214                     	;# 
   874  0215                     	;# 
   875  0215                     	;# 
   876  0216                     	;# 
   877  0217                     	;# 
   878  0291                     	;# 
   879  0291                     	;# 
   880  0292                     	;# 
   881  0293                     	;# 
   882  0294                     	;# 
   883  0295                     	;# 
   884  0295                     	;# 
   885  0296                     	;# 
   886  0298                     	;# 
   887  0298                     	;# 
   888  0299                     	;# 
   889  029A                     	;# 
   890  029B                     	;# 
   891  029C                     	;# 
   892  029C                     	;# 
   893  029D                     	;# 
   894  029E                     	;# 
   895  029F                     	;# 
   896  0311                     	;# 
   897  0311                     	;# 
   898  0312                     	;# 
   899  0313                     	;# 
   900  0314                     	;# 
   901  0315                     	;# 
   902  0315                     	;# 
   903  0316                     	;# 
   904  0318                     	;# 
   905  0318                     	;# 
   906  0319                     	;# 
   907  031A                     	;# 
   908  031C                     	;# 
   909  031C                     	;# 
   910  031D                     	;# 
   911  031E                     	;# 
   912  0394                     	;# 
   913  0395                     	;# 
   914  0396                     	;# 
   915  0415                     	;# 
   916  0416                     	;# 
   917  0417                     	;# 
   918  041C                     	;# 
   919  041D                     	;# 
   920  041E                     	;# 
   921  0791                     	;# 
   922  0792                     	;# 
   923  0793                     	;# 
   924  0794                     	;# 
   925  0795                     	;# 
   926  0798                     	;# 
   927  0799                     	;# 
   928  079A                     	;# 
   929  07A0                     	;# 
   930  07A1                     	;# 
   931  07A2                     	;# 
   932  07A3                     	;# 
   933  07A4                     	;# 
   934  07A5                     	;# 
   935  07A6                     	;# 
   936  07A7                     	;# 
   937  07A8                     	;# 
   938  07A9                     	;# 
   939  07AA                     	;# 
   940  07AB                     	;# 
   941  0FE4                     	;# 
   942  0FE5                     	;# 
   943  0FE6                     	;# 
   944  0FE7                     	;# 
   945  0FE8                     	;# 
   946  0FE9                     	;# 
   947  0FEA                     	;# 
   948  0FEB                     	;# 
   949  0FED                     	;# 
   950  0FEE                     	;# 
   951  0FEF                     	;# 
   952  0000                     	;# 
   953  0001                     	;# 
   954  0002                     	;# 
   955  0003                     	;# 
   956  0004                     	;# 
   957  0005                     	;# 
   958  0006                     	;# 
   959  0007                     	;# 
   960  0008                     	;# 
   961  0009                     	;# 
   962  000A                     	;# 
   963  000B                     	;# 
   964  000C                     	;# 
   965  000D                     	;# 
   966  000E                     	;# 
   967  000F                     	;# 
   968  0010                     	;# 
   969  0011                     	;# 
   970  0012                     	;# 
   971  0013                     	;# 
   972  0015                     	;# 
   973  0016                     	;# 
   974  0016                     	;# 
   975  0017                     	;# 
   976  0018                     	;# 
   977  0019                     	;# 
   978  001A                     	;# 
   979  001B                     	;# 
   980  001C                     	;# 
   981  001E                     	;# 
   982  001F                     	;# 
   983  008C                     	;# 
   984  008D                     	;# 
   985  008E                     	;# 
   986  008F                     	;# 
   987  0090                     	;# 
   988  0091                     	;# 
   989  0092                     	;# 
   990  0093                     	;# 
   991  0095                     	;# 
   992  0096                     	;# 
   993  0097                     	;# 
   994  0098                     	;# 
   995  0099                     	;# 
   996  009A                     	;# 
   997  009B                     	;# 
   998  009B                     	;# 
   999  009C                     	;# 
  1000  009D                     	;# 
  1001  009E                     	;# 
  1002  010C                     	;# 
  1003  010D                     	;# 
  1004  010E                     	;# 
  1005  010F                     	;# 
  1006  0110                     	;# 
  1007  0111                     	;# 
  1008  0112                     	;# 
  1009  0113                     	;# 
  1010  0114                     	;# 
  1011  0115                     	;# 
  1012  0116                     	;# 
  1013  0117                     	;# 
  1014  0118                     	;# 
  1015  0119                     	;# 
  1016  011A                     	;# 
  1017  011B                     	;# 
  1018  011D                     	;# 
  1019  018C                     	;# 
  1020  018D                     	;# 
  1021  018F                     	;# 
  1022  0190                     	;# 
  1023  0191                     	;# 
  1024  0191                     	;# 
  1025  0192                     	;# 
  1026  0193                     	;# 
  1027  0193                     	;# 
  1028  0193                     	;# 
  1029  0194                     	;# 
  1030  0195                     	;# 
  1031  0196                     	;# 
  1032  0199                     	;# 
  1033  019A                     	;# 
  1034  019B                     	;# 
  1035  019B                     	;# 
  1036  019B                     	;# 
  1037  019B                     	;# 
  1038  019C                     	;# 
  1039  019C                     	;# 
  1040  019D                     	;# 
  1041  019E                     	;# 
  1042  019F                     	;# 
  1043  020D                     	;# 
  1044  0210                     	;# 
  1045  0211                     	;# 
  1046  0212                     	;# 
  1047  0213                     	;# 
  1048  0214                     	;# 
  1049  0215                     	;# 
  1050  0215                     	;# 
  1051  0216                     	;# 
  1052  0217                     	;# 
  1053  0291                     	;# 
  1054  0291                     	;# 
  1055  0292                     	;# 
  1056  0293                     	;# 
  1057  0294                     	;# 
  1058  0295                     	;# 
  1059  0295                     	;# 
  1060  0296                     	;# 
  1061  0298                     	;# 
  1062  0298                     	;# 
  1063  0299                     	;# 
  1064  029A                     	;# 
  1065  029B                     	;# 
  1066  029C                     	;# 
  1067  029C                     	;# 
  1068  029D                     	;# 
  1069  029E                     	;# 
  1070  029F                     	;# 
  1071  0311                     	;# 
  1072  0311                     	;# 
  1073  0312                     	;# 
  1074  0313                     	;# 
  1075  0314                     	;# 
  1076  0315                     	;# 
  1077  0315                     	;# 
  1078  0316                     	;# 
  1079  0318                     	;# 
  1080  0318                     	;# 
  1081  0319                     	;# 
  1082  031A                     	;# 
  1083  031C                     	;# 
  1084  031C                     	;# 
  1085  031D                     	;# 
  1086  031E                     	;# 
  1087  0394                     	;# 
  1088  0395                     	;# 
  1089  0396                     	;# 
  1090  0415                     	;# 
  1091  0416                     	;# 
  1092  0417                     	;# 
  1093  041C                     	;# 
  1094  041D                     	;# 
  1095  041E                     	;# 
  1096  0791                     	;# 
  1097  0792                     	;# 
  1098  0793                     	;# 
  1099  0794                     	;# 
  1100  0795                     	;# 
  1101  0798                     	;# 
  1102  0799                     	;# 
  1103  079A                     	;# 
  1104  07A0                     	;# 
  1105  07A1                     	;# 
  1106  07A2                     	;# 
  1107  07A3                     	;# 
  1108  07A4                     	;# 
  1109  07A5                     	;# 
  1110  07A6                     	;# 
  1111  07A7                     	;# 
  1112  07A8                     	;# 
  1113  07A9                     	;# 
  1114  07AA                     	;# 
  1115  07AB                     	;# 
  1116  0FE4                     	;# 
  1117  0FE5                     	;# 
  1118  0FE6                     	;# 
  1119  0FE7                     	;# 
  1120  0FE8                     	;# 
  1121  0FE9                     	;# 
  1122  0FEA                     	;# 
  1123  0FEB                     	;# 
  1124  0FED                     	;# 
  1125  0FEE                     	;# 
  1126  0FEF                     	;# 
  1127                           
  1128                           	psect	idataBANK0
  1129  033B                     __pidataBANK0:	
  1130                           
  1131                           ;initializer for turn_egs@step_nr
  1132  033B  3401               	retlw	1
  1133  033C  3400               	retlw	0
  1134                           
  1135                           	psect	nvBANK0
  1136  0051                     __pnvBANK0:	
  1137  0051                     _TMR1_InterruptHandler:	
  1138  0051                     	ds	2
  1139  0053                     _timer1ReloadVal:	
  1140  0053                     	ds	2
  1141  0055                     _eusartTxBufferRemaining:	
  1142  0055                     	ds	1
  1143  0019                     _T1GCONbits	set	25
  1144  0018                     _T1CONbits	set	24
  1145  0016                     _TMR1L	set	22
  1146  0017                     _TMR1H	set	23
  1147  0019                     _T1GCON	set	25
  1148  0018                     _T1CON	set	24
  1149  0011                     _PIR1bits	set	17
  1150  000B                     _INTCONbits	set	11
  1151  008E                     _TRISCbits	set	142
  1152  0091                     _PIE1bits	set	145
  1153  0095                     _OPTION_REGbits	set	149
  1154  008F                     _TRISD	set	143
  1155  008E                     _TRISC	set	142
  1156  008D                     _TRISB	set	141
  1157  008C                     _TRISA	set	140
  1158  0090                     _TRISE	set	144
  1159  0097                     _WDTCON	set	151
  1160  0098                     _OSCTUNE	set	152
  1161  0099                     _OSCCON	set	153
  1162  010E                     _LATCbits	set	270
  1163  011D                     _APFCON	set	285
  1164  010E                     _LATC	set	270
  1165  010D                     _LATB	set	269
  1166  010C                     _LATA	set	268
  1167  010F                     _LATD	set	271
  1168  0110                     _LATE	set	272
  1169  0199                     _RCREG	set	409
  1170  019D                     _RCSTAbits	set	413
  1171  019A                     _TXREG	set	410
  1172  019C                     _SPBRGH	set	412
  1173  019B                     _SPBRGL	set	411
  1174  019E                     _TXSTA	set	414
  1175  019D                     _RCSTA	set	413
  1176  019F                     _BAUDCON	set	415
  1177  018C                     _ANSELA	set	396
  1178  0190                     _ANSELE	set	400
  1179  018F                     _ANSELD	set	399
  1180  018D                     _ANSELB	set	397
  1181  020D                     _WPUB	set	525
  1182  0210                     _WPUE	set	528
  1183                           
  1184                           	psect	stringtext1
  1185  02B0                     __pstringtext1:	
  1186  02B0                     STR_2:	
  1187  02B0  3441               	retlw	65	;'A'
  1188  02B1  3454               	retlw	84	;'T'
  1189  02B2  342B               	retlw	43	;'+'
  1190  02B3  3443               	retlw	67	;'C'
  1191  02B4  344D               	retlw	77	;'M'
  1192  02B5  3447               	retlw	71	;'G'
  1193  02B6  3453               	retlw	83	;'S'
  1194  02B7  343D               	retlw	61	;'='
  1195  02B8  3422               	retlw	34	;'"'
  1196  02B9  3430               	retlw	48	;'0'
  1197  02BA  3437               	retlw	55	;'7'
  1198  02BB  3435               	retlw	53	;'5'
  1199  02BC  3437               	retlw	55	;'7'
  1200  02BD  3434               	retlw	52	;'4'
  1201  02BE  3439               	retlw	57	;'9'
  1202  02BF  3434               	retlw	52	;'4'
  1203  02C0  3438               	retlw	56	;'8'
  1204  02C1  3432               	retlw	50	;'2'
  1205  02C2  3433               	retlw	51	;'3'
  1206  02C3  3422               	retlw	34	;'"'
  1207  02C4  3400               	retlw	0
  1208                           
  1209                           	psect	stringtext2
  1210  02C5                     __pstringtext2:	
  1211  02C5                     STR_7:	
  1212  02C5  3441               	retlw	65	;'A'
  1213  02C6  3454               	retlw	84	;'T'
  1214  02C7  342B               	retlw	43	;'+'
  1215  02C8  3443               	retlw	67	;'C'
  1216  02C9  344E               	retlw	78	;'N'
  1217  02CA  344D               	retlw	77	;'M'
  1218  02CB  3449               	retlw	73	;'I'
  1219  02CC  343D               	retlw	61	;'='
  1220  02CD  3431               	retlw	49	;'1'
  1221  02CE  342C               	retlw	44	;','
  1222  02CF  3432               	retlw	50	;'2'
  1223  02D0  342C               	retlw	44	;','
  1224  02D1  3430               	retlw	48	;'0'
  1225  02D2  342C               	retlw	44	;','
  1226  02D3  3430               	retlw	48	;'0'
  1227  02D4  342C               	retlw	44	;','
  1228  02D5  3430               	retlw	48	;'0'
  1229  02D6  3400               	retlw	0
  1230                           
  1231                           	psect	stringtext3
  1232  02D7                     __pstringtext3:	
  1233  02D7                     STR_5:	
  1234  02D7  3441               	retlw	65	;'A'
  1235  02D8  3454               	retlw	84	;'T'
  1236  02D9  342B               	retlw	43	;'+'
  1237  02DA  3443               	retlw	67	;'C'
  1238  02DB  3450               	retlw	80	;'P'
  1239  02DC  3449               	retlw	73	;'I'
  1240  02DD  344E               	retlw	78	;'N'
  1241  02DE  343D               	retlw	61	;'='
  1242  02DF  3422               	retlw	34	;'"'
  1243  02E0  3431               	retlw	49	;'1'
  1244  02E1  3432               	retlw	50	;'2'
  1245  02E2  3433               	retlw	51	;'3'
  1246  02E3  3434               	retlw	52	;'4'
  1247  02E4  3422               	retlw	34	;'"'
  1248  02E5  3400               	retlw	0
  1249                           
  1250                           	psect	stringtext4
  1251  02F5                     __pstringtext4:	
  1252  02F5                     STR_1:	
  1253  02F5  3441               	retlw	65	;'A'
  1254  02F6  3454               	retlw	84	;'T'
  1255  02F7  342B               	retlw	43	;'+'
  1256  02F8  3443               	retlw	67	;'C'
  1257  02F9  3453               	retlw	83	;'S'
  1258  02FA  3443               	retlw	67	;'C'
  1259  02FB  3453               	retlw	83	;'S'
  1260  02FC  343D               	retlw	61	;'='
  1261  02FD  3422               	retlw	34	;'"'
  1262  02FE  3447               	retlw	71	;'G'
  1263  02FF  3453               	retlw	83	;'S'
  1264  0300  344D               	retlw	77	;'M'
  1265  0301  3422               	retlw	34	;'"'
  1266  0302  3400               	retlw	0
  1267                           
  1268                           	psect	stringtext5
  1269  0303                     __pstringtext5:	
  1270  0303                     STR_3:	
  1271  0303  3470               	retlw	112	;'p'
  1272  0304  3475               	retlw	117	;'u'
  1273  0305  346C               	retlw	108	;'l'
  1274  0306  3469               	retlw	105	;'i'
  1275  0307  3463               	retlw	99	;'c'
  1276  0308  3469               	retlw	105	;'i'
  1277  0309  3463               	retlw	99	;'c'
  1278  030A  3461               	retlw	97	;'a'
  1279  030B  3420               	retlw	32	;' '
  1280  030C  346D               	retlw	109	;'m'
  1281  030D  3469               	retlw	105	;'i'
  1282  030E  3463               	retlw	99	;'c'
  1283  030F  3461               	retlw	97	;'a'
  1284  0310  3400               	retlw	0
  1285                           
  1286                           	psect	stringtext6
  1287  0311                     __pstringtext6:	
  1288  0311                     STR_6:	
  1289  0311  3441               	retlw	65	;'A'
  1290  0312  3454               	retlw	84	;'T'
  1291  0313  342B               	retlw	43	;'+'
  1292  0314  3443               	retlw	67	;'C'
  1293  0315  344D               	retlw	77	;'M'
  1294  0316  3447               	retlw	71	;'G'
  1295  0317  3446               	retlw	70	;'F'
  1296  0318  343D               	retlw	61	;'='
  1297  0319  3431               	retlw	49	;'1'
  1298  031A  3400               	retlw	0
  1299                           
  1300                           	psect	stringtext7
  1301  0335                     __pstringtext7:	
  1302  0335                     STR_4:	
  1303  0335  3441               	retlw	65	;'A'
  1304  0336  3454               	retlw	84	;'T'
  1305  0337  3400               	retlw	0
  1306                           
  1307                           	psect	stringtext8
  1308  0000                     __pstringtext8:	
  1309  02F5                     
  1310                           ; #config settings
  1311  0000                     
  1312                           	psect	cinit
  1313  0032                     start_initialization:	
  1314  0032                     __initialization:	
  1315                           
  1316                           ; Initialize objects allocated to BANK0
  1317  0032  3183  233B  3180   	fcall	__pidataBANK0	;fetch initializer
  1318  0035  00DB               	movwf	__pdataBANK0& (0+127)
  1319  0036  3183  233C  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1320  0039  00DC               	movwf	(__pdataBANK0+1)& (0+127)
  1321                           
  1322                           ; Clear objects allocated to COMMON
  1323  003A  01FA               	clrf	__pbssCOMMON& (0+127)
  1324  003B  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1325                           
  1326                           ; Clear objects allocated to BANK0
  1327  003C  3020               	movlw	low __pbssBANK0
  1328  003D  0084               	movwf	4
  1329  003E  3000               	movlw	high __pbssBANK0
  1330  003F  0085               	movwf	5
  1331  0040  3031               	movlw	49
  1332  0041  3183  231B         	fcall	clear_ram0
  1333  0043                     end_of_initialization:	
  1334                           ;End of C runtime variable initialization code
  1335                           
  1336  0043                     __end_of__initialization:	
  1337  0043  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1338  0044  0020               	movlb	0
  1339  0045  3181  29B9         	ljmp	_main	;jump to C main() function
  1340                           
  1341                           	psect	bssCOMMON
  1342  007A                     __pbssCOMMON:	
  1343  007A                     turn_egs@step_index:	
  1344  007A                     	ds	1
  1345  007B                     _eusartTxHead:	
  1346  007B                     	ds	1
  1347                           
  1348                           	psect	bssBANK0
  1349  0020                     __pbssBANK0:	
  1350  0020                     _eusartRxBuffer:	
  1351  0020                     	ds	8
  1352  0028                     _eusartTxBuffer:	
  1353  0028                     	ds	8
  1354  0030                     int_gsm@sms1_index:	
  1355  0030                     	ds	2
  1356  0032                     _flag_directie:	
  1357  0032                     	ds	2
  1358  0034                     TMR1_ISR@CountCallBack:	
  1359  0034                     	ds	2
  1360  0036                     _count_4000_ms:	
  1361  0036                     	ds	2
  1362  0038                     _count_1000_ms:	
  1363  0038                     	ds	2
  1364  003A                     _count_500_ms:	
  1365  003A                     	ds	2
  1366  003C                     _count_100_ms:	
  1367  003C                     	ds	2
  1368  003E                     _flag_4000_ms:	
  1369  003E                     	ds	2
  1370  0040                     _flag_1000_ms:	
  1371  0040                     	ds	2
  1372  0042                     _flag_500_ms:	
  1373  0042                     	ds	2
  1374  0044                     _flag_100_ms:	
  1375  0044                     	ds	2
  1376  0046                     _flag_10_ms:	
  1377  0046                     	ds	2
  1378  0048                     _flag_G:	
  1379  0048                     	ds	2
  1380  004A                     _flag_N:	
  1381  004A                     	ds	2
  1382  004C                     _rcreg:	
  1383  004C                     	ds	1
  1384  004D                     _eusartRxCount:	
  1385  004D                     	ds	1
  1386  004E                     _eusartRxTail:	
  1387  004E                     	ds	1
  1388  004F                     _eusartRxHead:	
  1389  004F                     	ds	1
  1390  0050                     _eusartTxTail:	
  1391  0050                     	ds	1
  1392                           
  1393                           	psect	dataBANK0
  1394  005B                     __pdataBANK0:	
  1395  005B                     turn_egs@step_nr:	
  1396  005B                     	ds	2
  1397                           
  1398                           	psect	clrtext
  1399  031B                     clear_ram0:	
  1400                           ;	Called with FSR0 containing the base address, and
  1401                           ;	WREG with the size to clear
  1402                           
  1403  031B  0064               	clrwdt	;clear the watchdog before getting into this loop
  1404  031C                     clrloop0:	
  1405  031C  0180               	clrf	0	;clear RAM location pointed to by FSR
  1406  031D  3101               	addfsr 0,1
  1407  031E  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1408  031F  2B1C               	goto	clrloop0	;have we reached the end yet?
  1409  0320  3400               	retlw	0	;all done for this memory range, return
  1410                           
  1411                           	psect	cstackCOMMON
  1412  0070                     __pcstackCOMMON:	
  1413  0070                     ?_PIN_MANAGER_Initialize:	
  1414  0070                     ?_OSCILLATOR_Initialize:	
  1415                           ; 1 bytes @ 0x0
  1416                           
  1417  0070                     ?_WDT_Initialize:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420  0070                     ?_TMR1_Initialize:	
  1421                           ; 1 bytes @ 0x0
  1422                           
  1423  0070                     ?_EUSART_Initialize:	
  1424                           ; 1 bytes @ 0x0
  1425                           
  1426  0070                     ?_TMR1_ISR:	
  1427                           ; 1 bytes @ 0x0
  1428                           
  1429  0070                     ??_TMR1_ISR:	
  1430                           ; 1 bytes @ 0x0
  1431                           
  1432  0070                     ?_TMR1_DefaultInterruptHandler:	
  1433                           ; 1 bytes @ 0x0
  1434                           
  1435  0070                     ??_TMR1_DefaultInterruptHandler:	
  1436                           ; 1 bytes @ 0x0
  1437                           
  1438  0070                     ?_TMR1_StartTimer:	
  1439                           ; 1 bytes @ 0x0
  1440                           
  1441  0070                     ?_TMR1_CallBack:	
  1442                           ; 1 bytes @ 0x0
  1443                           
  1444  0070                     ??_TMR1_CallBack:	
  1445                           ; 1 bytes @ 0x0
  1446                           
  1447  0070                     ?_SYSTEM_Initialize:	
  1448                           ; 1 bytes @ 0x0
  1449                           
  1450  0070                     ?_EUSART_Write:	
  1451                           ; 1 bytes @ 0x0
  1452                           
  1453  0070                     ?_putch:	
  1454                           ; 1 bytes @ 0x0
  1455                           
  1456  0070                     ?_EUSART_Transmit_ISR:	
  1457                           ; 1 bytes @ 0x0
  1458                           
  1459  0070                     ??_EUSART_Transmit_ISR:	
  1460                           ; 1 bytes @ 0x0
  1461                           
  1462  0070                     ?_EUSART_Receive_ISR:	
  1463                           ; 1 bytes @ 0x0
  1464                           
  1465  0070                     ??_EUSART_Receive_ISR:	
  1466                           ; 1 bytes @ 0x0
  1467                           
  1468  0070                     ?_INTERRUPT_InterruptManager:	
  1469                           ; 1 bytes @ 0x0
  1470                           
  1471  0070                     ?_turn_egs:	
  1472                           ; 1 bytes @ 0x0
  1473                           
  1474  0070                     ?_int_gsm:	
  1475                           ; 1 bytes @ 0x0
  1476                           
  1477  0070                     ?_main:	
  1478                           ; 1 bytes @ 0x0
  1479                           
  1480                           
  1481                           ; 1 bytes @ 0x0
  1482  0070                     	ds	1
  1483  0071                     ??_INTERRUPT_InterruptManager:	
  1484                           
  1485                           ; 1 bytes @ 0x1
  1486  0071                     	ds	1
  1487  0072                     ??_PIN_MANAGER_Initialize:	
  1488  0072                     ??_OSCILLATOR_Initialize:	
  1489                           ; 1 bytes @ 0x2
  1490                           
  1491  0072                     ??_WDT_Initialize:	
  1492                           ; 1 bytes @ 0x2
  1493                           
  1494  0072                     ??_EUSART_Initialize:	
  1495                           ; 1 bytes @ 0x2
  1496                           
  1497  0072                     ?_TMR1_SetInterruptHandler:	
  1498                           ; 1 bytes @ 0x2
  1499                           
  1500  0072                     ??_TMR1_StartTimer:	
  1501                           ; 1 bytes @ 0x2
  1502                           
  1503  0072                     ??_EUSART_Write:	
  1504                           ; 1 bytes @ 0x2
  1505                           
  1506  0072                     ??_turn_egs:	
  1507                           ; 1 bytes @ 0x2
  1508                           
  1509  0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  1510                           ; 1 bytes @ 0x2
  1511                           
  1512                           
  1513                           ; 2 bytes @ 0x2
  1514  0072                     	ds	1
  1515  0073                     EUSART_Write@txData:	
  1516                           
  1517                           ; 1 bytes @ 0x3
  1518  0073                     	ds	1
  1519  0074                     ??_TMR1_Initialize:	
  1520  0074                     ??_TMR1_SetInterruptHandler:	
  1521                           ; 1 bytes @ 0x4
  1522                           
  1523  0074                     ??_SYSTEM_Initialize:	
  1524                           ; 1 bytes @ 0x4
  1525                           
  1526  0074                     ??_putch:	
  1527                           ; 1 bytes @ 0x4
  1528                           
  1529  0074                     putch@txData:	
  1530                           ; 1 bytes @ 0x4
  1531                           
  1532                           
  1533                           ; 1 bytes @ 0x4
  1534  0074                     	ds	1
  1535  0075                     ?_printf:	
  1536  0075                     printf@f:	
  1537                           ; 2 bytes @ 0x5
  1538                           
  1539                           
  1540                           ; 2 bytes @ 0x5
  1541  0075                     	ds	2
  1542  0077                     ??_printf:	
  1543                           
  1544                           ; 1 bytes @ 0x7
  1545  0077                     	ds	3
  1546  007A                     ??_int_gsm:	
  1547                           
  1548                           	psect	cstackBANK0
  1549  0056                     __pcstackBANK0:	
  1550                           ; 1 bytes @ 0xA
  1551                           
  1552  0056                     printf@ap:	
  1553                           
  1554                           ; 1 bytes @ 0x0
  1555  0056                     	ds	1
  1556  0057                     printf@c:	
  1557                           
  1558                           ; 1 bytes @ 0x1
  1559  0057                     	ds	1
  1560  0058                     ??_main:	
  1561                           
  1562                           ; 1 bytes @ 0x2
  1563  0058                     	ds	2
  1564  005A                     main@x:	
  1565                           
  1566                           ; 1 bytes @ 0x4
  1567  005A                     	ds	1
  1568                           
  1569                           	psect	maintext
  1570  01B9                     __pmaintext:	
  1571 ;;
  1572 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1573 ;;
  1574 ;; *************** function _main *****************
  1575 ;; Defined at:
  1576 ;;		line 255 in file "main.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;		None
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;  x               1    4[BANK0 ] unsigned char 
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  1    wreg      void 
  1583 ;; Registers used:
  1584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1585 ;; Tracked objects:
  1586 ;;		On entry : B1F/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1590 ;;      Params:         0       0       0       0       0       0       0       0
  1591 ;;      Locals:         0       1       0       0       0       0       0       0
  1592 ;;      Temps:          0       2       0       0       0       0       0       0
  1593 ;;      Totals:         0       3       0       0       0       0       0       0
  1594 ;;Total ram usage:        3 bytes
  1595 ;; Hardware stack levels required when called:    8
  1596 ;; This function calls:
  1597 ;;		_SYSTEM_Initialize
  1598 ;;		_int_gsm
  1599 ;;		_turn_egs
  1600 ;; This function is called by:
  1601 ;;		Startup code after reset
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           
  1606                           ;psect for function _main
  1607  01B9                     _main:	
  1608                           
  1609                           ;main.c: 257: char x=0;
  1610                           
  1611                           ;incstack = 0
  1612                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1613  01B9  0020               	movlb	0	; select bank0
  1614  01BA  01DA               	clrf	main@x
  1615                           
  1616                           ;main.c: 260: SYSTEM_Initialize();
  1617  01BB  3182  22E6  3181   	fcall	_SYSTEM_Initialize
  1618                           
  1619                           ;main.c: 261: TRISCbits.TRISC0=0;
  1620  01BE  0021               	movlb	1	; select bank1
  1621  01BF  100E               	bcf	14,0	;volatile
  1622                           
  1623                           ;main.c: 262: TRISCbits.TRISC3=0;
  1624  01C0  118E               	bcf	14,3	;volatile
  1625                           
  1626                           ;main.c: 263: TRISCbits.TRISC4=0;
  1627  01C1  120E               	bcf	14,4	;volatile
  1628                           
  1629                           ;main.c: 264: TRISCbits.TRISC5=0;
  1630  01C2  128E               	bcf	14,5	;volatile
  1631                           
  1632                           ;main.c: 270: (INTCONbits.GIE = 1);
  1633  01C3  178B               	bsf	11,7	;volatile
  1634                           
  1635                           ;main.c: 273: (INTCONbits.PEIE = 1);
  1636  01C4  170B               	bsf	11,6	;volatile
  1637                           
  1638                           ;main.c: 280: _delay((unsigned long)((3000)*(18432000/4000.0)));
  1639  01C5  3047               	movlw	71
  1640  01C6  0020               	movlb	0	; select bank0
  1641  01C7  00D9               	movwf	??_main+1
  1642  01C8  3022               	movlw	34
  1643  01C9  00D8               	movwf	??_main
  1644  01CA  300D               	movlw	13
  1645  01CB                     u1337:	
  1646  01CB  0B89               	decfsz	9,f
  1647  01CC  29CB               	goto	u1337
  1648  01CD  0BD8               	decfsz	??_main,f
  1649  01CE  29CB               	goto	u1337
  1650  01CF  0BD9               	decfsz	??_main+1,f
  1651  01D0  29CB               	goto	u1337
  1652  01D1  3200               	nop2
  1653                           
  1654                           ;main.c: 284: flag_directie=1;
  1655  01D2  3001               	movlw	1
  1656  01D3  0020               	movlb	0	; select bank0
  1657  01D4  00B2               	movwf	_flag_directie
  1658  01D5  3000               	movlw	0
  1659  01D6  00B3               	movwf	_flag_directie+1
  1660  01D7                     l1893:	
  1661                           ;main.c: 286: while (1)
  1662                           
  1663                           
  1664                           ;main.c: 287: {
  1665                           ;main.c: 288: int_gsm();
  1666  01D7  3181  2144  3181   	fcall	_int_gsm
  1667                           
  1668                           ;main.c: 312: if (flag_G==1)
  1669  01DA  0020               	movlb	0	; select bank0
  1670  01DB  0348               	decf	_flag_G,w
  1671  01DC  0449               	iorwf	_flag_G+1,w
  1672  01DD  1D03               	btfss	3,2
  1673  01DE  29D7               	goto	l1893
  1674                           
  1675                           ;main.c: 313: {
  1676                           ;main.c: 314: if (flag_N==1)
  1677  01DF  034A               	decf	_flag_N,w
  1678  01E0  044B               	iorwf	_flag_N+1,w
  1679  01E1  1D03               	btfss	3,2
  1680  01E2  29D7               	goto	l1893
  1681                           
  1682                           ;main.c: 315: {
  1683                           ;main.c: 317: turn_egs();
  1684  01E3  3180  2047  3181   	fcall	_turn_egs
  1685  01E6  29D7               	goto	l1893
  1686  01E7                     __end_of_main:	
  1687                           
  1688                           	psect	text1
  1689  0047                     __ptext1:	
  1690 ;; *************** function _turn_egs *****************
  1691 ;; Defined at:
  1692 ;;		line 64 in file "main.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;		None
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;		None
  1697 ;; Return value:  Size  Location     Type
  1698 ;;                  1    wreg      void 
  1699 ;; Registers used:
  1700 ;;		wreg, status,2, status,0
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1706 ;;      Params:         0       0       0       0       0       0       0       0
  1707 ;;      Locals:         0       0       0       0       0       0       0       0
  1708 ;;      Temps:          1       0       0       0       0       0       0       0
  1709 ;;      Totals:         1       0       0       0       0       0       0       0
  1710 ;;Total ram usage:        1 bytes
  1711 ;; Hardware stack levels used:    1
  1712 ;; Hardware stack levels required when called:    4
  1713 ;; This function calls:
  1714 ;;		Nothing
  1715 ;; This function is called by:
  1716 ;;		_main
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           
  1721                           ;psect for function _turn_egs
  1722  0047                     _turn_egs:	
  1723                           
  1724                           ;main.c: 66: static unsigned char step_index;
  1725                           ;main.c: 67: static unsigned int step_nr=1;
  1726                           ;main.c: 74: if((step_nr<300)&&(flag_10_ms==1))
  1727                           
  1728                           ;incstack = 0
  1729                           ; Regs used in _turn_egs: [wreg+status,2+status,0]
  1730  0047  3001               	movlw	1
  1731  0048  0020               	movlb	0	; select bank0
  1732  0049  025C               	subwf	turn_egs@step_nr+1,w
  1733  004A  302C               	movlw	44
  1734  004B  1903               	skipnz
  1735  004C  025B               	subwf	turn_egs@step_nr,w
  1736  004D  1803               	skipnc
  1737  004E  28D9               	goto	l1621
  1738  004F  0346               	decf	_flag_10_ms,w
  1739  0050  0447               	iorwf	_flag_10_ms+1,w
  1740  0051  1D03               	btfss	3,2
  1741  0052  28D9               	goto	l1621
  1742                           
  1743                           ;main.c: 75: {
  1744                           ;main.c: 76: if(flag_directie==1)
  1745  0053  0332               	decf	_flag_directie,w
  1746  0054  0433               	iorwf	_flag_directie+1,w
  1747  0055  1D03               	btfss	3,2
  1748  0056  2896               	goto	l1565
  1749                           
  1750                           ;main.c: 77: {
  1751                           ;main.c: 78: step_nr++;
  1752  0057  3001               	movlw	1
  1753  0058  07DB               	addwf	turn_egs@step_nr,f
  1754  0059  3000               	movlw	0
  1755  005A  3DDC               	addwfc	turn_egs@step_nr+1,f
  1756                           
  1757                           ;main.c: 79: if(step_index==0)
  1758  005B  087A               	movf	turn_egs@step_index,w
  1759  005C  1D03               	btfss	3,2
  1760  005D  2866               	goto	l1525
  1761                           
  1762                           ;main.c: 80: {
  1763                           ;main.c: 81: step_index++;
  1764  005E  3001               	movlw	1
  1765  005F  00F2               	movwf	??_turn_egs
  1766  0060  0872               	movf	??_turn_egs,w
  1767  0061  07FA               	addwf	turn_egs@step_index,f
  1768                           
  1769                           ;main.c: 82: LATCbits.LATC0=1;
  1770  0062  0022               	movlb	2	; select bank2
  1771  0063  140E               	bsf	14,0	;volatile
  1772                           
  1773                           ;main.c: 83: LATCbits.LATC3=0;
  1774  0064  118E               	bcf	14,3	;volatile
  1775  0065  2870               	goto	L1
  1776  0066                     l1525:	
  1777                           ;main.c: 86: }
  1778                           
  1779                           ;main.c: 85: LATCbits.LATC5=0;
  1780                           
  1781                           ;main.c: 84: LATCbits.LATC4=0;
  1782                           
  1783                           
  1784                           ;main.c: 87: else if(step_index==1)
  1785  0066  037A               	decf	turn_egs@step_index,w
  1786  0067  1D03               	btfss	3,2
  1787  0068  2872               	goto	l1537
  1788                           
  1789                           ;main.c: 88: {
  1790                           ;main.c: 89: step_index++;
  1791  0069  3001               	movlw	1
  1792  006A  00F2               	movwf	??_turn_egs
  1793  006B  0872               	movf	??_turn_egs,w
  1794  006C  07FA               	addwf	turn_egs@step_index,f
  1795                           
  1796                           ;main.c: 90: LATCbits.LATC0=0;
  1797  006D  0022               	movlb	2	; select bank2
  1798  006E  100E               	bcf	14,0	;volatile
  1799                           
  1800                           ;main.c: 91: LATCbits.LATC3=1;
  1801  006F  158E               	bsf	14,3	;volatile
  1802  0070                     L1:	
  1803                           
  1804                           ;main.c: 92: LATCbits.LATC4=0;
  1805  0070  120E               	bcf	14,4	;volatile
  1806  0071  287E               	goto	l1547
  1807  0072                     l1537:	
  1808                           ;main.c: 94: }
  1809                           
  1810                           ;main.c: 93: LATCbits.LATC5=0;
  1811                           
  1812                           
  1813                           ;main.c: 95: else if(step_index==2)
  1814  0072  3002               	movlw	2
  1815  0073  067A               	xorwf	turn_egs@step_index,w
  1816  0074  1D03               	btfss	3,2
  1817  0075  2880               	goto	l1549
  1818                           
  1819                           ;main.c: 96: {
  1820                           ;main.c: 97: step_index++;
  1821  0076  3001               	movlw	1
  1822  0077  00F2               	movwf	??_turn_egs
  1823  0078  0872               	movf	??_turn_egs,w
  1824  0079  07FA               	addwf	turn_egs@step_index,f
  1825                           
  1826                           ;main.c: 98: LATCbits.LATC0=0;
  1827  007A  0022               	movlb	2	; select bank2
  1828  007B  100E               	bcf	14,0	;volatile
  1829                           
  1830                           ;main.c: 99: LATCbits.LATC3=0;
  1831  007C  118E               	bcf	14,3	;volatile
  1832                           
  1833                           ;main.c: 100: LATCbits.LATC4=1;
  1834  007D  160E               	bsf	14,4	;volatile
  1835  007E                     l1547:	
  1836                           
  1837                           ;main.c: 101: LATCbits.LATC5=0;
  1838  007E  128E               	bcf	14,5	;volatile
  1839                           
  1840                           ;main.c: 102: }
  1841  007F  2892               	goto	l297
  1842  0080                     l1549:	
  1843                           
  1844                           ;main.c: 103: else if(step_index==3)
  1845  0080  3003               	movlw	3
  1846  0081  067A               	xorwf	turn_egs@step_index,w
  1847  0082  1D03               	btfss	3,2
  1848  0083  288E               	goto	l1561
  1849                           
  1850                           ;main.c: 104: {
  1851                           ;main.c: 105: step_index++;
  1852  0084  3001               	movlw	1
  1853  0085  00F2               	movwf	??_turn_egs
  1854  0086  0872               	movf	??_turn_egs,w
  1855  0087  07FA               	addwf	turn_egs@step_index,f
  1856                           
  1857                           ;main.c: 106: LATCbits.LATC0=0;
  1858  0088  0022               	movlb	2	; select bank2
  1859  0089  100E               	bcf	14,0	;volatile
  1860                           
  1861                           ;main.c: 107: LATCbits.LATC3=0;
  1862  008A  118E               	bcf	14,3	;volatile
  1863                           
  1864                           ;main.c: 108: LATCbits.LATC4=0;
  1865  008B  120E               	bcf	14,4	;volatile
  1866                           
  1867                           ;main.c: 109: LATCbits.LATC5=1;
  1868  008C  168E               	bsf	14,5	;volatile
  1869                           
  1870                           ;main.c: 110: }
  1871  008D  2892               	goto	l297
  1872  008E                     l1561:	
  1873                           
  1874                           ;main.c: 111: else if(step_index==4)
  1875  008E  3004               	movlw	4
  1876  008F  067A               	xorwf	turn_egs@step_index,w
  1877  0090  1903               	btfsc	3,2
  1878                           
  1879                           ;main.c: 112: {
  1880                           ;main.c: 113: step_index=0;
  1881  0091  01FA               	clrf	turn_egs@step_index
  1882  0092                     l297:	
  1883                           
  1884                           ;main.c: 114: }
  1885                           ;main.c: 116: flag_10_ms=0;
  1886  0092  0020               	movlb	0	; select bank0
  1887  0093  01C6               	clrf	_flag_10_ms
  1888  0094  01C7               	clrf	_flag_10_ms+1
  1889                           
  1890                           ;main.c: 117: }
  1891  0095  0008               	return
  1892  0096                     l1565:	
  1893                           
  1894                           ;main.c: 118: else if(flag_directie==0)
  1895  0096  0832               	movf	_flag_directie,w
  1896  0097  0433               	iorwf	_flag_directie+1,w
  1897  0098  1D03               	btfss	3,2
  1898  0099  0008               	return
  1899                           
  1900                           ;main.c: 119: {
  1901                           ;main.c: 120: step_nr++;
  1902  009A  3001               	movlw	1
  1903  009B  07DB               	addwf	turn_egs@step_nr,f
  1904  009C  3000               	movlw	0
  1905  009D  3DDC               	addwfc	turn_egs@step_nr+1,f
  1906                           
  1907                           ;main.c: 121: if(step_index==0)
  1908  009E  087A               	movf	turn_egs@step_index,w
  1909  009F  1D03               	btfss	3,2
  1910  00A0  28A9               	goto	l1581
  1911                           
  1912                           ;main.c: 122: {
  1913                           ;main.c: 123: step_index++;
  1914  00A1  3001               	movlw	1
  1915  00A2  00F2               	movwf	??_turn_egs
  1916  00A3  0872               	movf	??_turn_egs,w
  1917  00A4  07FA               	addwf	turn_egs@step_index,f
  1918                           
  1919                           ;main.c: 124: LATCbits.LATC5=1;
  1920  00A5  0022               	movlb	2	; select bank2
  1921  00A6  168E               	bsf	14,5	;volatile
  1922                           
  1923                           ;main.c: 125: LATCbits.LATC4=0;
  1924  00A7  120E               	bcf	14,4	;volatile
  1925  00A8  28B3               	goto	L2
  1926  00A9                     l1581:	
  1927                           ;main.c: 128: }
  1928                           
  1929                           ;main.c: 127: LATCbits.LATC0=0;
  1930                           
  1931                           ;main.c: 126: LATCbits.LATC3=0;
  1932                           
  1933                           
  1934                           ;main.c: 129: else if(step_index==1)
  1935  00A9  037A               	decf	turn_egs@step_index,w
  1936  00AA  1D03               	btfss	3,2
  1937  00AB  28B5               	goto	l1593
  1938                           
  1939                           ;main.c: 130: {
  1940                           ;main.c: 131: step_index++;
  1941  00AC  3001               	movlw	1
  1942  00AD  00F2               	movwf	??_turn_egs
  1943  00AE  0872               	movf	??_turn_egs,w
  1944  00AF  07FA               	addwf	turn_egs@step_index,f
  1945                           
  1946                           ;main.c: 132: LATCbits.LATC5=0;
  1947  00B0  0022               	movlb	2	; select bank2
  1948  00B1  128E               	bcf	14,5	;volatile
  1949                           
  1950                           ;main.c: 133: LATCbits.LATC4=1;
  1951  00B2  160E               	bsf	14,4	;volatile
  1952  00B3                     L2:	
  1953                           
  1954                           ;main.c: 134: LATCbits.LATC3=0;
  1955  00B3  118E               	bcf	14,3	;volatile
  1956  00B4  28C1               	goto	l1603
  1957  00B5                     l1593:	
  1958                           ;main.c: 136: }
  1959                           
  1960                           ;main.c: 135: LATCbits.LATC0=0;
  1961                           
  1962                           
  1963                           ;main.c: 137: else if(step_index==2)
  1964  00B5  3002               	movlw	2
  1965  00B6  067A               	xorwf	turn_egs@step_index,w
  1966  00B7  1D03               	btfss	3,2
  1967  00B8  28C3               	goto	l1605
  1968                           
  1969                           ;main.c: 138: {
  1970                           ;main.c: 139: step_index++;
  1971  00B9  3001               	movlw	1
  1972  00BA  00F2               	movwf	??_turn_egs
  1973  00BB  0872               	movf	??_turn_egs,w
  1974  00BC  07FA               	addwf	turn_egs@step_index,f
  1975                           
  1976                           ;main.c: 140: LATCbits.LATC5=0;
  1977  00BD  0022               	movlb	2	; select bank2
  1978  00BE  128E               	bcf	14,5	;volatile
  1979                           
  1980                           ;main.c: 141: LATCbits.LATC4=0;
  1981  00BF  120E               	bcf	14,4	;volatile
  1982                           
  1983                           ;main.c: 142: LATCbits.LATC3=1;
  1984  00C0  158E               	bsf	14,3	;volatile
  1985  00C1                     l1603:	
  1986                           
  1987                           ;main.c: 143: LATCbits.LATC0=0;
  1988  00C1  100E               	bcf	14,0	;volatile
  1989                           
  1990                           ;main.c: 144: }
  1991  00C2  28D5               	goto	l308
  1992  00C3                     l1605:	
  1993                           
  1994                           ;main.c: 145: else if(step_index==3)
  1995  00C3  3003               	movlw	3
  1996  00C4  067A               	xorwf	turn_egs@step_index,w
  1997  00C5  1D03               	btfss	3,2
  1998  00C6  28D1               	goto	l1617
  1999                           
  2000                           ;main.c: 146: {
  2001                           ;main.c: 147: step_index++;
  2002  00C7  3001               	movlw	1
  2003  00C8  00F2               	movwf	??_turn_egs
  2004  00C9  0872               	movf	??_turn_egs,w
  2005  00CA  07FA               	addwf	turn_egs@step_index,f
  2006                           
  2007                           ;main.c: 148: LATCbits.LATC5=0;
  2008  00CB  0022               	movlb	2	; select bank2
  2009  00CC  128E               	bcf	14,5	;volatile
  2010                           
  2011                           ;main.c: 149: LATCbits.LATC4=0;
  2012  00CD  120E               	bcf	14,4	;volatile
  2013                           
  2014                           ;main.c: 150: LATCbits.LATC3=0;
  2015  00CE  118E               	bcf	14,3	;volatile
  2016                           
  2017                           ;main.c: 151: LATCbits.LATC0=1;
  2018  00CF  140E               	bsf	14,0	;volatile
  2019                           
  2020                           ;main.c: 152: }
  2021  00D0  28D5               	goto	l308
  2022  00D1                     l1617:	
  2023                           
  2024                           ;main.c: 153: else if(step_index==4)
  2025  00D1  3004               	movlw	4
  2026  00D2  067A               	xorwf	turn_egs@step_index,w
  2027  00D3  1903               	btfsc	3,2
  2028                           
  2029                           ;main.c: 154: {
  2030                           ;main.c: 155: step_index=0;
  2031  00D4  01FA               	clrf	turn_egs@step_index
  2032  00D5                     l308:	
  2033                           
  2034                           ;main.c: 156: }
  2035                           ;main.c: 158: flag_10_ms=0;
  2036  00D5  0020               	movlb	0	; select bank0
  2037  00D6  01C6               	clrf	_flag_10_ms
  2038  00D7  01C7               	clrf	_flag_10_ms+1
  2039                           
  2040                           ;main.c: 159: }
  2041                           ;main.c: 160: }
  2042  00D8  0008               	return
  2043  00D9                     l1621:	
  2044                           
  2045                           ;main.c: 161: else if(step_nr==300)
  2046  00D9  302C               	movlw	44
  2047  00DA  065B               	xorwf	turn_egs@step_nr,w
  2048  00DB  1D03               	skipz
  2049  00DC  0008               	return
  2050  00DD  035C               	decf	turn_egs@step_nr+1,w
  2051  00DE  1D03               	btfss	3,2
  2052  00DF  0008               	return
  2053                           
  2054                           ;main.c: 162: {
  2055                           ;main.c: 163: flag_N=0;
  2056  00E0  01CA               	clrf	_flag_N
  2057  00E1  01CB               	clrf	_flag_N+1
  2058                           
  2059                           ;main.c: 164: flag_G=0;
  2060  00E2  01C8               	clrf	_flag_G
  2061  00E3  01C9               	clrf	_flag_G+1
  2062                           
  2063                           ;main.c: 165: step_nr=0;
  2064  00E4  01DB               	clrf	turn_egs@step_nr
  2065  00E5  01DC               	clrf	turn_egs@step_nr+1
  2066                           
  2067                           ;main.c: 166: if(flag_directie==1)
  2068  00E6  0332               	decf	_flag_directie,w
  2069  00E7  0433               	iorwf	_flag_directie+1,w
  2070  00E8  1D03               	btfss	3,2
  2071  00E9  28ED               	goto	l1629
  2072                           
  2073                           ;main.c: 167: {
  2074                           ;main.c: 168: flag_directie=0;
  2075  00EA  01B2               	clrf	_flag_directie
  2076  00EB  01B3               	clrf	_flag_directie+1
  2077                           
  2078                           ;main.c: 169: }
  2079  00EC  28F5               	goto	l1633
  2080  00ED                     l1629:	
  2081                           
  2082                           ;main.c: 170: else if(flag_directie==0)
  2083  00ED  0832               	movf	_flag_directie,w
  2084  00EE  0433               	iorwf	_flag_directie+1,w
  2085  00EF  1D03               	btfss	3,2
  2086  00F0  28F5               	goto	l1633
  2087                           
  2088                           ;main.c: 171: {
  2089                           ;main.c: 172: flag_directie=1;
  2090  00F1  3001               	movlw	1
  2091  00F2  00B2               	movwf	_flag_directie
  2092  00F3  3000               	movlw	0
  2093  00F4  00B3               	movwf	_flag_directie+1
  2094  00F5                     l1633:	
  2095                           
  2096                           ;main.c: 173: }
  2097                           ;main.c: 174: step_index=0;
  2098  00F5  01FA               	clrf	turn_egs@step_index
  2099  00F6  0008               	return
  2100  00F7                     __end_of_turn_egs:	
  2101                           
  2102                           	psect	text2
  2103  0144                     __ptext2:	
  2104 ;; *************** function _int_gsm *****************
  2105 ;; Defined at:
  2106 ;;		line 214 in file "main.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;		None
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;		None
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      void 
  2113 ;; Registers used:
  2114 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2120 ;;      Params:         0       0       0       0       0       0       0       0
  2121 ;;      Locals:         0       0       0       0       0       0       0       0
  2122 ;;      Temps:          0       0       0       0       0       0       0       0
  2123 ;;      Totals:         0       0       0       0       0       0       0       0
  2124 ;;Total ram usage:        0 bytes
  2125 ;; Hardware stack levels used:    1
  2126 ;; Hardware stack levels required when called:    7
  2127 ;; This function calls:
  2128 ;;		_printf
  2129 ;;		_putch
  2130 ;; This function is called by:
  2131 ;;		_main
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           
  2136                           ;psect for function _int_gsm
  2137  0144                     _int_gsm:	
  2138                           
  2139                           ;main.c: 216: static int sms1_index;
  2140                           ;main.c: 217: if (flag_4000_ms==1)
  2141                           
  2142                           ;incstack = 0
  2143                           ; Regs used in _int_gsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2144  0144  0020               	movlb	0	; select bank0
  2145  0145  033E               	decf	_flag_4000_ms,w
  2146  0146  043F               	iorwf	_flag_4000_ms+1,w
  2147  0147  1D03               	btfss	3,2
  2148  0148  0008               	return
  2149                           
  2150                           ;main.c: 218: {
  2151                           ;main.c: 219: if (sms1_index==0)
  2152  0149  0830               	movf	int_gsm@sms1_index,w
  2153  014A  0431               	iorwf	int_gsm@sms1_index+1,w
  2154  014B  1D03               	btfss	3,2
  2155  014C  2951               	goto	l1805
  2156                           
  2157                           ;main.c: 220: {
  2158                           ;main.c: 221: printf("AT");
  2159  014D  3035               	movlw	low (STR_4| (0+32768))
  2160  014E  00F5               	movwf	printf@f
  2161  014F  3083               	movlw	high (STR_4| (0+32768))
  2162  0150  2973               	goto	L3
  2163  0151                     l1805:	
  2164                           ;main.c: 224: }
  2165                           
  2166                           ;main.c: 223: sms1_index++;
  2167                           
  2168                           ;main.c: 222: putch(0x0d);
  2169                           
  2170                           
  2171                           ;main.c: 225: else if (sms1_index==1)
  2172  0151  0330               	decf	int_gsm@sms1_index,w
  2173  0152  0431               	iorwf	int_gsm@sms1_index+1,w
  2174  0153  1D03               	btfss	3,2
  2175  0154  2959               	goto	l1813
  2176                           
  2177                           ;main.c: 226: {
  2178                           ;main.c: 227: printf("AT+CPIN=\"1234\"");
  2179  0155  30D7               	movlw	low (STR_5| (0+32768))
  2180  0156  00F5               	movwf	printf@f
  2181  0157  3082               	movlw	high (STR_5| (0+32768))
  2182  0158  2973               	goto	L3
  2183  0159                     l1813:	
  2184                           ;main.c: 230: }
  2185                           
  2186                           ;main.c: 229: sms1_index++;
  2187                           
  2188                           ;main.c: 228: putch(0x0d);
  2189                           
  2190                           
  2191                           ;main.c: 231: else if (sms1_index==2)
  2192  0159  3002               	movlw	2
  2193  015A  0630               	xorwf	int_gsm@sms1_index,w
  2194  015B  0431               	iorwf	int_gsm@sms1_index+1,w
  2195  015C  1D03               	btfss	3,2
  2196  015D  2962               	goto	l1821
  2197                           
  2198                           ;main.c: 232: {
  2199                           ;main.c: 233: printf("AT+CMGF=1");
  2200  015E  3011               	movlw	low (STR_6| (0+32768))
  2201  015F  00F5               	movwf	printf@f
  2202  0160  3083               	movlw	high (STR_6| (0+32768))
  2203  0161  2973               	goto	L3
  2204  0162                     l1821:	
  2205                           ;main.c: 236: }
  2206                           
  2207                           ;main.c: 235: sms1_index++;
  2208                           
  2209                           ;main.c: 234: putch(0x0d);
  2210                           
  2211                           
  2212                           ;main.c: 237: else if (sms1_index==3)
  2213  0162  3003               	movlw	3
  2214  0163  0630               	xorwf	int_gsm@sms1_index,w
  2215  0164  0431               	iorwf	int_gsm@sms1_index+1,w
  2216  0165  1D03               	btfss	3,2
  2217  0166  296B               	goto	l1829
  2218                           
  2219                           ;main.c: 238: {
  2220                           ;main.c: 239: printf("AT+CNMI=1,2,0,0,0");
  2221  0167  30C5               	movlw	low (STR_7| (0+32768))
  2222  0168  00F5               	movwf	printf@f
  2223  0169  3082               	movlw	high (STR_7| (0+32768))
  2224  016A  2973               	goto	L3
  2225  016B                     l1829:	
  2226                           ;main.c: 242: }
  2227                           
  2228                           ;main.c: 241: sms1_index++;
  2229                           
  2230                           ;main.c: 240: putch(0x0d);
  2231                           
  2232                           
  2233                           ;main.c: 243: else if (sms1_index==4)
  2234  016B  3004               	movlw	4
  2235  016C  0630               	xorwf	int_gsm@sms1_index,w
  2236  016D  0431               	iorwf	int_gsm@sms1_index+1,w
  2237  016E  1D03               	btfss	3,2
  2238  016F  297F               	goto	l1837
  2239                           
  2240                           ;main.c: 244: {
  2241                           ;main.c: 245: printf("AT+CSCS=\"GSM\"");
  2242  0170  30F5               	movlw	low (STR_1| (0+32768))
  2243  0171  00F5               	movwf	printf@f
  2244  0172  3082               	movlw	high (STR_1| (0+32768))
  2245  0173                     L3:	
  2246  0173  00F6               	movwf	printf@f+1
  2247  0174  3182  222D  3181   	fcall	_printf
  2248                           
  2249                           ;main.c: 246: putch(0x0d);
  2250  0177  300D               	movlw	13
  2251  0178  3183  2327         	fcall	_putch
  2252                           
  2253                           ;main.c: 247: sms1_index++;
  2254  017A  3001               	movlw	1
  2255  017B  0020               	movlb	0	; select bank0
  2256  017C  07B0               	addwf	int_gsm@sms1_index,f
  2257  017D  3000               	movlw	0
  2258  017E  3DB1               	addwfc	int_gsm@sms1_index+1,f
  2259  017F                     l1837:	
  2260                           
  2261                           ;main.c: 248: }
  2262                           ;main.c: 249: flag_4000_ms=0;
  2263  017F  01BE               	clrf	_flag_4000_ms
  2264  0180  01BF               	clrf	_flag_4000_ms+1
  2265  0181  0008               	return
  2266  0182                     __end_of_int_gsm:	
  2267                           
  2268                           	psect	text3
  2269  022D                     __ptext3:	
  2270 ;; *************** function _printf *****************
  2271 ;; Defined at:
  2272 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\doprnt.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;  f               2    5[COMMON] PTR const unsigned char 
  2275 ;;		 -> STR_8(14), STR_7(18), STR_6(10), STR_5(15), 
  2276 ;;		 -> STR_4(3), STR_3(14), STR_2(21), STR_1(14), 
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;  tmpval          4    0        struct .
  2279 ;;  cp              2    0        PTR const unsigned char 
  2280 ;;  len             2    0        unsigned int 
  2281 ;;  val             2    0        unsigned int 
  2282 ;;  c               1    1[BANK0 ] char 
  2283 ;;  ap              1    0[BANK0 ] PTR void [1]
  2284 ;;		 -> ?_printf(2), 
  2285 ;;  flag            1    0        unsigned char 
  2286 ;;  prec            1    0        char 
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  2    5[COMMON] int 
  2289 ;; Registers used:
  2290 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2296 ;;      Params:         2       0       0       0       0       0       0       0
  2297 ;;      Locals:         0       2       0       0       0       0       0       0
  2298 ;;      Temps:          3       0       0       0       0       0       0       0
  2299 ;;      Totals:         5       2       0       0       0       0       0       0
  2300 ;;Total ram usage:        7 bytes
  2301 ;; Hardware stack levels used:    1
  2302 ;; Hardware stack levels required when called:    6
  2303 ;; This function calls:
  2304 ;;		_putch
  2305 ;; This function is called by:
  2306 ;;		_int_gsm
  2307 ;;		_sms_text
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           
  2312                           ;psect for function _printf
  2313  022D                     _printf:	
  2314                           
  2315                           ;doprnt.c: 466: va_list ap;
  2316                           ;doprnt.c: 499: signed char c;
  2317                           ;doprnt.c: 506: signed char prec;
  2318                           ;doprnt.c: 508: unsigned char flag;
  2319                           ;doprnt.c: 523: union {
  2320                           ;doprnt.c: 524: unsigned long vd;
  2321                           ;doprnt.c: 525: double integ;
  2322                           ;doprnt.c: 526: } tmpval;
  2323                           ;doprnt.c: 528: unsigned int val;
  2324                           ;doprnt.c: 529: unsigned len;
  2325                           ;doprnt.c: 530: const char * cp;
  2326                           ;doprnt.c: 533: *ap = __va_start();
  2327                           
  2328                           ;incstack = 0
  2329                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2330  022D  3077               	movlw	(low ((?_printf| 0+2)))& (0+255)
  2331  022E  00F7               	movwf	??_printf
  2332  022F  0877               	movf	??_printf,w
  2333  0230  0020               	movlb	0	; select bank0
  2334  0231  00D6               	movwf	printf@ap
  2335  0232                     l1793:	
  2336                           ;doprnt.c: 543: }
  2337                           ;doprnt.c: 1422: {
  2338                           
  2339                           ;doprnt.c: 542: continue;
  2340                           
  2341                           ;doprnt.c: 536: while(c = *f++) {
  2342                           
  2343  0232  0876               	movf	printf@f+1,w
  2344  0233  00F8               	movwf	??_printf+1
  2345  0234  0875               	movf	printf@f,w
  2346  0235  00F7               	movwf	??_printf
  2347  0236  0AF5               	incf	printf@f,f
  2348  0237  1903               	skipnz
  2349  0238  0AF6               	incf	printf@f+1,f
  2350  0239  0877               	movf	??_printf,w
  2351  023A  0084               	movwf	4
  2352  023B  0878               	movf	??_printf+1,w
  2353  023C  0085               	movwf	5
  2354  023D  0800               	movf	0,w	;code access
  2355  023E  00F9               	movwf	??_printf+2
  2356  023F  0879               	movf	??_printf+2,w
  2357  0240  0020               	movlb	0	; select bank0
  2358  0241  00D7               	movwf	printf@c
  2359  0242  0857               	movf	printf@c,w
  2360  0243  1903               	btfsc	3,2
  2361  0244  0008               	return
  2362                           
  2363                           ;doprnt.c: 540: {
  2364                           ;doprnt.c: 541: (putch(c) );
  2365  0245  0857               	movf	printf@c,w
  2366  0246  3183  2327  3182   	fcall	_putch
  2367  0249  2A32               	goto	l1793
  2368  024A                     __end_of_printf:	
  2369                           ;doprnt.c: 1469: }
  2370                           ;doprnt.c: 1533: }
  2371                           ;doprnt.c: 1540: return 0;
  2372                           ;	Return value of _printf is never used
  2373                           
  2374                           
  2375                           	psect	text4
  2376  0327                     __ptext4:	
  2377 ;; *************** function _putch *****************
  2378 ;; Defined at:
  2379 ;;		line 161 in file "mcc_generated_files/eusart.c"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;  txData          1    wreg     unsigned char 
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;  txData          1    4[COMMON] unsigned char 
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  1    wreg      void 
  2386 ;; Registers used:
  2387 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2393 ;;      Params:         0       0       0       0       0       0       0       0
  2394 ;;      Locals:         1       0       0       0       0       0       0       0
  2395 ;;      Temps:          0       0       0       0       0       0       0       0
  2396 ;;      Totals:         1       0       0       0       0       0       0       0
  2397 ;;Total ram usage:        1 bytes
  2398 ;; Hardware stack levels used:    1
  2399 ;; Hardware stack levels required when called:    5
  2400 ;; This function calls:
  2401 ;;		_EUSART_Write
  2402 ;; This function is called by:
  2403 ;;		_int_gsm
  2404 ;;		_printf
  2405 ;;		_sms_text
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           
  2410                           ;psect for function _putch
  2411  0327                     _putch:	
  2412                           
  2413                           ;incstack = 0
  2414                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2415                           ;putch@txData stored from wreg
  2416  0327  00F4               	movwf	putch@txData
  2417                           
  2418                           ;eusart.c: 163: EUSART_Write(txData);
  2419  0328  0874               	movf	putch@txData,w
  2420  0329  3181  21E7         	fcall	_EUSART_Write
  2421  032B  0008               	return
  2422  032C                     __end_of_putch:	
  2423                           
  2424                           	psect	text5
  2425  01E7                     __ptext5:	
  2426 ;; *************** function _EUSART_Write *****************
  2427 ;; Defined at:
  2428 ;;		line 133 in file "mcc_generated_files/eusart.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  txData          1    wreg     unsigned char 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  txData          1    3[COMMON] unsigned char 
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  1    wreg      void 
  2435 ;; Registers used:
  2436 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2442 ;;      Params:         0       0       0       0       0       0       0       0
  2443 ;;      Locals:         1       0       0       0       0       0       0       0
  2444 ;;      Temps:          1       0       0       0       0       0       0       0
  2445 ;;      Totals:         2       0       0       0       0       0       0       0
  2446 ;;Total ram usage:        2 bytes
  2447 ;; Hardware stack levels used:    1
  2448 ;; Hardware stack levels required when called:    4
  2449 ;; This function calls:
  2450 ;;		Nothing
  2451 ;; This function is called by:
  2452 ;;		_putch
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           
  2457                           ;psect for function _EUSART_Write
  2458  01E7                     _EUSART_Write:	
  2459                           
  2460                           ;incstack = 0
  2461                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  2462                           ;EUSART_Write@txData stored from wreg
  2463  01E7  00F3               	movwf	EUSART_Write@txData
  2464  01E8                     l1771:	
  2465                           ;eusart.c: 136: {
  2466                           
  2467                           ;eusart.c: 135: while(0 == eusartTxBufferRemaining)
  2468                           
  2469  01E8  0020               	movlb	0	; select bank0
  2470  01E9  0855               	movf	_eusartTxBufferRemaining,w	;volatile
  2471  01EA  1903               	btfsc	3,2
  2472  01EB  29E8               	goto	l1771
  2473                           
  2474                           ;eusart.c: 137: }
  2475                           ;eusart.c: 139: if(0 == PIE1bits.TXIE)
  2476  01EC  0021               	movlb	1	; select bank1
  2477  01ED  1A11               	btfsc	17,4	;volatile
  2478  01EE  29F3               	goto	l125
  2479                           
  2480                           ;eusart.c: 140: {
  2481                           ;eusart.c: 141: TXREG = txData;
  2482  01EF  0873               	movf	EUSART_Write@txData,w
  2483  01F0  0023               	movlb	3	; select bank3
  2484  01F1  009A               	movwf	26	;volatile
  2485                           
  2486                           ;eusart.c: 142: }
  2487  01F2  2A07               	goto	l1785
  2488  01F3                     l125:	
  2489                           
  2490                           ;eusart.c: 143: else
  2491                           ;eusart.c: 144: {
  2492                           ;eusart.c: 145: PIE1bits.TXIE = 0;
  2493  01F3  1211               	bcf	17,4	;volatile
  2494                           
  2495                           ;eusart.c: 146: eusartTxBuffer[eusartTxHead++] = txData;
  2496  01F4  0873               	movf	EUSART_Write@txData,w
  2497  01F5  00F2               	movwf	??_EUSART_Write
  2498  01F6  087B               	movf	_eusartTxHead,w
  2499  01F7  3E28               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  2500  01F8  0086               	movwf	6
  2501  01F9  0187               	clrf	7
  2502  01FA  0872               	movf	??_EUSART_Write,w
  2503  01FB  0081               	movwf	1
  2504  01FC  3001               	movlw	1
  2505  01FD  00F2               	movwf	??_EUSART_Write
  2506  01FE  0872               	movf	??_EUSART_Write,w
  2507  01FF  07FB               	addwf	_eusartTxHead,f	;volatile
  2508                           
  2509                           ;eusart.c: 147: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  2510  0200  3008               	movlw	8
  2511  0201  027B               	subwf	_eusartTxHead,w	;volatile
  2512  0202  1803               	btfsc	3,0
  2513                           
  2514                           ;eusart.c: 148: {
  2515                           ;eusart.c: 149: eusartTxHead = 0;
  2516  0203  01FB               	clrf	_eusartTxHead	;volatile
  2517                           
  2518                           ;eusart.c: 150: }
  2519                           ;eusart.c: 151: eusartTxBufferRemaining--;
  2520  0204  3001               	movlw	1
  2521  0205  0020               	movlb	0	; select bank0
  2522  0206  02D5               	subwf	_eusartTxBufferRemaining,f	;volatile
  2523  0207                     l1785:	
  2524                           
  2525                           ;eusart.c: 152: }
  2526                           ;eusart.c: 153: PIE1bits.TXIE = 1;
  2527  0207  0021               	movlb	1	; select bank1
  2528  0208  1611               	bsf	17,4	;volatile
  2529  0209  0008               	return
  2530  020A                     __end_of_EUSART_Write:	
  2531                           
  2532                           	psect	text6
  2533  02E6                     __ptext6:	
  2534 ;; *************** function _SYSTEM_Initialize *****************
  2535 ;; Defined at:
  2536 ;;		line 71 in file "mcc_generated_files/mcc.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;		None
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;		None
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  1    wreg      void 
  2543 ;; Registers used:
  2544 ;;		wreg, status,2, status,0, pclath, cstack
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2550 ;;      Params:         0       0       0       0       0       0       0       0
  2551 ;;      Locals:         0       0       0       0       0       0       0       0
  2552 ;;      Temps:          0       0       0       0       0       0       0       0
  2553 ;;      Totals:         0       0       0       0       0       0       0       0
  2554 ;;Total ram usage:        0 bytes
  2555 ;; Hardware stack levels used:    1
  2556 ;; Hardware stack levels required when called:    6
  2557 ;; This function calls:
  2558 ;;		_EUSART_Initialize
  2559 ;;		_OSCILLATOR_Initialize
  2560 ;;		_PIN_MANAGER_Initialize
  2561 ;;		_TMR1_Initialize
  2562 ;;		_WDT_Initialize
  2563 ;; This function is called by:
  2564 ;;		_main
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           
  2569                           ;psect for function _SYSTEM_Initialize
  2570  02E6                     _SYSTEM_Initialize:	
  2571                           
  2572                           ;mcc.c: 74: PIN_MANAGER_Initialize();
  2573                           
  2574                           ;incstack = 0
  2575                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2576  02E6  3182  220A  3182   	fcall	_PIN_MANAGER_Initialize
  2577                           
  2578                           ;mcc.c: 75: OSCILLATOR_Initialize();
  2579  02E9  3183  232C  3182   	fcall	_OSCILLATOR_Initialize
  2580                           
  2581                           ;mcc.c: 76: WDT_Initialize();
  2582  02EC  3183  2331  3182   	fcall	_WDT_Initialize
  2583                           
  2584                           ;mcc.c: 77: TMR1_Initialize();
  2585  02EF  3182  2282  3182   	fcall	_TMR1_Initialize
  2586                           
  2587                           ;mcc.c: 78: EUSART_Initialize();
  2588  02F2  3182  2267         	fcall	_EUSART_Initialize
  2589  02F4  0008               	return
  2590  02F5                     __end_of_SYSTEM_Initialize:	
  2591                           
  2592                           	psect	text7
  2593  0331                     __ptext7:	
  2594 ;; *************** function _WDT_Initialize *****************
  2595 ;; Defined at:
  2596 ;;		line 89 in file "mcc_generated_files/mcc.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;		None
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;		None
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  1    wreg      void 
  2603 ;; Registers used:
  2604 ;;		wreg
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2610 ;;      Params:         0       0       0       0       0       0       0       0
  2611 ;;      Locals:         0       0       0       0       0       0       0       0
  2612 ;;      Temps:          0       0       0       0       0       0       0       0
  2613 ;;      Totals:         0       0       0       0       0       0       0       0
  2614 ;;Total ram usage:        0 bytes
  2615 ;; Hardware stack levels used:    1
  2616 ;; Hardware stack levels required when called:    4
  2617 ;; This function calls:
  2618 ;;		Nothing
  2619 ;; This function is called by:
  2620 ;;		_SYSTEM_Initialize
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           
  2625                           ;psect for function _WDT_Initialize
  2626  0331                     _WDT_Initialize:	
  2627                           
  2628                           ;mcc.c: 92: WDTCON = 0x16;
  2629                           
  2630                           ;incstack = 0
  2631                           ; Regs used in _WDT_Initialize: [wreg]
  2632  0331  3016               	movlw	22
  2633  0332  0021               	movlb	1	; select bank1
  2634  0333  0097               	movwf	23	;volatile
  2635  0334  0008               	return
  2636  0335                     __end_of_WDT_Initialize:	
  2637                           
  2638                           	psect	text8
  2639  0282                     __ptext8:	
  2640 ;; *************** function _TMR1_Initialize *****************
  2641 ;; Defined at:
  2642 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;		None
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;		None
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  1    wreg      void 
  2649 ;; Registers used:
  2650 ;;		wreg, status,2, status,0, pclath, cstack
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2656 ;;      Params:         0       0       0       0       0       0       0       0
  2657 ;;      Locals:         0       0       0       0       0       0       0       0
  2658 ;;      Temps:          0       0       0       0       0       0       0       0
  2659 ;;      Totals:         0       0       0       0       0       0       0       0
  2660 ;;Total ram usage:        0 bytes
  2661 ;; Hardware stack levels used:    1
  2662 ;; Hardware stack levels required when called:    5
  2663 ;; This function calls:
  2664 ;;		_TMR1_SetInterruptHandler
  2665 ;;		_TMR1_StartTimer
  2666 ;; This function is called by:
  2667 ;;		_SYSTEM_Initialize
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           
  2672                           ;psect for function _TMR1_Initialize
  2673  0282                     _TMR1_Initialize:	
  2674                           
  2675                           ;tmr1.c: 69: T1CON = 0x00;
  2676                           
  2677                           ;incstack = 0
  2678                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2679  0282  0020               	movlb	0	; select bank0
  2680  0283  0198               	clrf	24	;volatile
  2681                           
  2682                           ;tmr1.c: 72: T1GCON = 0x00;
  2683  0284  0199               	clrf	25	;volatile
  2684                           
  2685                           ;tmr1.c: 75: TMR1H = 0xEE;
  2686  0285  30EE               	movlw	238
  2687  0286  0097               	movwf	23	;volatile
  2688                           
  2689                           ;tmr1.c: 78: TMR1L = 0x00;
  2690  0287  0196               	clrf	22	;volatile
  2691                           
  2692                           ;tmr1.c: 81: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  2693  0288  0817               	movf	23,w	;volatile
  2694  0289  00D4               	movwf	_timer1ReloadVal+1	;volatile
  2695  028A  0816               	movf	22,w	;volatile
  2696  028B  00D3               	movwf	_timer1ReloadVal	;volatile
  2697                           
  2698                           ;tmr1.c: 84: PIR1bits.TMR1IF = 0;
  2699  028C  1011               	bcf	17,0	;volatile
  2700                           
  2701                           ;tmr1.c: 87: PIE1bits.TMR1IE = 1;
  2702  028D  0021               	movlb	1	; select bank1
  2703  028E  1411               	bsf	17,0	;volatile
  2704                           
  2705                           ;tmr1.c: 90: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  2706  028F  303D               	movlw	low _TMR1_DefaultInterruptHandler
  2707  0290  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  2708  0291  3003               	movlw	high _TMR1_DefaultInterruptHandler
  2709  0292  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  2710  0293  3183  2321  3182   	fcall	_TMR1_SetInterruptHandler
  2711                           
  2712                           ;tmr1.c: 93: TMR1_StartTimer();
  2713  0296  3183  2338         	fcall	_TMR1_StartTimer
  2714  0298  0008               	return
  2715  0299                     __end_of_TMR1_Initialize:	
  2716                           
  2717                           	psect	text9
  2718  0338                     __ptext9:	
  2719 ;; *************** function _TMR1_StartTimer *****************
  2720 ;; Defined at:
  2721 ;;		line 96 in file "mcc_generated_files/tmr1.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;		None
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;		None
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  1    wreg      void 
  2728 ;; Registers used:
  2729 ;;		None
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2735 ;;      Params:         0       0       0       0       0       0       0       0
  2736 ;;      Locals:         0       0       0       0       0       0       0       0
  2737 ;;      Temps:          0       0       0       0       0       0       0       0
  2738 ;;      Totals:         0       0       0       0       0       0       0       0
  2739 ;;Total ram usage:        0 bytes
  2740 ;; Hardware stack levels used:    1
  2741 ;; Hardware stack levels required when called:    4
  2742 ;; This function calls:
  2743 ;;		Nothing
  2744 ;; This function is called by:
  2745 ;;		_TMR1_Initialize
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           
  2750                           ;psect for function _TMR1_StartTimer
  2751  0338                     _TMR1_StartTimer:	
  2752                           
  2753                           ;tmr1.c: 99: T1CONbits.TMR1ON = 1;
  2754                           
  2755                           ;incstack = 0
  2756                           ; Regs used in _TMR1_StartTimer: []
  2757  0338  0020               	movlb	0	; select bank0
  2758  0339  1418               	bsf	24,0	;volatile
  2759  033A  0008               	return
  2760  033B                     __end_of_TMR1_StartTimer:	
  2761                           
  2762                           	psect	text10
  2763  0321                     __ptext10:	
  2764 ;; *************** function _TMR1_SetInterruptHandler *****************
  2765 ;; Defined at:
  2766 ;;		line 217 in file "mcc_generated_files/tmr1.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  2769 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;		None
  2772 ;; Return value:  Size  Location     Type
  2773 ;;                  1    wreg      void 
  2774 ;; Registers used:
  2775 ;;		wreg
  2776 ;; Tracked objects:
  2777 ;;		On entry : 0/0
  2778 ;;		On exit  : 0/0
  2779 ;;		Unchanged: 0/0
  2780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2781 ;;      Params:         2       0       0       0       0       0       0       0
  2782 ;;      Locals:         0       0       0       0       0       0       0       0
  2783 ;;      Temps:          0       0       0       0       0       0       0       0
  2784 ;;      Totals:         2       0       0       0       0       0       0       0
  2785 ;;Total ram usage:        2 bytes
  2786 ;; Hardware stack levels used:    1
  2787 ;; Hardware stack levels required when called:    4
  2788 ;; This function calls:
  2789 ;;		Nothing
  2790 ;; This function is called by:
  2791 ;;		_TMR1_Initialize
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           
  2796                           ;psect for function _TMR1_SetInterruptHandler
  2797  0321                     _TMR1_SetInterruptHandler:	
  2798                           
  2799                           ;tmr1.c: 218: TMR1_InterruptHandler = InterruptHandler;
  2800                           
  2801                           ;incstack = 0
  2802                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  2803  0321  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  2804  0322  0020               	movlb	0	; select bank0
  2805  0323  00D2               	movwf	_TMR1_InterruptHandler+1
  2806  0324  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  2807  0325  00D1               	movwf	_TMR1_InterruptHandler
  2808  0326  0008               	return
  2809  0327                     __end_of_TMR1_SetInterruptHandler:	
  2810                           
  2811                           	psect	text11
  2812  020A                     __ptext11:	
  2813 ;; *************** function _PIN_MANAGER_Initialize *****************
  2814 ;; Defined at:
  2815 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  2816 ;; Parameters:    Size  Location     Type
  2817 ;;		None
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;		None
  2820 ;; Return value:  Size  Location     Type
  2821 ;;                  1    wreg      void 
  2822 ;; Registers used:
  2823 ;;		wreg, status,2
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2829 ;;      Params:         0       0       0       0       0       0       0       0
  2830 ;;      Locals:         0       0       0       0       0       0       0       0
  2831 ;;      Temps:          0       0       0       0       0       0       0       0
  2832 ;;      Totals:         0       0       0       0       0       0       0       0
  2833 ;;Total ram usage:        0 bytes
  2834 ;; Hardware stack levels used:    1
  2835 ;; Hardware stack levels required when called:    4
  2836 ;; This function calls:
  2837 ;;		Nothing
  2838 ;; This function is called by:
  2839 ;;		_SYSTEM_Initialize
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           
  2844                           ;psect for function _PIN_MANAGER_Initialize
  2845  020A                     _PIN_MANAGER_Initialize:	
  2846                           
  2847                           ;pin_manager.c: 57: LATE = 0x00;
  2848                           
  2849                           ;incstack = 0
  2850                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2851  020A  0022               	movlb	2	; select bank2
  2852  020B  0190               	clrf	16	;volatile
  2853                           
  2854                           ;pin_manager.c: 58: LATD = 0x00;
  2855  020C  018F               	clrf	15	;volatile
  2856                           
  2857                           ;pin_manager.c: 59: LATA = 0x00;
  2858  020D  018C               	clrf	12	;volatile
  2859                           
  2860                           ;pin_manager.c: 60: LATB = 0x00;
  2861  020E  018D               	clrf	13	;volatile
  2862                           
  2863                           ;pin_manager.c: 61: LATC = 0x00;
  2864  020F  018E               	clrf	14	;volatile
  2865                           
  2866                           ;pin_manager.c: 66: TRISE = 0x0F;
  2867  0210  300F               	movlw	15
  2868  0211  0021               	movlb	1	; select bank1
  2869  0212  0090               	movwf	16	;volatile
  2870                           
  2871                           ;pin_manager.c: 67: TRISA = 0xFF;
  2872  0213  30FF               	movlw	255
  2873  0214  008C               	movwf	12	;volatile
  2874                           
  2875                           ;pin_manager.c: 68: TRISB = 0x00;
  2876  0215  018D               	clrf	13	;volatile
  2877                           
  2878                           ;pin_manager.c: 69: TRISC = 0xBF;
  2879  0216  30BF               	movlw	191
  2880  0217  008E               	movwf	14	;volatile
  2881                           
  2882                           ;pin_manager.c: 70: TRISD = 0xFF;
  2883  0218  30FF               	movlw	255
  2884  0219  008F               	movwf	15	;volatile
  2885                           
  2886                           ;pin_manager.c: 75: ANSELB = 0x0F;
  2887  021A  300F               	movlw	15
  2888  021B  0023               	movlb	3	; select bank3
  2889  021C  008D               	movwf	13	;volatile
  2890                           
  2891                           ;pin_manager.c: 76: ANSELD = 0xFF;
  2892  021D  30FF               	movlw	255
  2893  021E  008F               	movwf	15	;volatile
  2894                           
  2895                           ;pin_manager.c: 77: ANSELE = 0x07;
  2896  021F  3007               	movlw	7
  2897  0220  0090               	movwf	16	;volatile
  2898                           
  2899                           ;pin_manager.c: 78: ANSELA = 0x3F;
  2900  0221  303F               	movlw	63
  2901  0222  008C               	movwf	12	;volatile
  2902                           
  2903                           ;pin_manager.c: 83: WPUE = 0x08;
  2904  0223  3008               	movlw	8
  2905  0224  0024               	movlb	4	; select bank4
  2906  0225  0090               	movwf	16	;volatile
  2907                           
  2908                           ;pin_manager.c: 84: WPUB = 0xFF;
  2909  0226  30FF               	movlw	255
  2910  0227  008D               	movwf	13	;volatile
  2911                           
  2912                           ;pin_manager.c: 85: OPTION_REGbits.nWPUEN = 0;
  2913  0228  0021               	movlb	1	; select bank1
  2914  0229  1395               	bcf	21,7	;volatile
  2915                           
  2916                           ;pin_manager.c: 91: APFCON = 0x00;
  2917  022A  0022               	movlb	2	; select bank2
  2918  022B  019D               	clrf	29	;volatile
  2919  022C  0008               	return
  2920  022D                     __end_of_PIN_MANAGER_Initialize:	
  2921                           
  2922                           	psect	text12
  2923  032C                     __ptext12:	
  2924 ;; *************** function _OSCILLATOR_Initialize *****************
  2925 ;; Defined at:
  2926 ;;		line 81 in file "mcc_generated_files/mcc.c"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;		None
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;		None
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  1    wreg      void 
  2933 ;; Registers used:
  2934 ;;		wreg, status,2
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2940 ;;      Params:         0       0       0       0       0       0       0       0
  2941 ;;      Locals:         0       0       0       0       0       0       0       0
  2942 ;;      Temps:          0       0       0       0       0       0       0       0
  2943 ;;      Totals:         0       0       0       0       0       0       0       0
  2944 ;;Total ram usage:        0 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; Hardware stack levels required when called:    4
  2947 ;; This function calls:
  2948 ;;		Nothing
  2949 ;; This function is called by:
  2950 ;;		_SYSTEM_Initialize
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           
  2955                           ;psect for function _OSCILLATOR_Initialize
  2956  032C                     _OSCILLATOR_Initialize:	
  2957                           
  2958                           ;mcc.c: 84: OSCCON = 0x38;
  2959                           
  2960                           ;incstack = 0
  2961                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2962  032C  3038               	movlw	56
  2963  032D  0021               	movlb	1	; select bank1
  2964  032E  0099               	movwf	25	;volatile
  2965                           
  2966                           ;mcc.c: 86: OSCTUNE = 0x00;
  2967  032F  0198               	clrf	24	;volatile
  2968  0330  0008               	return
  2969  0331                     __end_of_OSCILLATOR_Initialize:	
  2970                           
  2971                           	psect	text13
  2972  0267                     __ptext13:	
  2973 ;; *************** function _EUSART_Initialize *****************
  2974 ;; Defined at:
  2975 ;;		line 76 in file "mcc_generated_files/eusart.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;		None
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;		None
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  1    wreg      void 
  2982 ;; Registers used:
  2983 ;;		wreg, status,2
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2989 ;;      Params:         0       0       0       0       0       0       0       0
  2990 ;;      Locals:         0       0       0       0       0       0       0       0
  2991 ;;      Temps:          1       0       0       0       0       0       0       0
  2992 ;;      Totals:         1       0       0       0       0       0       0       0
  2993 ;;Total ram usage:        1 bytes
  2994 ;; Hardware stack levels used:    1
  2995 ;; Hardware stack levels required when called:    4
  2996 ;; This function calls:
  2997 ;;		Nothing
  2998 ;; This function is called by:
  2999 ;;		_SYSTEM_Initialize
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           
  3004                           ;psect for function _EUSART_Initialize
  3005  0267                     _EUSART_Initialize:	
  3006                           
  3007                           ;eusart.c: 79: PIE1bits.RCIE = 0;
  3008                           
  3009                           ;incstack = 0
  3010                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  3011  0267  0021               	movlb	1	; select bank1
  3012  0268  1291               	bcf	17,5	;volatile
  3013                           
  3014                           ;eusart.c: 80: PIE1bits.TXIE = 0;
  3015  0269  1211               	bcf	17,4	;volatile
  3016                           
  3017                           ;eusart.c: 85: BAUDCON = 0x08;
  3018  026A  3008               	movlw	8
  3019  026B  0023               	movlb	3	; select bank3
  3020  026C  009F               	movwf	31	;volatile
  3021                           
  3022                           ;eusart.c: 88: RCSTA = 0x90;
  3023  026D  3090               	movlw	144
  3024  026E  009D               	movwf	29	;volatile
  3025                           
  3026                           ;eusart.c: 91: TXSTA = 0x24;
  3027  026F  3024               	movlw	36
  3028  0270  009E               	movwf	30	;volatile
  3029                           
  3030                           ;eusart.c: 94: SPBRGL = 0xDF;
  3031  0271  30DF               	movlw	223
  3032  0272  009B               	movwf	27	;volatile
  3033                           
  3034                           ;eusart.c: 97: SPBRGH = 0x01;
  3035  0273  3001               	movlw	1
  3036  0274  009C               	movwf	28	;volatile
  3037                           
  3038                           ;eusart.c: 101: eusartTxHead = 0;
  3039  0275  01FB               	clrf	_eusartTxHead	;volatile
  3040                           
  3041                           ;eusart.c: 102: eusartTxTail = 0;
  3042  0276  0020               	movlb	0	; select bank0
  3043  0277  01D0               	clrf	_eusartTxTail	;volatile
  3044                           
  3045                           ;eusart.c: 103: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  3046  0278  3008               	movlw	8
  3047  0279  00F2               	movwf	??_EUSART_Initialize
  3048  027A  0872               	movf	??_EUSART_Initialize,w
  3049  027B  00D5               	movwf	_eusartTxBufferRemaining	;volatile
  3050                           
  3051                           ;eusart.c: 105: eusartRxHead = 0;
  3052  027C  01CF               	clrf	_eusartRxHead	;volatile
  3053                           
  3054                           ;eusart.c: 106: eusartRxTail = 0;
  3055  027D  01CE               	clrf	_eusartRxTail	;volatile
  3056                           
  3057                           ;eusart.c: 107: eusartRxCount = 0;
  3058  027E  01CD               	clrf	_eusartRxCount	;volatile
  3059                           
  3060                           ;eusart.c: 110: PIE1bits.RCIE = 1;
  3061  027F  0021               	movlb	1	; select bank1
  3062  0280  1691               	bsf	17,5	;volatile
  3063  0281  0008               	return
  3064  0282                     __end_of_EUSART_Initialize:	
  3065                           
  3066                           	psect	intentry
  3067  0004                     __pintentry:	
  3068 ;; *************** function _INTERRUPT_InterruptManager *****************
  3069 ;; Defined at:
  3070 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;		None
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;		None
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  1    wreg      void 
  3077 ;; Registers used:
  3078 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3084 ;;      Params:         0       0       0       0       0       0       0       0
  3085 ;;      Locals:         0       0       0       0       0       0       0       0
  3086 ;;      Temps:          1       0       0       0       0       0       0       0
  3087 ;;      Totals:         1       0       0       0       0       0       0       0
  3088 ;;Total ram usage:        1 bytes
  3089 ;; Hardware stack levels used:    1
  3090 ;; Hardware stack levels required when called:    3
  3091 ;; This function calls:
  3092 ;;		_EUSART_Receive_ISR
  3093 ;;		_EUSART_Transmit_ISR
  3094 ;;		_TMR1_ISR
  3095 ;; This function is called by:
  3096 ;;		Interrupt level 1
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100  0004                     _INTERRUPT_InterruptManager:	
  3101                           
  3102                           ;incstack = 0
  3103  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3104                           
  3105                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  3106  0005  3180               	pagesel	$
  3107  0006  0020               	movlb	0	; select bank0
  3108  0007  087F               	movf	127,w
  3109  0008  00F1               	movwf	??_INTERRUPT_InterruptManager
  3110                           
  3111                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE1bits.TXIE == 1 && PIR1bits.TXIF
      +                           == 1)
  3112  0009  1F0B               	btfss	11,6	;volatile
  3113  000A  2815               	goto	i1l165
  3114  000B  0021               	movlb	1	; select bank1
  3115  000C  1E11               	btfss	17,4	;volatile
  3116  000D  2815               	goto	i1l165
  3117  000E  0020               	movlb	0	; select bank0
  3118  000F  1E11               	btfss	17,4	;volatile
  3119  0010  2815               	goto	i1l165
  3120                           
  3121                           ;interrupt_manager.c: 55: {
  3122                           ;interrupt_manager.c: 56: EUSART_Transmit_ISR();
  3123  0011  3182  224A  3180   	fcall	_EUSART_Transmit_ISR
  3124                           
  3125                           ;interrupt_manager.c: 57: }
  3126  0014  282B               	goto	i1l171
  3127  0015                     i1l165:	
  3128                           
  3129                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE1bits.RCIE == 1 && PIR1bits
      +                          .RCIF == 1)
  3130  0015  1F0B               	btfss	11,6	;volatile
  3131  0016  2821               	goto	i1l167
  3132  0017  0021               	movlb	1	; select bank1
  3133  0018  1E91               	btfss	17,5	;volatile
  3134  0019  2821               	goto	i1l167
  3135  001A  0020               	movlb	0	; select bank0
  3136  001B  1E91               	btfss	17,5	;volatile
  3137  001C  2821               	goto	i1l167
  3138                           
  3139                           ;interrupt_manager.c: 59: {
  3140                           ;interrupt_manager.c: 60: EUSART_Receive_ISR();
  3141  001D  3181  2182  3180   	fcall	_EUSART_Receive_ISR
  3142                           
  3143                           ;interrupt_manager.c: 61: }
  3144  0020  282B               	goto	i1l171
  3145  0021                     i1l167:	
  3146                           
  3147                           ;interrupt_manager.c: 62: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bi
      +                          ts.TMR1IF == 1)
  3148  0021  1F0B               	btfss	11,6	;volatile
  3149  0022  282B               	goto	i1l171
  3150  0023  0021               	movlb	1	; select bank1
  3151  0024  1C11               	btfss	17,0	;volatile
  3152  0025  282B               	goto	i1l171
  3153  0026  0020               	movlb	0	; select bank0
  3154  0027  1C11               	btfss	17,0	;volatile
  3155  0028  282B               	goto	i1l171
  3156                           
  3157                           ;interrupt_manager.c: 63: {
  3158                           ;interrupt_manager.c: 64: TMR1_ISR();
  3159  0029  3182  2299         	fcall	_TMR1_ISR
  3160  002B                     i1l171:	
  3161                           ;interrupt_manager.c: 66: else
  3162                           ;interrupt_manager.c: 67: {
  3163                           
  3164                           ;interrupt_manager.c: 65: }
  3165                           
  3166  002B  0871               	movf	??_INTERRUPT_InterruptManager,w
  3167  002C  0020               	movlb	0	; select bank0
  3168  002D  00FF               	movwf	127
  3169  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3170  002F  0009               	retfie
  3171  0030                     __end_of_INTERRUPT_InterruptManager:	
  3172                           
  3173                           	psect	text15
  3174  0299                     __ptext15:	
  3175 ;; *************** function _TMR1_ISR *****************
  3176 ;; Defined at:
  3177 ;;		line 161 in file "mcc_generated_files/tmr1.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;		None
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;		None
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  1    wreg      void 
  3184 ;; Registers used:
  3185 ;;		wreg, status,2, status,0, pclath, cstack
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3191 ;;      Params:         0       0       0       0       0       0       0       0
  3192 ;;      Locals:         0       0       0       0       0       0       0       0
  3193 ;;      Temps:          0       0       0       0       0       0       0       0
  3194 ;;      Totals:         0       0       0       0       0       0       0       0
  3195 ;;Total ram usage:        0 bytes
  3196 ;; Hardware stack levels used:    1
  3197 ;; Hardware stack levels required when called:    2
  3198 ;; This function calls:
  3199 ;;		_TMR1_CallBack
  3200 ;; This function is called by:
  3201 ;;		_INTERRUPT_InterruptManager
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           
  3206                           ;psect for function _TMR1_ISR
  3207  0299                     _TMR1_ISR:	
  3208                           
  3209                           ;tmr1.c: 163: static volatile unsigned int CountCallBack = 0;
  3210                           ;tmr1.c: 166: PIR1bits.TMR1IF = 0;
  3211                           
  3212                           ;incstack = 0
  3213                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  3214  0299  0020               	movlb	0	; select bank0
  3215  029A  1011               	bcf	17,0	;volatile
  3216                           
  3217                           ;tmr1.c: 168: TMR1H = (timer1ReloadVal >> 8);
  3218  029B  0854               	movf	_timer1ReloadVal+1,w	;volatile
  3219  029C  0097               	movwf	23	;volatile
  3220                           
  3221                           ;tmr1.c: 169: TMR1L = timer1ReloadVal;
  3222  029D  0853               	movf	_timer1ReloadVal,w	;volatile
  3223  029E  0096               	movwf	22	;volatile
  3224                           
  3225                           ;tmr1.c: 172: if (++CountCallBack >= 10)
  3226  029F  3001               	movlw	1
  3227  02A0  07B4               	addwf	TMR1_ISR@CountCallBack,f	;volatile
  3228  02A1  3000               	movlw	0
  3229  02A2  3DB5               	addwfc	TMR1_ISR@CountCallBack+1,f	;volatile
  3230  02A3  3000               	movlw	0
  3231  02A4  0235               	subwf	TMR1_ISR@CountCallBack+1,w	;volatile
  3232  02A5  300A               	movlw	10
  3233  02A6  1903               	skipnz
  3234  02A7  0234               	subwf	TMR1_ISR@CountCallBack,w	;volatile
  3235  02A8  1C03               	skipc
  3236  02A9  0008               	return
  3237                           
  3238                           ;tmr1.c: 173: {
  3239                           ;tmr1.c: 175: TMR1_CallBack();
  3240  02AA  3180  20F7         	fcall	_TMR1_CallBack
  3241                           
  3242                           ;tmr1.c: 178: CountCallBack = 0;
  3243  02AC  0020               	movlb	0	; select bank0
  3244  02AD  01B4               	clrf	TMR1_ISR@CountCallBack	;volatile
  3245  02AE  01B5               	clrf	TMR1_ISR@CountCallBack+1	;volatile
  3246  02AF  0008               	return
  3247  02B0                     __end_of_TMR1_ISR:	
  3248                           
  3249                           	psect	text16
  3250  00F7                     __ptext16:	
  3251 ;; *************** function _TMR1_CallBack *****************
  3252 ;; Defined at:
  3253 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;		None
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;		None
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  1    wreg      void 
  3260 ;; Registers used:
  3261 ;;		wreg, status,2, status,0, pclath, cstack
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3267 ;;      Params:         0       0       0       0       0       0       0       0
  3268 ;;      Locals:         0       0       0       0       0       0       0       0
  3269 ;;      Temps:          0       0       0       0       0       0       0       0
  3270 ;;      Totals:         0       0       0       0       0       0       0       0
  3271 ;;Total ram usage:        0 bytes
  3272 ;; Hardware stack levels used:    1
  3273 ;; Hardware stack levels required when called:    1
  3274 ;; This function calls:
  3275 ;;		Absolute function
  3276 ;;		_TMR1_DefaultInterruptHandler
  3277 ;; This function is called by:
  3278 ;;		_TMR1_ISR
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282                           
  3283                           ;psect for function _TMR1_CallBack
  3284  00F7                     _TMR1_CallBack:	
  3285                           
  3286                           ;tmr1.c: 184: flag_10_ms=1;
  3287                           
  3288                           ;incstack = 0
  3289                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  3290  00F7  3001               	movlw	1
  3291  00F8  0020               	movlb	0	; select bank0
  3292  00F9  00C6               	movwf	_flag_10_ms
  3293  00FA  3000               	movlw	0
  3294  00FB  00C7               	movwf	_flag_10_ms+1
  3295                           
  3296                           ;tmr1.c: 185: count_100_ms++;
  3297  00FC  3001               	movlw	1
  3298  00FD  07BC               	addwf	_count_100_ms,f
  3299  00FE  3000               	movlw	0
  3300  00FF  3DBD               	addwfc	_count_100_ms+1,f
  3301                           
  3302                           ;tmr1.c: 186: count_500_ms++;
  3303  0100  3001               	movlw	1
  3304  0101  07BA               	addwf	_count_500_ms,f
  3305  0102  3000               	movlw	0
  3306  0103  3DBB               	addwfc	_count_500_ms+1,f
  3307                           
  3308                           ;tmr1.c: 187: count_1000_ms++;
  3309  0104  3001               	movlw	1
  3310  0105  07B8               	addwf	_count_1000_ms,f
  3311  0106  3000               	movlw	0
  3312  0107  3DB9               	addwfc	_count_1000_ms+1,f
  3313                           
  3314                           ;tmr1.c: 188: count_4000_ms++;
  3315  0108  3001               	movlw	1
  3316  0109  07B6               	addwf	_count_4000_ms,f
  3317  010A  3000               	movlw	0
  3318  010B  3DB7               	addwfc	_count_4000_ms+1,f
  3319                           
  3320                           ;tmr1.c: 190: if (count_100_ms==10)
  3321  010C  300A               	movlw	10
  3322  010D  063C               	xorwf	_count_100_ms,w
  3323  010E  043D               	iorwf	_count_100_ms+1,w
  3324  010F  1D03               	btfss	3,2
  3325  0110  2917               	goto	i1l1401
  3326                           
  3327                           ;tmr1.c: 191: {
  3328                           ;tmr1.c: 192: flag_100_ms=1;
  3329  0111  3001               	movlw	1
  3330  0112  00C4               	movwf	_flag_100_ms
  3331  0113  3000               	movlw	0
  3332  0114  00C5               	movwf	_flag_100_ms+1
  3333                           
  3334                           ;tmr1.c: 193: count_100_ms=0;
  3335  0115  01BC               	clrf	_count_100_ms
  3336  0116  01BD               	clrf	_count_100_ms+1
  3337  0117                     i1l1401:	
  3338                           
  3339                           ;tmr1.c: 194: }
  3340                           ;tmr1.c: 195: if(count_500_ms==50)
  3341  0117  3032               	movlw	50
  3342  0118  063A               	xorwf	_count_500_ms,w
  3343  0119  043B               	iorwf	_count_500_ms+1,w
  3344  011A  1D03               	btfss	3,2
  3345  011B  2922               	goto	i1l1407
  3346                           
  3347                           ;tmr1.c: 196: {
  3348                           ;tmr1.c: 197: flag_500_ms=1;
  3349  011C  3001               	movlw	1
  3350  011D  00C2               	movwf	_flag_500_ms
  3351  011E  3000               	movlw	0
  3352  011F  00C3               	movwf	_flag_500_ms+1
  3353                           
  3354                           ;tmr1.c: 198: count_500_ms=0;
  3355  0120  01BA               	clrf	_count_500_ms
  3356  0121  01BB               	clrf	_count_500_ms+1
  3357  0122                     i1l1407:	
  3358                           
  3359                           ;tmr1.c: 199: }
  3360                           ;tmr1.c: 200: if (count_1000_ms==100)
  3361  0122  3064               	movlw	100
  3362  0123  0638               	xorwf	_count_1000_ms,w
  3363  0124  0439               	iorwf	_count_1000_ms+1,w
  3364  0125  1D03               	btfss	3,2
  3365  0126  292D               	goto	i1l1413
  3366                           
  3367                           ;tmr1.c: 201: {
  3368                           ;tmr1.c: 202: flag_1000_ms=1;
  3369  0127  3001               	movlw	1
  3370  0128  00C0               	movwf	_flag_1000_ms
  3371  0129  3000               	movlw	0
  3372  012A  00C1               	movwf	_flag_1000_ms+1
  3373                           
  3374                           ;tmr1.c: 203: count_1000_ms=0;
  3375  012B  01B8               	clrf	_count_1000_ms
  3376  012C  01B9               	clrf	_count_1000_ms+1
  3377  012D                     i1l1413:	
  3378                           
  3379                           ;tmr1.c: 204: }
  3380                           ;tmr1.c: 205: if (count_4000_ms==400)
  3381  012D  3090               	movlw	144
  3382  012E  0636               	xorwf	_count_4000_ms,w
  3383  012F  1D03               	skipz
  3384  0130  293A               	goto	i1l1419
  3385  0131  0337               	decf	_count_4000_ms+1,w
  3386  0132  1D03               	btfss	3,2
  3387  0133  293A               	goto	i1l1419
  3388                           
  3389                           ;tmr1.c: 206: {
  3390                           ;tmr1.c: 207: flag_4000_ms=1;
  3391  0134  3001               	movlw	1
  3392  0135  00BE               	movwf	_flag_4000_ms
  3393  0136  3000               	movlw	0
  3394  0137  00BF               	movwf	_flag_4000_ms+1
  3395                           
  3396                           ;tmr1.c: 208: count_4000_ms=0;
  3397  0138  01B6               	clrf	_count_4000_ms
  3398  0139  01B7               	clrf	_count_4000_ms+1
  3399  013A                     i1l1419:	
  3400                           
  3401                           ;tmr1.c: 209: }
  3402                           ;tmr1.c: 210: if(TMR1_InterruptHandler)
  3403  013A  0851               	movf	_TMR1_InterruptHandler,w
  3404  013B  0452               	iorwf	_TMR1_InterruptHandler+1,w
  3405  013C  1903               	btfsc	3,2
  3406  013D  0008               	return
  3407                           
  3408                           ;tmr1.c: 211: {
  3409                           ;tmr1.c: 213: TMR1_InterruptHandler();
  3410  013E  0852               	movf	_TMR1_InterruptHandler+1,w
  3411  013F  008A               	movwf	10
  3412  0140  0851               	movf	_TMR1_InterruptHandler,w
  3413  0141  000A               	callw
  3414  0142  3180               	pagesel	$
  3415  0143  0008               	return
  3416  0144                     __end_of_TMR1_CallBack:	
  3417                           
  3418                           	psect	text17
  3419  033D                     __ptext17:	
  3420 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  3421 ;; Defined at:
  3422 ;;		line 221 in file "mcc_generated_files/tmr1.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;		None
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;		None
  3427 ;; Return value:  Size  Location     Type
  3428 ;;                  1    wreg      void 
  3429 ;; Registers used:
  3430 ;;		None
  3431 ;; Tracked objects:
  3432 ;;		On entry : 0/0
  3433 ;;		On exit  : 0/0
  3434 ;;		Unchanged: 0/0
  3435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3436 ;;      Params:         0       0       0       0       0       0       0       0
  3437 ;;      Locals:         0       0       0       0       0       0       0       0
  3438 ;;      Temps:          0       0       0       0       0       0       0       0
  3439 ;;      Totals:         0       0       0       0       0       0       0       0
  3440 ;;Total ram usage:        0 bytes
  3441 ;; Hardware stack levels used:    1
  3442 ;; This function calls:
  3443 ;;		Nothing
  3444 ;; This function is called by:
  3445 ;;		_TMR1_Initialize
  3446 ;;		_TMR1_CallBack
  3447 ;; This function uses a non-reentrant model
  3448 ;;
  3449                           
  3450                           
  3451                           ;psect for function _TMR1_DefaultInterruptHandler
  3452  033D                     _TMR1_DefaultInterruptHandler:	
  3453                           
  3454                           ;incstack = 0
  3455                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  3456  033D  0008               	return
  3457  033E                     __end_of_TMR1_DefaultInterruptHandler:	
  3458                           
  3459                           	psect	text18
  3460  024A                     __ptext18:	
  3461 ;; *************** function _EUSART_Transmit_ISR *****************
  3462 ;; Defined at:
  3463 ;;		line 166 in file "mcc_generated_files/eusart.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;		None
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;		None
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  1    wreg      void 
  3470 ;; Registers used:
  3471 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3477 ;;      Params:         0       0       0       0       0       0       0       0
  3478 ;;      Locals:         0       0       0       0       0       0       0       0
  3479 ;;      Temps:          1       0       0       0       0       0       0       0
  3480 ;;      Totals:         1       0       0       0       0       0       0       0
  3481 ;;Total ram usage:        1 bytes
  3482 ;; Hardware stack levels used:    1
  3483 ;; This function calls:
  3484 ;;		Nothing
  3485 ;; This function is called by:
  3486 ;;		_INTERRUPT_InterruptManager
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           
  3491                           ;psect for function _EUSART_Transmit_ISR
  3492  024A                     _EUSART_Transmit_ISR:	
  3493                           
  3494                           ;eusart.c: 170: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  3495                           
  3496                           ;incstack = 0
  3497                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  3498  024A  3008               	movlw	8
  3499  024B  0020               	movlb	0	; select bank0
  3500  024C  0255               	subwf	_eusartTxBufferRemaining,w	;volatile
  3501  024D  1803               	skipnc
  3502  024E  2A64               	goto	i1l137
  3503                           
  3504                           ;eusart.c: 171: {
  3505                           ;eusart.c: 172: TXREG = eusartTxBuffer[eusartTxTail++];
  3506  024F  0850               	movf	_eusartTxTail,w
  3507  0250  3E28               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  3508  0251  0086               	movwf	6
  3509  0252  0187               	clrf	7
  3510  0253  0801               	movf	1,w
  3511  0254  0023               	movlb	3	; select bank3
  3512  0255  009A               	movwf	26	;volatile
  3513  0256  3001               	movlw	1
  3514  0257  00F0               	movwf	??_EUSART_Transmit_ISR
  3515  0258  0870               	movf	??_EUSART_Transmit_ISR,w
  3516  0259  0020               	movlb	0	; select bank0
  3517  025A  07D0               	addwf	_eusartTxTail,f	;volatile
  3518                           
  3519                           ;eusart.c: 173: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  3520  025B  3008               	movlw	8
  3521  025C  0250               	subwf	_eusartTxTail,w	;volatile
  3522  025D  1803               	btfsc	3,0
  3523                           
  3524                           ;eusart.c: 174: {
  3525                           ;eusart.c: 175: eusartTxTail = 0;
  3526  025E  01D0               	clrf	_eusartTxTail	;volatile
  3527                           
  3528                           ;eusart.c: 176: }
  3529                           ;eusart.c: 177: eusartTxBufferRemaining++;
  3530  025F  3001               	movlw	1
  3531  0260  00F0               	movwf	??_EUSART_Transmit_ISR
  3532  0261  0870               	movf	??_EUSART_Transmit_ISR,w
  3533  0262  07D5               	addwf	_eusartTxBufferRemaining,f	;volatile
  3534                           
  3535                           ;eusart.c: 178: }
  3536  0263  0008               	return
  3537  0264                     i1l137:	
  3538                           
  3539                           ;eusart.c: 179: else
  3540                           ;eusart.c: 180: {
  3541                           ;eusart.c: 181: PIE1bits.TXIE = 0;
  3542  0264  0021               	movlb	1	; select bank1
  3543  0265  1211               	bcf	17,4	;volatile
  3544  0266  0008               	return
  3545  0267                     __end_of_EUSART_Transmit_ISR:	
  3546                           
  3547                           	psect	text19
  3548  0182                     __ptext19:	
  3549 ;; *************** function _EUSART_Receive_ISR *****************
  3550 ;; Defined at:
  3551 ;;		line 185 in file "mcc_generated_files/eusart.c"
  3552 ;; Parameters:    Size  Location     Type
  3553 ;;		None
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;		None
  3556 ;; Return value:  Size  Location     Type
  3557 ;;                  1    wreg      void 
  3558 ;; Registers used:
  3559 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3560 ;; Tracked objects:
  3561 ;;		On entry : 0/0
  3562 ;;		On exit  : 0/0
  3563 ;;		Unchanged: 0/0
  3564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3565 ;;      Params:         0       0       0       0       0       0       0       0
  3566 ;;      Locals:         0       0       0       0       0       0       0       0
  3567 ;;      Temps:          1       0       0       0       0       0       0       0
  3568 ;;      Totals:         1       0       0       0       0       0       0       0
  3569 ;;Total ram usage:        1 bytes
  3570 ;; Hardware stack levels used:    1
  3571 ;; This function calls:
  3572 ;;		Nothing
  3573 ;; This function is called by:
  3574 ;;		_INTERRUPT_InterruptManager
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           
  3578                           
  3579                           ;psect for function _EUSART_Receive_ISR
  3580  0182                     _EUSART_Receive_ISR:	
  3581                           
  3582                           ;eusart.c: 188: if(1 == RCSTAbits.OERR)
  3583                           
  3584                           ;incstack = 0
  3585                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  3586  0182  0023               	movlb	3	; select bank3
  3587  0183  1C9D               	btfss	29,1	;volatile
  3588  0184  2987               	goto	i1l1469
  3589                           
  3590                           ;eusart.c: 189: {
  3591                           ;eusart.c: 192: RCSTAbits.CREN = 0;
  3592  0185  121D               	bcf	29,4	;volatile
  3593                           
  3594                           ;eusart.c: 193: RCSTAbits.CREN = 1;
  3595  0186  161D               	bsf	29,4	;volatile
  3596  0187                     i1l1469:	
  3597                           
  3598                           ;eusart.c: 194: }
  3599                           ;eusart.c: 197: eusartRxBuffer[eusartRxHead++] = RCREG;
  3600  0187  0819               	movf	25,w	;volatile
  3601  0188  00F0               	movwf	??_EUSART_Receive_ISR
  3602  0189  0020               	movlb	0	; select bank0
  3603  018A  084F               	movf	_eusartRxHead,w
  3604  018B  3E20               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  3605  018C  0086               	movwf	6
  3606  018D  0187               	clrf	7
  3607  018E  0870               	movf	??_EUSART_Receive_ISR,w
  3608  018F  0081               	movwf	1
  3609  0190  3001               	movlw	1
  3610  0191  00F0               	movwf	??_EUSART_Receive_ISR
  3611  0192  0870               	movf	??_EUSART_Receive_ISR,w
  3612  0193  07CF               	addwf	_eusartRxHead,f	;volatile
  3613                           
  3614                           ;eusart.c: 198: rcreg=RCREG;
  3615  0194  0023               	movlb	3	; select bank3
  3616  0195  0819               	movf	25,w	;volatile
  3617  0196  00F0               	movwf	??_EUSART_Receive_ISR
  3618  0197  0870               	movf	??_EUSART_Receive_ISR,w
  3619  0198  0020               	movlb	0	; select bank0
  3620  0199  00CC               	movwf	_rcreg	;volatile
  3621                           
  3622                           ;eusart.c: 200: if(rcreg=='X')
  3623  019A  3058               	movlw	88
  3624  019B  064C               	xorwf	_rcreg,w	;volatile
  3625  019C  1D03               	btfss	3,2
  3626  019D  29A7               	goto	i1l1481
  3627                           
  3628                           ;eusart.c: 201: {
  3629                           ;eusart.c: 202: LATB=0xAA;
  3630  019E  30AA               	movlw	170
  3631  019F  0022               	movlb	2	; select bank2
  3632  01A0  008D               	movwf	13	;volatile
  3633                           
  3634                           ;eusart.c: 203: flag_G=1;
  3635  01A1  3001               	movlw	1
  3636  01A2  0020               	movlb	0	; select bank0
  3637  01A3  00C8               	movwf	_flag_G
  3638  01A4  3000               	movlw	0
  3639  01A5  00C9               	movwf	_flag_G+1
  3640  01A6  29AF               	goto	i1l1485
  3641  01A7                     i1l1481:	
  3642                           ;eusart.c: 205: }
  3643                           
  3644                           ;eusart.c: 204: rcreg=0;
  3645                           
  3646                           
  3647                           ;eusart.c: 206: else if(rcreg=='Y')
  3648  01A7  3059               	movlw	89
  3649  01A8  064C               	xorwf	_rcreg,w	;volatile
  3650  01A9  1D03               	btfss	3,2
  3651  01AA  29B0               	goto	i1l1487
  3652                           
  3653                           ;eusart.c: 207: {
  3654                           ;eusart.c: 208: flag_N=1;
  3655  01AB  3001               	movlw	1
  3656  01AC  00CA               	movwf	_flag_N
  3657  01AD  3000               	movlw	0
  3658  01AE  00CB               	movwf	_flag_N+1
  3659  01AF                     i1l1485:	
  3660                           
  3661                           ;eusart.c: 209: rcreg=0;
  3662  01AF  01CC               	clrf	_rcreg	;volatile
  3663  01B0                     i1l1487:	
  3664                           
  3665                           ;eusart.c: 210: }
  3666                           ;eusart.c: 215: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  3667  01B0  3008               	movlw	8
  3668  01B1  024F               	subwf	_eusartRxHead,w	;volatile
  3669  01B2  1803               	btfsc	3,0
  3670                           
  3671                           ;eusart.c: 216: {
  3672                           ;eusart.c: 217: eusartRxHead = 0;
  3673  01B3  01CF               	clrf	_eusartRxHead	;volatile
  3674                           
  3675                           ;eusart.c: 218: }
  3676                           ;eusart.c: 219: eusartRxCount++;
  3677  01B4  3001               	movlw	1
  3678  01B5  00F0               	movwf	??_EUSART_Receive_ISR
  3679  01B6  0870               	movf	??_EUSART_Receive_ISR,w
  3680  01B7  07CD               	addwf	_eusartRxCount,f	;volatile
  3681  01B8  0008               	return
  3682  01B9                     __end_of_EUSART_Receive_ISR:	
  3683  007E                     btemp	set	126	;btemp
  3684  007E                     int$flags	set	126
  3685  007E                     wtemp0	set	126


Data Sizes:
    Strings     95
    Constant    0
    Data        2
    BSS         51
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      5      61
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_8(CODE[14]), STR_7(CODE[18]), STR_6(CODE[10]), STR_5(CODE[15]), 
		 -> STR_4(CODE[3]), STR_3(CODE[14]), STR_2(CODE[21]), STR_1(CODE[14]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _int_gsm->_printf
    _printf->_putch
    _putch->_EUSART_Write
    _TMR1_Initialize->_TMR1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR

Critical Paths under _main in BANK0

    _int_gsm->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     852
                                              2 BANK0      3     3      0
                  _SYSTEM_Initialize
                            _int_gsm
                           _turn_egs
 ---------------------------------------------------------------------------------
 (1) _turn_egs                                             1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _int_gsm                                              0     0      0     774
                             _printf
                              _putch
 ---------------------------------------------------------------------------------
 (2) _printf                                              19    17      2     681
                                              5 COMMON     5     3      2
                                              0 BANK0      2     2      0
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      93
                                              4 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      62
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      75
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0      75
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      75
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0       0
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
     _WDT_Initialize
   _int_gsm
     _printf
       _putch
         _EUSART_Write
     _putch
       _EUSART_Write
   _turn_egs

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      49       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      5      3D       6       76.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      49      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Tue Oct 17 22:37:47 2017

                             __CFG_CP$OFF 0000                               __CFG_LVP$ON 0000  
                                     l125 01F3                                       l308 00D5  
                                     l297 0092                              __CFG_CPD$OFF 0000  
                         _timer1ReloadVal 0053                              __CFG_BORV$LO 0000  
                                     wreg 0009                              __CFG_IESO$ON 0000  
                            __CFG_FOSC$HS 0000                             _count_1000_ms 0038  
                           _count_4000_ms 0036                                      l1603 00C1  
                                    l1605 00C3                                      l1525 0066  
                                    l1621 00D9                                      l1633 00F5  
                                    l1617 00D1                                      l1561 008E  
                                    l1537 0072                                      l1547 007E  
                                    l1821 0162                                      l1813 0159  
                                    l1805 0151                                      l1629 00ED  
                                    l1581 00A9                                      l1549 0080  
                                    l1565 0096                                      l1593 00B5  
                                    l1771 01E8                                      l1829 016B  
                                    l1837 017F                                      l1785 0207  
                                    l1793 0232                                      l1893 01D7  
                                    STR_1 02F5                                      STR_2 02B0  
                                    STR_3 0303                                      STR_4 0335  
                                    STR_5 02D7                                      STR_6 0311  
                                    STR_7 02C5                                      STR_8 02F5  
                                    _LATA 010C                                      _LATB 010D  
                                    _LATC 010E                                      _LATD 010F  
                                    u1337 01CB                                      _LATE 0110  
                                    _WPUB 020D                                      _WPUE 0210  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
                                    _main 01B9                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                           __CFG_BOREN$ON 0000                                      start 0030  
              ??_TMR1_SetInterruptHandler 0074                             __CFG_MCLRE$ON 0000  
                         turn_egs@step_nr 005B                             ?_EUSART_Write 0070  
          __size_of_OSCILLATOR_Initialize 0005             __end_of_OSCILLATOR_Initialize 0331  
                                   ?_main 0070                             __CFG_WDTE$OFF 0000  
                         _TMR1_StartTimer 0338                                     _T1CON 0018  
                                   i1l137 0264                                     i1l171 002B  
                                   i1l165 0015                                     i1l167 0021  
                                   _RCREG 0199                                     _RCSTA 019D  
                                   _TMR1H 0017                                     _TMR1L 0016  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E                                     _TRISD 008F  
                                   _TRISE 0090                                     _TXREG 019A  
                                   _TXSTA 019E                          __end_of_TMR1_ISR 02B0  
                          _WDT_Initialize 0331                                     _rcreg 004C  
                         __end_of_int_gsm 0182                                     _putch 0327  
                                   main@x 005A                   __end_of_TMR1_Initialize 0299  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                           __initialization 0032  
                            __end_of_main 01E7                            ??_EUSART_Write 0072  
             ?_INTERRUPT_InterruptManager 0070                                    ??_main 0058  
                          __CFG_PLLEN$OFF 0000                    __end_of_WDT_Initialize 0335  
                                  _APFCON 011D                                    _ANSELA 018C  
                                  ?_putch 0070                                    _ANSELB 018D  
                                  _ANSELD 018F                                    _ANSELE 0190  
                                  _T1GCON 0019                                    i1l1401 0117  
                                  i1l1413 012D                                    i1l1407 0122  
                                  i1l1419 013A                                    i1l1481 01A7  
                                  i1l1485 01AF                                    i1l1469 0187  
                                  i1l1487 01B0                                    _OSCCON 0099  
                                  _SPBRGH 019C                                    _SPBRGL 019B  
                                  _WDTCON 0097                            __CFG_PWRTE$OFF 0000  
    __end_of_TMR1_DefaultInterruptHandler 033E     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 033D                   __end_of_TMR1_StartTimer 033B  
                          __CFG_STVREN$ON 0000                                    _flag_G 0048  
                                  _flag_N 004A                       _EUSART_Transmit_ISR 024A  
                                  _printf 022D                                 ??_int_gsm 007A  
                         ?_WDT_Initialize 0070  TMR1_SetInterruptHandler@InterruptHandler 0072  
                    ?_EUSART_Transmit_ISR 0070                     __end_of_TMR1_CallBack 0144  
                        __end_of_turn_egs 00F7                          ?_TMR1_Initialize 0070  
                       _SYSTEM_Initialize 02E6                   __end_of__initialization 0043  
                      ?_SYSTEM_Initialize 0070                            __pcstackCOMMON 0070  
                            __pidataBANK0 033B                       ??_SYSTEM_Initialize 0074  
                               ?_TMR1_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                           __end_of_putch 032C                              _flag_1000_ms 0040  
                            _flag_4000_ms 003E                            _OPTION_REGbits 0095  
               __end_of_SYSTEM_Initialize 02F5                     ??_EUSART_Transmit_ISR 0070  
                                 ??_putch 0074                                __pbssBANK0 0020  
                    __end_of_EUSART_Write 020A                           __CFG_VCAPEN$OFF 0000  
             __size_of_EUSART_Receive_ISR 0037                                _flag_10_ms 0046  
                              __pmaintext 01B9                          ?_TMR1_StartTimer 0070  
                              ??_TMR1_ISR 0070                                __pintentry 0004  
                                 _BAUDCON 019F                                   ?_printf 0075  
                           _eusartRxCount 004D                                   _OSCTUNE 0098  
                                 __ptext1 0047                                   __ptext2 0144  
                                 __ptext3 022D                                   __ptext4 0327  
                                 __ptext5 01E7                                   __ptext6 02E6  
                                 __ptext7 0331                                   __ptext8 0282  
                                 __ptext9 0338                                 ?_turn_egs 0070  
                         __size_of_printf 001D            ??_TMR1_DefaultInterruptHandler 0070  
                               _T1CONbits 0018                     _OSCILLATOR_Initialize 032C  
                                 _int_gsm 0144         __size_of_TMR1_SetInterruptHandler 0006  
                ??_PIN_MANAGER_Initialize 0072                 ?_TMR1_SetInterruptHandler 0072  
              __size_of_SYSTEM_Initialize 000F                                   clrloop0 031C  
                    end_of_initialization 0043                         _EUSART_Initialize 0267  
                      ?_EUSART_Initialize 0070                                 _RCSTAbits 019D  
                                 printf@c 0057                                   printf@f 0075  
                     ??_EUSART_Initialize 0072                          ??_WDT_Initialize 0072  
                              ??_turn_egs 0072                                 _TRISCbits 008E  
                   __size_of_EUSART_Write 0023                 __end_of_EUSART_Initialize 0282  
                            _count_100_ms 003C                              _count_500_ms 003A  
                      turn_egs@step_index 007A                              _EUSART_Write 01E7  
                       __size_of_TMR1_ISR 0017                    ?_OSCILLATOR_Initialize 0070  
                          __end_of_printf 024A                       start_initialization 0032  
         __size_of_PIN_MANAGER_Initialize 0023                               putch@txData 0074  
                       int_gsm@sms1_index 0030                  __size_of_TMR1_Initialize 0017  
                             __pdataBANK0 005B                    __size_of_TMR1_CallBack 004D  
                                ??_printf 0077               __end_of_EUSART_Transmit_ISR 0267  
                   TMR1_ISR@CountCallBack 0034                               __pbssCOMMON 007A  
                               ___latbits 0002                             __pcstackBANK0 0056  
                             _flag_100_ms 0044                               _flag_500_ms 0042  
              __end_of_EUSART_Receive_ISR 01B9                __size_of_EUSART_Initialize 001B  
                               __pnvBANK0 0051                    _PIN_MANAGER_Initialize 020A  
        __end_of_TMR1_SetInterruptHandler 0327                              _eusartRxHead 004F  
                            _eusartTxHead 007B                              _eusartRxTail 004E  
                            _eusartTxTail 0050              ??_INTERRUPT_InterruptManager 0071  
                 _eusartTxBufferRemaining 0055                  __size_of_TMR1_StartTimer 0003  
                                ?_int_gsm 0070                         __size_of_turn_egs 00B0  
                          __size_of_putch 0005                            _eusartRxBuffer 0020  
                           _TMR1_CallBack 00F7                            _eusartTxBuffer 0028  
                                _LATCbits 010E                                 clear_ram0 031B  
                                _PIE1bits 0091       __size_of_INTERRUPT_InterruptManager 002C  
                                _PIR1bits 0011                                  _TMR1_ISR 0299  
                       ??_TMR1_Initialize 0074                            ?_TMR1_CallBack 0070  
                           _flag_directie 0032                   ??_OSCILLATOR_Initialize 0072  
                _TMR1_SetInterruptHandler 0321                     _TMR1_InterruptHandler 0051  
                        __size_of_int_gsm 003E                                  __ptext10 0321  
                                __ptext11 020A                                  __ptext12 032C  
                                __ptext13 0267                                _T1GCONbits 0019  
                                __ptext15 0299                                  __ptext16 00F7  
                                __ptext17 033D                                  __ptext18 024A  
                                __ptext19 0182                         ??_TMR1_StartTimer 0072  
                           __size_of_main 002E                                  int$flags 007E  
      __end_of_INTERRUPT_InterruptManager 0030                _INTERRUPT_InterruptManager 0004  
                                _turn_egs 0047                                _INTCONbits 000B  
                         ??_TMR1_CallBack 0070                   __size_of_WDT_Initialize 0004  
                                intlevel1 0000                   ?_PIN_MANAGER_Initialize 0070  
                       __CFG_CLKOUTEN$OFF 0000                                  printf@ap 0056  
                      _EUSART_Receive_ISR 0182                             __pstringtext1 02B0  
                           __pstringtext2 02C5                             __pstringtext3 02D7  
                           __pstringtext4 02F5                             __pstringtext5 0303  
                           __pstringtext6 0311                             __pstringtext7 0335  
                           __pstringtext8 0000                       ?_EUSART_Receive_ISR 0070  
                      EUSART_Write@txData 0073              __size_of_EUSART_Transmit_ISR 001D  
          __end_of_PIN_MANAGER_Initialize 022D                      ??_EUSART_Receive_ISR 0070  
                         _TMR1_Initialize 0282  
