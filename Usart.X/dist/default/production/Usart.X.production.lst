

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Thu Oct 05 14:48:02 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F1937
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 1.42
    36                           ; Generated 13/04/2017 GMT
    37                           ; 
    38                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F1937 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000F                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0110                     	;# 
   124  0111                     	;# 
   125  0112                     	;# 
   126  0113                     	;# 
   127  0114                     	;# 
   128  0115                     	;# 
   129  0116                     	;# 
   130  0117                     	;# 
   131  0118                     	;# 
   132  0119                     	;# 
   133  011A                     	;# 
   134  011B                     	;# 
   135  011D                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  018F                     	;# 
   139  0190                     	;# 
   140  0191                     	;# 
   141  0191                     	;# 
   142  0192                     	;# 
   143  0193                     	;# 
   144  0193                     	;# 
   145  0193                     	;# 
   146  0194                     	;# 
   147  0195                     	;# 
   148  0196                     	;# 
   149  0199                     	;# 
   150  019A                     	;# 
   151  019B                     	;# 
   152  019B                     	;# 
   153  019B                     	;# 
   154  019B                     	;# 
   155  019C                     	;# 
   156  019C                     	;# 
   157  019D                     	;# 
   158  019E                     	;# 
   159  019F                     	;# 
   160  020D                     	;# 
   161  0210                     	;# 
   162  0211                     	;# 
   163  0212                     	;# 
   164  0213                     	;# 
   165  0214                     	;# 
   166  0215                     	;# 
   167  0215                     	;# 
   168  0216                     	;# 
   169  0217                     	;# 
   170  0291                     	;# 
   171  0291                     	;# 
   172  0292                     	;# 
   173  0293                     	;# 
   174  0294                     	;# 
   175  0295                     	;# 
   176  0295                     	;# 
   177  0296                     	;# 
   178  0298                     	;# 
   179  0298                     	;# 
   180  0299                     	;# 
   181  029A                     	;# 
   182  029B                     	;# 
   183  029C                     	;# 
   184  029C                     	;# 
   185  029D                     	;# 
   186  029E                     	;# 
   187  029F                     	;# 
   188  0311                     	;# 
   189  0311                     	;# 
   190  0312                     	;# 
   191  0313                     	;# 
   192  0314                     	;# 
   193  0315                     	;# 
   194  0315                     	;# 
   195  0316                     	;# 
   196  0318                     	;# 
   197  0318                     	;# 
   198  0319                     	;# 
   199  031A                     	;# 
   200  031C                     	;# 
   201  031C                     	;# 
   202  031D                     	;# 
   203  031E                     	;# 
   204  0394                     	;# 
   205  0395                     	;# 
   206  0396                     	;# 
   207  0415                     	;# 
   208  0416                     	;# 
   209  0417                     	;# 
   210  041C                     	;# 
   211  041D                     	;# 
   212  041E                     	;# 
   213  0791                     	;# 
   214  0792                     	;# 
   215  0793                     	;# 
   216  0794                     	;# 
   217  0795                     	;# 
   218  0798                     	;# 
   219  0799                     	;# 
   220  079A                     	;# 
   221  07A0                     	;# 
   222  07A1                     	;# 
   223  07A2                     	;# 
   224  07A3                     	;# 
   225  07A4                     	;# 
   226  07A5                     	;# 
   227  07A6                     	;# 
   228  07A7                     	;# 
   229  07A8                     	;# 
   230  07A9                     	;# 
   231  07AA                     	;# 
   232  07AB                     	;# 
   233  0FE4                     	;# 
   234  0FE5                     	;# 
   235  0FE6                     	;# 
   236  0FE7                     	;# 
   237  0FE8                     	;# 
   238  0FE9                     	;# 
   239  0FEA                     	;# 
   240  0FEB                     	;# 
   241  0FED                     	;# 
   242  0FEE                     	;# 
   243  0FEF                     	;# 
   244  0000                     	;# 
   245  0001                     	;# 
   246  0002                     	;# 
   247  0003                     	;# 
   248  0004                     	;# 
   249  0005                     	;# 
   250  0006                     	;# 
   251  0007                     	;# 
   252  0008                     	;# 
   253  0009                     	;# 
   254  000A                     	;# 
   255  000B                     	;# 
   256  000C                     	;# 
   257  000D                     	;# 
   258  000E                     	;# 
   259  000F                     	;# 
   260  0010                     	;# 
   261  0011                     	;# 
   262  0012                     	;# 
   263  0013                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0016                     	;# 
   267  0017                     	;# 
   268  0018                     	;# 
   269  0019                     	;# 
   270  001A                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001E                     	;# 
   274  001F                     	;# 
   275  008C                     	;# 
   276  008D                     	;# 
   277  008E                     	;# 
   278  008F                     	;# 
   279  0090                     	;# 
   280  0091                     	;# 
   281  0092                     	;# 
   282  0093                     	;# 
   283  0095                     	;# 
   284  0096                     	;# 
   285  0097                     	;# 
   286  0098                     	;# 
   287  0099                     	;# 
   288  009A                     	;# 
   289  009B                     	;# 
   290  009B                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  010C                     	;# 
   295  010D                     	;# 
   296  010E                     	;# 
   297  010F                     	;# 
   298  0110                     	;# 
   299  0111                     	;# 
   300  0112                     	;# 
   301  0113                     	;# 
   302  0114                     	;# 
   303  0115                     	;# 
   304  0116                     	;# 
   305  0117                     	;# 
   306  0118                     	;# 
   307  0119                     	;# 
   308  011A                     	;# 
   309  011B                     	;# 
   310  011D                     	;# 
   311  018C                     	;# 
   312  018D                     	;# 
   313  018F                     	;# 
   314  0190                     	;# 
   315  0191                     	;# 
   316  0191                     	;# 
   317  0192                     	;# 
   318  0193                     	;# 
   319  0193                     	;# 
   320  0193                     	;# 
   321  0194                     	;# 
   322  0195                     	;# 
   323  0196                     	;# 
   324  0199                     	;# 
   325  019A                     	;# 
   326  019B                     	;# 
   327  019B                     	;# 
   328  019B                     	;# 
   329  019B                     	;# 
   330  019C                     	;# 
   331  019C                     	;# 
   332  019D                     	;# 
   333  019E                     	;# 
   334  019F                     	;# 
   335  020D                     	;# 
   336  0210                     	;# 
   337  0211                     	;# 
   338  0212                     	;# 
   339  0213                     	;# 
   340  0214                     	;# 
   341  0215                     	;# 
   342  0215                     	;# 
   343  0216                     	;# 
   344  0217                     	;# 
   345  0291                     	;# 
   346  0291                     	;# 
   347  0292                     	;# 
   348  0293                     	;# 
   349  0294                     	;# 
   350  0295                     	;# 
   351  0295                     	;# 
   352  0296                     	;# 
   353  0298                     	;# 
   354  0298                     	;# 
   355  0299                     	;# 
   356  029A                     	;# 
   357  029B                     	;# 
   358  029C                     	;# 
   359  029C                     	;# 
   360  029D                     	;# 
   361  029E                     	;# 
   362  029F                     	;# 
   363  0311                     	;# 
   364  0311                     	;# 
   365  0312                     	;# 
   366  0313                     	;# 
   367  0314                     	;# 
   368  0315                     	;# 
   369  0315                     	;# 
   370  0316                     	;# 
   371  0318                     	;# 
   372  0318                     	;# 
   373  0319                     	;# 
   374  031A                     	;# 
   375  031C                     	;# 
   376  031C                     	;# 
   377  031D                     	;# 
   378  031E                     	;# 
   379  0394                     	;# 
   380  0395                     	;# 
   381  0396                     	;# 
   382  0415                     	;# 
   383  0416                     	;# 
   384  0417                     	;# 
   385  041C                     	;# 
   386  041D                     	;# 
   387  041E                     	;# 
   388  0791                     	;# 
   389  0792                     	;# 
   390  0793                     	;# 
   391  0794                     	;# 
   392  0795                     	;# 
   393  0798                     	;# 
   394  0799                     	;# 
   395  079A                     	;# 
   396  07A0                     	;# 
   397  07A1                     	;# 
   398  07A2                     	;# 
   399  07A3                     	;# 
   400  07A4                     	;# 
   401  07A5                     	;# 
   402  07A6                     	;# 
   403  07A7                     	;# 
   404  07A8                     	;# 
   405  07A9                     	;# 
   406  07AA                     	;# 
   407  07AB                     	;# 
   408  0FE4                     	;# 
   409  0FE5                     	;# 
   410  0FE6                     	;# 
   411  0FE7                     	;# 
   412  0FE8                     	;# 
   413  0FE9                     	;# 
   414  0FEA                     	;# 
   415  0FEB                     	;# 
   416  0FED                     	;# 
   417  0FEE                     	;# 
   418  0FEF                     	;# 
   419  0000                     	;# 
   420  0001                     	;# 
   421  0002                     	;# 
   422  0003                     	;# 
   423  0004                     	;# 
   424  0005                     	;# 
   425  0006                     	;# 
   426  0007                     	;# 
   427  0008                     	;# 
   428  0009                     	;# 
   429  000A                     	;# 
   430  000B                     	;# 
   431  000C                     	;# 
   432  000D                     	;# 
   433  000E                     	;# 
   434  000F                     	;# 
   435  0010                     	;# 
   436  0011                     	;# 
   437  0012                     	;# 
   438  0013                     	;# 
   439  0015                     	;# 
   440  0016                     	;# 
   441  0016                     	;# 
   442  0017                     	;# 
   443  0018                     	;# 
   444  0019                     	;# 
   445  001A                     	;# 
   446  001B                     	;# 
   447  001C                     	;# 
   448  001E                     	;# 
   449  001F                     	;# 
   450  008C                     	;# 
   451  008D                     	;# 
   452  008E                     	;# 
   453  008F                     	;# 
   454  0090                     	;# 
   455  0091                     	;# 
   456  0092                     	;# 
   457  0093                     	;# 
   458  0095                     	;# 
   459  0096                     	;# 
   460  0097                     	;# 
   461  0098                     	;# 
   462  0099                     	;# 
   463  009A                     	;# 
   464  009B                     	;# 
   465  009B                     	;# 
   466  009C                     	;# 
   467  009D                     	;# 
   468  009E                     	;# 
   469  010C                     	;# 
   470  010D                     	;# 
   471  010E                     	;# 
   472  010F                     	;# 
   473  0110                     	;# 
   474  0111                     	;# 
   475  0112                     	;# 
   476  0113                     	;# 
   477  0114                     	;# 
   478  0115                     	;# 
   479  0116                     	;# 
   480  0117                     	;# 
   481  0118                     	;# 
   482  0119                     	;# 
   483  011A                     	;# 
   484  011B                     	;# 
   485  011D                     	;# 
   486  018C                     	;# 
   487  018D                     	;# 
   488  018F                     	;# 
   489  0190                     	;# 
   490  0191                     	;# 
   491  0191                     	;# 
   492  0192                     	;# 
   493  0193                     	;# 
   494  0193                     	;# 
   495  0193                     	;# 
   496  0194                     	;# 
   497  0195                     	;# 
   498  0196                     	;# 
   499  0199                     	;# 
   500  019A                     	;# 
   501  019B                     	;# 
   502  019B                     	;# 
   503  019B                     	;# 
   504  019B                     	;# 
   505  019C                     	;# 
   506  019C                     	;# 
   507  019D                     	;# 
   508  019E                     	;# 
   509  019F                     	;# 
   510  020D                     	;# 
   511  0210                     	;# 
   512  0211                     	;# 
   513  0212                     	;# 
   514  0213                     	;# 
   515  0214                     	;# 
   516  0215                     	;# 
   517  0215                     	;# 
   518  0216                     	;# 
   519  0217                     	;# 
   520  0291                     	;# 
   521  0291                     	;# 
   522  0292                     	;# 
   523  0293                     	;# 
   524  0294                     	;# 
   525  0295                     	;# 
   526  0295                     	;# 
   527  0296                     	;# 
   528  0298                     	;# 
   529  0298                     	;# 
   530  0299                     	;# 
   531  029A                     	;# 
   532  029B                     	;# 
   533  029C                     	;# 
   534  029C                     	;# 
   535  029D                     	;# 
   536  029E                     	;# 
   537  029F                     	;# 
   538  0311                     	;# 
   539  0311                     	;# 
   540  0312                     	;# 
   541  0313                     	;# 
   542  0314                     	;# 
   543  0315                     	;# 
   544  0315                     	;# 
   545  0316                     	;# 
   546  0318                     	;# 
   547  0318                     	;# 
   548  0319                     	;# 
   549  031A                     	;# 
   550  031C                     	;# 
   551  031C                     	;# 
   552  031D                     	;# 
   553  031E                     	;# 
   554  0394                     	;# 
   555  0395                     	;# 
   556  0396                     	;# 
   557  0415                     	;# 
   558  0416                     	;# 
   559  0417                     	;# 
   560  041C                     	;# 
   561  041D                     	;# 
   562  041E                     	;# 
   563  0791                     	;# 
   564  0792                     	;# 
   565  0793                     	;# 
   566  0794                     	;# 
   567  0795                     	;# 
   568  0798                     	;# 
   569  0799                     	;# 
   570  079A                     	;# 
   571  07A0                     	;# 
   572  07A1                     	;# 
   573  07A2                     	;# 
   574  07A3                     	;# 
   575  07A4                     	;# 
   576  07A5                     	;# 
   577  07A6                     	;# 
   578  07A7                     	;# 
   579  07A8                     	;# 
   580  07A9                     	;# 
   581  07AA                     	;# 
   582  07AB                     	;# 
   583  0FE4                     	;# 
   584  0FE5                     	;# 
   585  0FE6                     	;# 
   586  0FE7                     	;# 
   587  0FE8                     	;# 
   588  0FE9                     	;# 
   589  0FEA                     	;# 
   590  0FEB                     	;# 
   591  0FED                     	;# 
   592  0FEE                     	;# 
   593  0FEF                     	;# 
   594  0000                     	;# 
   595  0001                     	;# 
   596  0002                     	;# 
   597  0003                     	;# 
   598  0004                     	;# 
   599  0005                     	;# 
   600  0006                     	;# 
   601  0007                     	;# 
   602  0008                     	;# 
   603  0009                     	;# 
   604  000A                     	;# 
   605  000B                     	;# 
   606  000C                     	;# 
   607  000D                     	;# 
   608  000E                     	;# 
   609  000F                     	;# 
   610  0010                     	;# 
   611  0011                     	;# 
   612  0012                     	;# 
   613  0013                     	;# 
   614  0015                     	;# 
   615  0016                     	;# 
   616  0016                     	;# 
   617  0017                     	;# 
   618  0018                     	;# 
   619  0019                     	;# 
   620  001A                     	;# 
   621  001B                     	;# 
   622  001C                     	;# 
   623  001E                     	;# 
   624  001F                     	;# 
   625  008C                     	;# 
   626  008D                     	;# 
   627  008E                     	;# 
   628  008F                     	;# 
   629  0090                     	;# 
   630  0091                     	;# 
   631  0092                     	;# 
   632  0093                     	;# 
   633  0095                     	;# 
   634  0096                     	;# 
   635  0097                     	;# 
   636  0098                     	;# 
   637  0099                     	;# 
   638  009A                     	;# 
   639  009B                     	;# 
   640  009B                     	;# 
   641  009C                     	;# 
   642  009D                     	;# 
   643  009E                     	;# 
   644  010C                     	;# 
   645  010D                     	;# 
   646  010E                     	;# 
   647  010F                     	;# 
   648  0110                     	;# 
   649  0111                     	;# 
   650  0112                     	;# 
   651  0113                     	;# 
   652  0114                     	;# 
   653  0115                     	;# 
   654  0116                     	;# 
   655  0117                     	;# 
   656  0118                     	;# 
   657  0119                     	;# 
   658  011A                     	;# 
   659  011B                     	;# 
   660  011D                     	;# 
   661  018C                     	;# 
   662  018D                     	;# 
   663  018F                     	;# 
   664  0190                     	;# 
   665  0191                     	;# 
   666  0191                     	;# 
   667  0192                     	;# 
   668  0193                     	;# 
   669  0193                     	;# 
   670  0193                     	;# 
   671  0194                     	;# 
   672  0195                     	;# 
   673  0196                     	;# 
   674  0199                     	;# 
   675  019A                     	;# 
   676  019B                     	;# 
   677  019B                     	;# 
   678  019B                     	;# 
   679  019B                     	;# 
   680  019C                     	;# 
   681  019C                     	;# 
   682  019D                     	;# 
   683  019E                     	;# 
   684  019F                     	;# 
   685  020D                     	;# 
   686  0210                     	;# 
   687  0211                     	;# 
   688  0212                     	;# 
   689  0213                     	;# 
   690  0214                     	;# 
   691  0215                     	;# 
   692  0215                     	;# 
   693  0216                     	;# 
   694  0217                     	;# 
   695  0291                     	;# 
   696  0291                     	;# 
   697  0292                     	;# 
   698  0293                     	;# 
   699  0294                     	;# 
   700  0295                     	;# 
   701  0295                     	;# 
   702  0296                     	;# 
   703  0298                     	;# 
   704  0298                     	;# 
   705  0299                     	;# 
   706  029A                     	;# 
   707  029B                     	;# 
   708  029C                     	;# 
   709  029C                     	;# 
   710  029D                     	;# 
   711  029E                     	;# 
   712  029F                     	;# 
   713  0311                     	;# 
   714  0311                     	;# 
   715  0312                     	;# 
   716  0313                     	;# 
   717  0314                     	;# 
   718  0315                     	;# 
   719  0315                     	;# 
   720  0316                     	;# 
   721  0318                     	;# 
   722  0318                     	;# 
   723  0319                     	;# 
   724  031A                     	;# 
   725  031C                     	;# 
   726  031C                     	;# 
   727  031D                     	;# 
   728  031E                     	;# 
   729  0394                     	;# 
   730  0395                     	;# 
   731  0396                     	;# 
   732  0415                     	;# 
   733  0416                     	;# 
   734  0417                     	;# 
   735  041C                     	;# 
   736  041D                     	;# 
   737  041E                     	;# 
   738  0791                     	;# 
   739  0792                     	;# 
   740  0793                     	;# 
   741  0794                     	;# 
   742  0795                     	;# 
   743  0798                     	;# 
   744  0799                     	;# 
   745  079A                     	;# 
   746  07A0                     	;# 
   747  07A1                     	;# 
   748  07A2                     	;# 
   749  07A3                     	;# 
   750  07A4                     	;# 
   751  07A5                     	;# 
   752  07A6                     	;# 
   753  07A7                     	;# 
   754  07A8                     	;# 
   755  07A9                     	;# 
   756  07AA                     	;# 
   757  07AB                     	;# 
   758  0FE4                     	;# 
   759  0FE5                     	;# 
   760  0FE6                     	;# 
   761  0FE7                     	;# 
   762  0FE8                     	;# 
   763  0FE9                     	;# 
   764  0FEA                     	;# 
   765  0FEB                     	;# 
   766  0FED                     	;# 
   767  0FEE                     	;# 
   768  0FEF                     	;# 
   769  0000                     	;# 
   770  0001                     	;# 
   771  0002                     	;# 
   772  0003                     	;# 
   773  0004                     	;# 
   774  0005                     	;# 
   775  0006                     	;# 
   776  0007                     	;# 
   777  0008                     	;# 
   778  0009                     	;# 
   779  000A                     	;# 
   780  000B                     	;# 
   781  000C                     	;# 
   782  000D                     	;# 
   783  000E                     	;# 
   784  000F                     	;# 
   785  0010                     	;# 
   786  0011                     	;# 
   787  0012                     	;# 
   788  0013                     	;# 
   789  0015                     	;# 
   790  0016                     	;# 
   791  0016                     	;# 
   792  0017                     	;# 
   793  0018                     	;# 
   794  0019                     	;# 
   795  001A                     	;# 
   796  001B                     	;# 
   797  001C                     	;# 
   798  001E                     	;# 
   799  001F                     	;# 
   800  008C                     	;# 
   801  008D                     	;# 
   802  008E                     	;# 
   803  008F                     	;# 
   804  0090                     	;# 
   805  0091                     	;# 
   806  0092                     	;# 
   807  0093                     	;# 
   808  0095                     	;# 
   809  0096                     	;# 
   810  0097                     	;# 
   811  0098                     	;# 
   812  0099                     	;# 
   813  009A                     	;# 
   814  009B                     	;# 
   815  009B                     	;# 
   816  009C                     	;# 
   817  009D                     	;# 
   818  009E                     	;# 
   819  010C                     	;# 
   820  010D                     	;# 
   821  010E                     	;# 
   822  010F                     	;# 
   823  0110                     	;# 
   824  0111                     	;# 
   825  0112                     	;# 
   826  0113                     	;# 
   827  0114                     	;# 
   828  0115                     	;# 
   829  0116                     	;# 
   830  0117                     	;# 
   831  0118                     	;# 
   832  0119                     	;# 
   833  011A                     	;# 
   834  011B                     	;# 
   835  011D                     	;# 
   836  018C                     	;# 
   837  018D                     	;# 
   838  018F                     	;# 
   839  0190                     	;# 
   840  0191                     	;# 
   841  0191                     	;# 
   842  0192                     	;# 
   843  0193                     	;# 
   844  0193                     	;# 
   845  0193                     	;# 
   846  0194                     	;# 
   847  0195                     	;# 
   848  0196                     	;# 
   849  0199                     	;# 
   850  019A                     	;# 
   851  019B                     	;# 
   852  019B                     	;# 
   853  019B                     	;# 
   854  019B                     	;# 
   855  019C                     	;# 
   856  019C                     	;# 
   857  019D                     	;# 
   858  019E                     	;# 
   859  019F                     	;# 
   860  020D                     	;# 
   861  0210                     	;# 
   862  0211                     	;# 
   863  0212                     	;# 
   864  0213                     	;# 
   865  0214                     	;# 
   866  0215                     	;# 
   867  0215                     	;# 
   868  0216                     	;# 
   869  0217                     	;# 
   870  0291                     	;# 
   871  0291                     	;# 
   872  0292                     	;# 
   873  0293                     	;# 
   874  0294                     	;# 
   875  0295                     	;# 
   876  0295                     	;# 
   877  0296                     	;# 
   878  0298                     	;# 
   879  0298                     	;# 
   880  0299                     	;# 
   881  029A                     	;# 
   882  029B                     	;# 
   883  029C                     	;# 
   884  029C                     	;# 
   885  029D                     	;# 
   886  029E                     	;# 
   887  029F                     	;# 
   888  0311                     	;# 
   889  0311                     	;# 
   890  0312                     	;# 
   891  0313                     	;# 
   892  0314                     	;# 
   893  0315                     	;# 
   894  0315                     	;# 
   895  0316                     	;# 
   896  0318                     	;# 
   897  0318                     	;# 
   898  0319                     	;# 
   899  031A                     	;# 
   900  031C                     	;# 
   901  031C                     	;# 
   902  031D                     	;# 
   903  031E                     	;# 
   904  0394                     	;# 
   905  0395                     	;# 
   906  0396                     	;# 
   907  0415                     	;# 
   908  0416                     	;# 
   909  0417                     	;# 
   910  041C                     	;# 
   911  041D                     	;# 
   912  041E                     	;# 
   913  0791                     	;# 
   914  0792                     	;# 
   915  0793                     	;# 
   916  0794                     	;# 
   917  0795                     	;# 
   918  0798                     	;# 
   919  0799                     	;# 
   920  079A                     	;# 
   921  07A0                     	;# 
   922  07A1                     	;# 
   923  07A2                     	;# 
   924  07A3                     	;# 
   925  07A4                     	;# 
   926  07A5                     	;# 
   927  07A6                     	;# 
   928  07A7                     	;# 
   929  07A8                     	;# 
   930  07A9                     	;# 
   931  07AA                     	;# 
   932  07AB                     	;# 
   933  0FE4                     	;# 
   934  0FE5                     	;# 
   935  0FE6                     	;# 
   936  0FE7                     	;# 
   937  0FE8                     	;# 
   938  0FE9                     	;# 
   939  0FEA                     	;# 
   940  0FEB                     	;# 
   941  0FED                     	;# 
   942  0FEE                     	;# 
   943  0FEF                     	;# 
   944                           
   945                           	psect	nvBANK0
   946  003F                     __pnvBANK0:	
   947  003F                     _eusartTxBufferRemaining:	
   948  003F                     	ds	1
   949  0011                     _PIR1bits	set	17
   950  000B                     _INTCONbits	set	11
   951  008E                     _TRISCbits	set	142
   952  0091                     _PIE1bits	set	145
   953  0095                     _OPTION_REGbits	set	149
   954  008F                     _TRISD	set	143
   955  008E                     _TRISC	set	142
   956  008D                     _TRISB	set	141
   957  008C                     _TRISA	set	140
   958  0090                     _TRISE	set	144
   959  0097                     _WDTCON	set	151
   960  0098                     _OSCTUNE	set	152
   961  0099                     _OSCCON	set	153
   962  010E                     _LATCbits	set	270
   963  011D                     _APFCON	set	285
   964  010E                     _LATC	set	270
   965  010D                     _LATB	set	269
   966  010C                     _LATA	set	268
   967  010F                     _LATD	set	271
   968  0110                     _LATE	set	272
   969  0199                     _RCREG	set	409
   970  019D                     _RCSTAbits	set	413
   971  019A                     _TXREG	set	410
   972  019C                     _SPBRGH	set	412
   973  019B                     _SPBRGL	set	411
   974  019E                     _TXSTA	set	414
   975  019D                     _RCSTA	set	413
   976  019F                     _BAUDCON	set	415
   977  018C                     _ANSELA	set	396
   978  0190                     _ANSELE	set	400
   979  018F                     _ANSELD	set	399
   980  018D                     _ANSELB	set	397
   981  020D                     _WPUB	set	525
   982  0210                     _WPUE	set	528
   983                           
   984                           	psect	stringtext1
   985  01E2                     __pstringtext1:	
   986  01E2                     STR_2:	
   987  01E2  3441               	retlw	65	;'A'
   988  01E3  3454               	retlw	84	;'T'
   989  01E4  342B               	retlw	43	;'+'
   990  01E5  3443               	retlw	67	;'C'
   991  01E6  344D               	retlw	77	;'M'
   992  01E7  3447               	retlw	71	;'G'
   993  01E8  3453               	retlw	83	;'S'
   994  01E9  343D               	retlw	61	;'='
   995  01EA  3422               	retlw	34	;'"'
   996  01EB  3430               	retlw	48	;'0'
   997  01EC  3437               	retlw	55	;'7'
   998  01ED  3435               	retlw	53	;'5'
   999  01EE  3437               	retlw	55	;'7'
  1000  01EF  3434               	retlw	52	;'4'
  1001  01F0  3439               	retlw	57	;'9'
  1002  01F1  3434               	retlw	52	;'4'
  1003  01F2  3438               	retlw	56	;'8'
  1004  01F3  3432               	retlw	50	;'2'
  1005  01F4  3433               	retlw	51	;'3'
  1006  01F5  3422               	retlw	34	;'"'
  1007  01F6  3400               	retlw	0
  1008                           
  1009                           	psect	stringtext2
  1010  01F7                     __pstringtext2:	
  1011  01F7                     STR_7:	
  1012  01F7  3441               	retlw	65	;'A'
  1013  01F8  3454               	retlw	84	;'T'
  1014  01F9  342B               	retlw	43	;'+'
  1015  01FA  3443               	retlw	67	;'C'
  1016  01FB  344E               	retlw	78	;'N'
  1017  01FC  344D               	retlw	77	;'M'
  1018  01FD  3449               	retlw	73	;'I'
  1019  01FE  343D               	retlw	61	;'='
  1020  01FF  3431               	retlw	49	;'1'
  1021  0200  342C               	retlw	44	;','
  1022  0201  3432               	retlw	50	;'2'
  1023  0202  342C               	retlw	44	;','
  1024  0203  3430               	retlw	48	;'0'
  1025  0204  342C               	retlw	44	;','
  1026  0205  3430               	retlw	48	;'0'
  1027  0206  342C               	retlw	44	;','
  1028  0207  3430               	retlw	48	;'0'
  1029  0208  3400               	retlw	0
  1030                           
  1031                           	psect	stringtext3
  1032  0209                     __pstringtext3:	
  1033  0209                     STR_5:	
  1034  0209  3441               	retlw	65	;'A'
  1035  020A  3454               	retlw	84	;'T'
  1036  020B  342B               	retlw	43	;'+'
  1037  020C  3443               	retlw	67	;'C'
  1038  020D  3450               	retlw	80	;'P'
  1039  020E  3449               	retlw	73	;'I'
  1040  020F  344E               	retlw	78	;'N'
  1041  0210  343D               	retlw	61	;'='
  1042  0211  3422               	retlw	34	;'"'
  1043  0212  3431               	retlw	49	;'1'
  1044  0213  3432               	retlw	50	;'2'
  1045  0214  3433               	retlw	51	;'3'
  1046  0215  3434               	retlw	52	;'4'
  1047  0216  3422               	retlw	34	;'"'
  1048  0217  3400               	retlw	0
  1049                           
  1050                           	psect	stringtext4
  1051  0218                     __pstringtext4:	
  1052  0218                     STR_1:	
  1053  0218  3441               	retlw	65	;'A'
  1054  0219  3454               	retlw	84	;'T'
  1055  021A  342B               	retlw	43	;'+'
  1056  021B  3443               	retlw	67	;'C'
  1057  021C  3453               	retlw	83	;'S'
  1058  021D  3443               	retlw	67	;'C'
  1059  021E  3453               	retlw	83	;'S'
  1060  021F  343D               	retlw	61	;'='
  1061  0220  3422               	retlw	34	;'"'
  1062  0221  3447               	retlw	71	;'G'
  1063  0222  3453               	retlw	83	;'S'
  1064  0223  344D               	retlw	77	;'M'
  1065  0224  3422               	retlw	34	;'"'
  1066  0225  3400               	retlw	0
  1067                           
  1068                           	psect	stringtext5
  1069  0232                     __pstringtext5:	
  1070  0232                     STR_6:	
  1071  0232  3441               	retlw	65	;'A'
  1072  0233  3454               	retlw	84	;'T'
  1073  0234  342B               	retlw	43	;'+'
  1074  0235  3443               	retlw	67	;'C'
  1075  0236  344D               	retlw	77	;'M'
  1076  0237  3447               	retlw	71	;'G'
  1077  0238  3446               	retlw	70	;'F'
  1078  0239  343D               	retlw	61	;'='
  1079  023A  3431               	retlw	49	;'1'
  1080  023B  3400               	retlw	0
  1081                           
  1082                           	psect	stringtext6
  1083  023C                     __pstringtext6:	
  1084  023C                     STR_3:	
  1085  023C  3468               	retlw	104	;'h'
  1086  023D  3465               	retlw	101	;'e'
  1087  023E  346C               	retlw	108	;'l'
  1088  023F  346C               	retlw	108	;'l'
  1089  0240  346F               	retlw	111	;'o'
  1090  0241  3400               	retlw	0
  1091                           
  1092                           	psect	stringtext7
  1093  0256                     __pstringtext7:	
  1094  0256                     STR_4:	
  1095  0256  3441               	retlw	65	;'A'
  1096  0257  3454               	retlw	84	;'T'
  1097  0258  3400               	retlw	0
  1098                           
  1099                           	psect	stringtext8
  1100  0000                     __pstringtext8:	
  1101                           
  1102                           ; #config settings
  1103  0000                     
  1104                           	psect	cinit
  1105  0026                     start_initialization:	
  1106  0026                     __initialization:	
  1107                           
  1108                           ; Clear objects allocated to COMMON
  1109  0026  01FA               	clrf	__pbssCOMMON& (0+127)
  1110  0027  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1111                           
  1112                           ; Clear objects allocated to BANK0
  1113  0028  3020               	movlw	low __pbssBANK0
  1114  0029  0084               	movwf	4
  1115  002A  3000               	movlw	high __pbssBANK0
  1116  002B  0085               	movwf	5
  1117  002C  3018               	movlw	24
  1118  002D  3182  2242         	fcall	clear_ram0
  1119  002F                     end_of_initialization:	
  1120                           ;End of C runtime variable initialization code
  1121                           
  1122  002F                     __end_of__initialization:	
  1123  002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1124  0030  0020               	movlb	0
  1125  0031  3180  28D6         	ljmp	_main	;jump to C main() function
  1126                           
  1127                           	psect	bssCOMMON
  1128  007A                     __pbssCOMMON:	
  1129  007A                     _eusartTxTail:	
  1130  007A                     	ds	1
  1131  007B                     _eusartTxHead:	
  1132  007B                     	ds	1
  1133                           
  1134                           	psect	bssBANK0
  1135  0020                     __pbssBANK0:	
  1136  0020                     _eusartRxBuffer:	
  1137  0020                     	ds	8
  1138  0028                     _eusartTxBuffer:	
  1139  0028                     	ds	8
  1140  0030                     _flag_G:	
  1141  0030                     	ds	2
  1142  0032                     _flag_N:	
  1143  0032                     	ds	2
  1144  0034                     _rcreg:	
  1145  0034                     	ds	1
  1146  0035                     _eusartRxCount:	
  1147  0035                     	ds	1
  1148  0036                     _eusartRxTail:	
  1149  0036                     	ds	1
  1150  0037                     _eusartRxHead:	
  1151  0037                     	ds	1
  1152                           
  1153                           	psect	clrtext
  1154  0242                     clear_ram0:	
  1155                           ;	Called with FSR0 containing the base address, and
  1156                           ;	WREG with the size to clear
  1157                           
  1158  0242  0064               	clrwdt	;clear the watchdog before getting into this loop
  1159  0243                     clrloop0:	
  1160  0243  0180               	clrf	0	;clear RAM location pointed to by FSR
  1161  0244  3101               	addfsr 0,1
  1162  0245  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1163  0246  2A43               	goto	clrloop0	;have we reached the end yet?
  1164  0247  3400               	retlw	0	;all done for this memory range, return
  1165                           
  1166                           	psect	cstackCOMMON
  1167  0070                     __pcstackCOMMON:	
  1168  0070                     ?_PIN_MANAGER_Initialize:	
  1169  0070                     ?_OSCILLATOR_Initialize:	
  1170                           ; 1 bytes @ 0x0
  1171                           
  1172  0070                     ?_WDT_Initialize:	
  1173                           ; 1 bytes @ 0x0
  1174                           
  1175  0070                     ?_EUSART_Initialize:	
  1176                           ; 1 bytes @ 0x0
  1177                           
  1178  0070                     ?_SYSTEM_Initialize:	
  1179                           ; 1 bytes @ 0x0
  1180                           
  1181  0070                     ?_EUSART_Write:	
  1182                           ; 1 bytes @ 0x0
  1183                           
  1184  0070                     ?_putch:	
  1185                           ; 1 bytes @ 0x0
  1186                           
  1187  0070                     ?_EUSART_Transmit_ISR:	
  1188                           ; 1 bytes @ 0x0
  1189                           
  1190  0070                     ??_EUSART_Transmit_ISR:	
  1191                           ; 1 bytes @ 0x0
  1192                           
  1193  0070                     ?_EUSART_Receive_ISR:	
  1194                           ; 1 bytes @ 0x0
  1195                           
  1196  0070                     ??_EUSART_Receive_ISR:	
  1197                           ; 1 bytes @ 0x0
  1198                           
  1199  0070                     ?_INTERRUPT_InterruptManager:	
  1200                           ; 1 bytes @ 0x0
  1201                           
  1202  0070                     ?_turn_egs:	
  1203                           ; 1 bytes @ 0x0
  1204                           
  1205  0070                     ?_int_gsm:	
  1206                           ; 1 bytes @ 0x0
  1207                           
  1208  0070                     ?_main:	
  1209                           ; 1 bytes @ 0x0
  1210                           
  1211                           
  1212                           ; 1 bytes @ 0x0
  1213  0070                     	ds	1
  1214  0071                     ??_INTERRUPT_InterruptManager:	
  1215                           
  1216                           ; 1 bytes @ 0x1
  1217  0071                     	ds	1
  1218  0072                     ??_PIN_MANAGER_Initialize:	
  1219  0072                     ??_OSCILLATOR_Initialize:	
  1220                           ; 1 bytes @ 0x2
  1221                           
  1222  0072                     ??_WDT_Initialize:	
  1223                           ; 1 bytes @ 0x2
  1224                           
  1225  0072                     ??_EUSART_Initialize:	
  1226                           ; 1 bytes @ 0x2
  1227                           
  1228  0072                     ??_EUSART_Write:	
  1229                           ; 1 bytes @ 0x2
  1230                           
  1231  0072                     ??_turn_egs:	
  1232                           ; 1 bytes @ 0x2
  1233                           
  1234                           
  1235                           ; 1 bytes @ 0x2
  1236  0072                     	ds	1
  1237  0073                     ??_SYSTEM_Initialize:	
  1238  0073                     EUSART_Write@txData:	
  1239                           ; 1 bytes @ 0x3
  1240                           
  1241  0073                     turn_egs@nr:	
  1242                           ; 1 bytes @ 0x3
  1243                           
  1244                           
  1245                           ; 2 bytes @ 0x3
  1246  0073                     	ds	1
  1247  0074                     ??_putch:	
  1248  0074                     putch@txData:	
  1249                           ; 1 bytes @ 0x4
  1250                           
  1251                           
  1252                           ; 1 bytes @ 0x4
  1253  0074                     	ds	1
  1254  0075                     ?_printf:	
  1255  0075                     printf@f:	
  1256                           ; 2 bytes @ 0x5
  1257                           
  1258                           
  1259                           ; 2 bytes @ 0x5
  1260  0075                     	ds	2
  1261  0077                     ??_printf:	
  1262                           
  1263                           ; 1 bytes @ 0x7
  1264  0077                     	ds	3
  1265                           
  1266                           	psect	cstackBANK0
  1267  0038                     __pcstackBANK0:	
  1268  0038                     printf@ap:	
  1269                           
  1270                           ; 1 bytes @ 0x0
  1271  0038                     	ds	1
  1272  0039                     printf@c:	
  1273                           
  1274                           ; 1 bytes @ 0x1
  1275  0039                     	ds	1
  1276  003A                     ??_int_gsm:	
  1277                           
  1278                           ; 1 bytes @ 0x2
  1279  003A                     	ds	2
  1280  003C                     ??_main:	
  1281                           
  1282                           ; 1 bytes @ 0x4
  1283  003C                     	ds	2
  1284  003E                     main@x:	
  1285                           
  1286                           ; 1 bytes @ 0x6
  1287  003E                     	ds	1
  1288                           
  1289                           	psect	maintext
  1290  00D6                     __pmaintext:	
  1291 ;;
  1292 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1293 ;;
  1294 ;; *************** function _main *****************
  1295 ;; Defined at:
  1296 ;;		line 129 in file "main.c"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;		None
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;  x               1    6[BANK0 ] unsigned char 
  1301 ;; Return value:  Size  Location     Type
  1302 ;;                  1    wreg      void 
  1303 ;; Registers used:
  1304 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1305 ;; Tracked objects:
  1306 ;;		On entry : B1F/0
  1307 ;;		On exit  : 0/0
  1308 ;;		Unchanged: 0/0
  1309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1310 ;;      Params:         0       0       0       0       0       0       0       0
  1311 ;;      Locals:         0       1       0       0       0       0       0       0
  1312 ;;      Temps:          0       2       0       0       0       0       0       0
  1313 ;;      Totals:         0       3       0       0       0       0       0       0
  1314 ;;Total ram usage:        3 bytes
  1315 ;; Hardware stack levels required when called:    6
  1316 ;; This function calls:
  1317 ;;		_SYSTEM_Initialize
  1318 ;;		_int_gsm
  1319 ;;		_turn_egs
  1320 ;; This function is called by:
  1321 ;;		Startup code after reset
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           
  1326                           ;psect for function _main
  1327  00D6                     _main:	
  1328                           
  1329                           ;main.c: 131: char x=0;
  1330                           
  1331                           ;incstack = 0
  1332                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1333  00D6  0020               	movlb	0	; select bank0
  1334  00D7  01BE               	clrf	main@x
  1335                           
  1336                           ;main.c: 132: TRISCbits.TRISC0=0;
  1337  00D8  0021               	movlb	1	; select bank1
  1338  00D9  100E               	bcf	14,0	;volatile
  1339                           
  1340                           ;main.c: 133: TRISCbits.TRISC3=0;
  1341  00DA  118E               	bcf	14,3	;volatile
  1342                           
  1343                           ;main.c: 134: TRISCbits.TRISC4=0;
  1344  00DB  120E               	bcf	14,4	;volatile
  1345                           
  1346                           ;main.c: 135: TRISCbits.TRISC5=0;
  1347  00DC  128E               	bcf	14,5	;volatile
  1348                           
  1349                           ;main.c: 137: SYSTEM_Initialize();
  1350  00DD  3182  2226  3180   	fcall	_SYSTEM_Initialize
  1351                           
  1352                           ;main.c: 144: (INTCONbits.GIE = 1);
  1353  00E0  178B               	bsf	11,7	;volatile
  1354                           
  1355                           ;main.c: 147: (INTCONbits.PEIE = 1);
  1356  00E1  170B               	bsf	11,6	;volatile
  1357                           
  1358                           ;main.c: 154: _delay((unsigned long)((3000)*(18432000/4000.0)));
  1359  00E2  3047               	movlw	71
  1360  00E3  0020               	movlb	0	; select bank0
  1361  00E4  00BD               	movwf	??_main+1
  1362  00E5  3022               	movlw	34
  1363  00E6  00BC               	movwf	??_main
  1364  00E7  300D               	movlw	13
  1365  00E8                     u497:	
  1366  00E8  0B89               	decfsz	9,f
  1367  00E9  28E8               	goto	u497
  1368  00EA  0BBC               	decfsz	??_main,f
  1369  00EB  28E8               	goto	u497
  1370  00EC  0BBD               	decfsz	??_main+1,f
  1371  00ED  28E8               	goto	u497
  1372  00EE  3200               	nop2
  1373                           
  1374                           ;main.c: 156: int_gsm();
  1375  00EF  3180  2033  3180   	fcall	_int_gsm
  1376  00F2                     l1280:	
  1377                           ;main.c: 160: while (1)
  1378                           
  1379                           
  1380                           ;main.c: 161: {
  1381                           ;main.c: 162: if((flag_N==1)&&(flag_G==1))
  1382  00F2  0020               	movlb	0	; select bank0
  1383  00F3  0332               	decf	_flag_N,w
  1384  00F4  0433               	iorwf	_flag_N+1,w
  1385  00F5  1D03               	btfss	3,2
  1386  00F6  28F2               	goto	l1280
  1387  00F7  0330               	decf	_flag_G,w
  1388  00F8  0431               	iorwf	_flag_G+1,w
  1389  00F9  1D03               	btfss	3,2
  1390  00FA  28F2               	goto	l1280
  1391                           
  1392                           ;main.c: 163: {
  1393                           ;main.c: 164: turn_egs();
  1394  00FB  3180  2090  3180   	fcall	_turn_egs
  1395                           
  1396                           ;main.c: 166: flag_N=0;
  1397  00FE  0020               	movlb	0	; select bank0
  1398  00FF  01B2               	clrf	_flag_N
  1399  0100  01B3               	clrf	_flag_N+1
  1400                           
  1401                           ;main.c: 167: flag_G=0;
  1402  0101  01B0               	clrf	_flag_G
  1403  0102  01B1               	clrf	_flag_G+1
  1404                           
  1405                           ;main.c: 168: _delay((unsigned long)((200)*(18432000/4000.0)));
  1406  0103  3005               	movlw	5
  1407  0104  0020               	movlb	0	; select bank0
  1408  0105  00BD               	movwf	??_main+1
  1409  0106  30AD               	movlw	173
  1410  0107  00BC               	movwf	??_main
  1411  0108  30DD               	movlw	221
  1412  0109                     u507:	
  1413  0109  0B89               	decfsz	9,f
  1414  010A  2909               	goto	u507
  1415  010B  0BBC               	decfsz	??_main,f
  1416  010C  2909               	goto	u507
  1417  010D  0BBD               	decfsz	??_main+1,f
  1418  010E  2909               	goto	u507
  1419  010F  28F2               	goto	l1280
  1420  0110                     __end_of_main:	
  1421                           
  1422                           	psect	text1
  1423  0090                     __ptext1:	
  1424 ;; *************** function _turn_egs *****************
  1425 ;; Defined at:
  1426 ;;		line 63 in file "main.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;		None
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;  nr              2    3[COMMON] int 
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      void 
  1433 ;; Registers used:
  1434 ;;		wreg, status,2
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1440 ;;      Params:         0       0       0       0       0       0       0       0
  1441 ;;      Locals:         2       0       0       0       0       0       0       0
  1442 ;;      Temps:          1       0       0       0       0       0       0       0
  1443 ;;      Totals:         3       0       0       0       0       0       0       0
  1444 ;;Total ram usage:        3 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; Hardware stack levels required when called:    2
  1447 ;; This function calls:
  1448 ;;		Nothing
  1449 ;; This function is called by:
  1450 ;;		_main
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           
  1455                           ;psect for function _turn_egs
  1456  0090                     _turn_egs:	
  1457                           
  1458                           ;main.c: 65: int nr=0;
  1459                           
  1460                           ;incstack = 0
  1461                           ; Regs used in _turn_egs: [wreg+status,2]
  1462  0090  01F3               	clrf	turn_egs@nr
  1463  0091  01F4               	clrf	turn_egs@nr+1
  1464                           
  1465                           ;main.c: 66: if (nr<512)
  1466  0092  0874               	movf	turn_egs@nr+1,w
  1467  0093  3A80               	xorlw	128
  1468  0094  00F2               	movwf	??_turn_egs
  1469  0095  3082               	movlw	130
  1470  0096  0272               	subwf	??_turn_egs,w
  1471  0097  1D03               	skipz
  1472  0098  289B               	goto	u345
  1473  0099  3000               	movlw	0
  1474  009A  0273               	subwf	turn_egs@nr,w
  1475  009B                     u345:	
  1476  009B  1803               	skipnc
  1477  009C  0008               	return
  1478                           
  1479                           ;main.c: 70: {
  1480                           ;main.c: 71: nr++;
  1481  009D  3001               	movlw	1
  1482  009E  07F3               	addwf	turn_egs@nr,f
  1483  009F  3000               	movlw	0
  1484  00A0  3DF4               	addwfc	turn_egs@nr+1,f
  1485                           
  1486                           ;main.c: 72: LATCbits.LATC5=1;
  1487  00A1  0022               	movlb	2	; select bank2
  1488  00A2  168E               	bsf	14,5	;volatile
  1489                           
  1490                           ;main.c: 73: LATCbits.LATC4=0;
  1491  00A3  120E               	bcf	14,4	;volatile
  1492                           
  1493                           ;main.c: 74: LATCbits.LATC3=0;
  1494  00A4  118E               	bcf	14,3	;volatile
  1495                           
  1496                           ;main.c: 75: LATCbits.LATC0=1;
  1497  00A5  140E               	bsf	14,0	;volatile
  1498                           
  1499                           ;main.c: 76: _delay((unsigned long)((5)*(18432000/4000.0)));
  1500  00A6  301E               	movlw	30
  1501  00A7  00F2               	movwf	??_turn_egs
  1502  00A8  30EB               	movlw	235
  1503  00A9                     u517:	
  1504  00A9  0B89               	decfsz	9,f
  1505  00AA  28A9               	goto	u517
  1506  00AB  0BF2               	decfsz	??_turn_egs,f
  1507  00AC  28A9               	goto	u517
  1508  00AD  0000               	nop
  1509                           
  1510                           ;main.c: 77: LATCbits.LATC5=1;
  1511  00AE  0022               	movlb	2	; select bank2
  1512  00AF  168E               	bsf	14,5	;volatile
  1513                           
  1514                           ;main.c: 78: LATCbits.LATC4=1;
  1515  00B0  160E               	bsf	14,4	;volatile
  1516                           
  1517                           ;main.c: 79: LATCbits.LATC3=0;
  1518  00B1  118E               	bcf	14,3	;volatile
  1519                           
  1520                           ;main.c: 80: LATCbits.LATC0=0;
  1521  00B2  100E               	bcf	14,0	;volatile
  1522                           
  1523                           ;main.c: 81: _delay((unsigned long)((5)*(18432000/4000.0)));
  1524  00B3  301E               	movlw	30
  1525  00B4  00F2               	movwf	??_turn_egs
  1526  00B5  30EB               	movlw	235
  1527  00B6                     u527:	
  1528  00B6  0B89               	decfsz	9,f
  1529  00B7  28B6               	goto	u527
  1530  00B8  0BF2               	decfsz	??_turn_egs,f
  1531  00B9  28B6               	goto	u527
  1532  00BA  0000               	nop
  1533                           
  1534                           ;main.c: 82: LATCbits.LATC5=0;
  1535  00BB  0022               	movlb	2	; select bank2
  1536  00BC  128E               	bcf	14,5	;volatile
  1537                           
  1538                           ;main.c: 83: LATCbits.LATC4=1;
  1539  00BD  160E               	bsf	14,4	;volatile
  1540                           
  1541                           ;main.c: 84: LATCbits.LATC3=1;
  1542  00BE  158E               	bsf	14,3	;volatile
  1543                           
  1544                           ;main.c: 85: LATCbits.LATC0=0;
  1545  00BF  100E               	bcf	14,0	;volatile
  1546                           
  1547                           ;main.c: 86: _delay((unsigned long)((5)*(18432000/4000.0)));
  1548  00C0  301E               	movlw	30
  1549  00C1  00F2               	movwf	??_turn_egs
  1550  00C2  30EB               	movlw	235
  1551  00C3                     u537:	
  1552  00C3  0B89               	decfsz	9,f
  1553  00C4  28C3               	goto	u537
  1554  00C5  0BF2               	decfsz	??_turn_egs,f
  1555  00C6  28C3               	goto	u537
  1556  00C7  0000               	nop
  1557                           
  1558                           ;main.c: 87: LATCbits.LATC5=0;
  1559  00C8  0022               	movlb	2	; select bank2
  1560  00C9  128E               	bcf	14,5	;volatile
  1561                           
  1562                           ;main.c: 88: LATCbits.LATC4=0;
  1563  00CA  120E               	bcf	14,4	;volatile
  1564                           
  1565                           ;main.c: 89: LATCbits.LATC3=1;
  1566  00CB  158E               	bsf	14,3	;volatile
  1567                           
  1568                           ;main.c: 90: LATCbits.LATC0=1;
  1569  00CC  140E               	bsf	14,0	;volatile
  1570                           
  1571                           ;main.c: 91: _delay((unsigned long)((5)*(18432000/4000.0)));
  1572  00CD  301E               	movlw	30
  1573  00CE  00F2               	movwf	??_turn_egs
  1574  00CF  30EB               	movlw	235
  1575  00D0                     u547:	
  1576  00D0  0B89               	decfsz	9,f
  1577  00D1  28D0               	goto	u547
  1578  00D2  0BF2               	decfsz	??_turn_egs,f
  1579  00D3  28D0               	goto	u547
  1580  00D4  0000               	nop
  1581  00D5  0008               	return
  1582  00D6                     __end_of_turn_egs:	
  1583                           
  1584                           	psect	text2
  1585  0033                     __ptext2:	
  1586 ;; *************** function _int_gsm *****************
  1587 ;; Defined at:
  1588 ;;		line 112 in file "main.c"
  1589 ;; Parameters:    Size  Location     Type
  1590 ;;		None
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;		None
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  1    wreg      void 
  1595 ;; Registers used:
  1596 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1602 ;;      Params:         0       0       0       0       0       0       0       0
  1603 ;;      Locals:         0       0       0       0       0       0       0       0
  1604 ;;      Temps:          0       2       0       0       0       0       0       0
  1605 ;;      Totals:         0       2       0       0       0       0       0       0
  1606 ;;Total ram usage:        2 bytes
  1607 ;; Hardware stack levels used:    1
  1608 ;; Hardware stack levels required when called:    5
  1609 ;; This function calls:
  1610 ;;		_printf
  1611 ;;		_putch
  1612 ;; This function is called by:
  1613 ;;		_main
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617                           
  1618                           ;psect for function _int_gsm
  1619  0033                     _int_gsm:	
  1620                           
  1621                           ;main.c: 114: printf("AT");
  1622                           
  1623                           ;incstack = 0
  1624                           ; Regs used in _int_gsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1625  0033  3056               	movlw	low (STR_4| (0+32768))
  1626  0034  00F5               	movwf	printf@f
  1627  0035  3082               	movlw	high (STR_4| (0+32768))
  1628  0036  00F6               	movwf	printf@f+1
  1629  0037  3181  218D  3180   	fcall	_printf
  1630                           
  1631                           ;main.c: 115: putch(0x0d);
  1632  003A  300D               	movlw	13
  1633  003B  3182  2248  3180   	fcall	_putch
  1634                           
  1635                           ;main.c: 116: _delay((unsigned long)((4000)*(18432000/4000.0)));
  1636  003E  305E               	movlw	94
  1637  003F  0020               	movlb	0	; select bank0
  1638  0040  00BB               	movwf	??_int_gsm+1
  1639  0041  3082               	movlw	130
  1640  0042  00BA               	movwf	??_int_gsm
  1641  0043  3069               	movlw	105
  1642  0044                     u557:	
  1643  0044  0B89               	decfsz	9,f
  1644  0045  2844               	goto	u557
  1645  0046  0BBA               	decfsz	??_int_gsm,f
  1646  0047  2844               	goto	u557
  1647  0048  0BBB               	decfsz	??_int_gsm+1,f
  1648  0049  2844               	goto	u557
  1649                           
  1650                           ;main.c: 117: printf("AT+CPIN=\"1234\"");
  1651  004A  3009               	movlw	low (STR_5| (0+32768))
  1652  004B  00F5               	movwf	printf@f
  1653  004C  3082               	movlw	high (STR_5| (0+32768))
  1654  004D  00F6               	movwf	printf@f+1
  1655  004E  3181  218D  3180   	fcall	_printf
  1656                           
  1657                           ;main.c: 118: putch(0x0d);
  1658  0051  300D               	movlw	13
  1659  0052  3182  2248  3180   	fcall	_putch
  1660                           
  1661                           ;main.c: 119: _delay((unsigned long)((4000)*(18432000/4000.0)));
  1662  0055  305E               	movlw	94
  1663  0056  0020               	movlb	0	; select bank0
  1664  0057  00BB               	movwf	??_int_gsm+1
  1665  0058  3082               	movlw	130
  1666  0059  00BA               	movwf	??_int_gsm
  1667  005A  3069               	movlw	105
  1668  005B                     u567:	
  1669  005B  0B89               	decfsz	9,f
  1670  005C  285B               	goto	u567
  1671  005D  0BBA               	decfsz	??_int_gsm,f
  1672  005E  285B               	goto	u567
  1673  005F  0BBB               	decfsz	??_int_gsm+1,f
  1674  0060  285B               	goto	u567
  1675                           
  1676                           ;main.c: 120: printf("AT+CMGF=1");
  1677  0061  3032               	movlw	low (STR_6| (0+32768))
  1678  0062  00F5               	movwf	printf@f
  1679  0063  3082               	movlw	high (STR_6| (0+32768))
  1680  0064  00F6               	movwf	printf@f+1
  1681  0065  3181  218D  3180   	fcall	_printf
  1682                           
  1683                           ;main.c: 121: putch(0x0d);
  1684  0068  300D               	movlw	13
  1685  0069  3182  2248  3180   	fcall	_putch
  1686                           
  1687                           ;main.c: 122: _delay((unsigned long)((4000)*(18432000/4000.0)));
  1688  006C  305E               	movlw	94
  1689  006D  0020               	movlb	0	; select bank0
  1690  006E  00BB               	movwf	??_int_gsm+1
  1691  006F  3082               	movlw	130
  1692  0070  00BA               	movwf	??_int_gsm
  1693  0071  3069               	movlw	105
  1694  0072                     u577:	
  1695  0072  0B89               	decfsz	9,f
  1696  0073  2872               	goto	u577
  1697  0074  0BBA               	decfsz	??_int_gsm,f
  1698  0075  2872               	goto	u577
  1699  0076  0BBB               	decfsz	??_int_gsm+1,f
  1700  0077  2872               	goto	u577
  1701                           
  1702                           ;main.c: 123: printf("AT+CNMI=1,2,0,0,0");
  1703  0078  30F7               	movlw	low (STR_7| (0+32768))
  1704  0079  00F5               	movwf	printf@f
  1705  007A  3081               	movlw	high (STR_7| (0+32768))
  1706  007B  00F6               	movwf	printf@f+1
  1707  007C  3181  218D  3180   	fcall	_printf
  1708                           
  1709                           ;main.c: 124: putch(0x0d);
  1710  007F  300D               	movlw	13
  1711  0080  3182  2248  3180   	fcall	_putch
  1712                           
  1713                           ;main.c: 125: _delay((unsigned long)((4000)*(18432000/4000.0)));
  1714  0083  305E               	movlw	94
  1715  0084  0020               	movlb	0	; select bank0
  1716  0085  00BB               	movwf	??_int_gsm+1
  1717  0086  3082               	movlw	130
  1718  0087  00BA               	movwf	??_int_gsm
  1719  0088  3069               	movlw	105
  1720  0089                     u587:	
  1721  0089  0B89               	decfsz	9,f
  1722  008A  2889               	goto	u587
  1723  008B  0BBA               	decfsz	??_int_gsm,f
  1724  008C  2889               	goto	u587
  1725  008D  0BBB               	decfsz	??_int_gsm+1,f
  1726  008E  2889               	goto	u587
  1727  008F  0008               	return
  1728  0090                     __end_of_int_gsm:	
  1729                           
  1730                           	psect	text3
  1731  018D                     __ptext3:	
  1732 ;; *************** function _printf *****************
  1733 ;; Defined at:
  1734 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\doprnt.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;  f               2    5[COMMON] PTR const unsigned char 
  1737 ;;		 -> STR_7(18), STR_6(10), STR_5(15), STR_4(3), 
  1738 ;;		 -> STR_3(6), STR_2(21), STR_1(14), 
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;  tmpval          4    0        struct .
  1741 ;;  cp              2    0        PTR const unsigned char 
  1742 ;;  len             2    0        unsigned int 
  1743 ;;  val             2    0        unsigned int 
  1744 ;;  c               1    1[BANK0 ] char 
  1745 ;;  ap              1    0[BANK0 ] PTR void [1]
  1746 ;;		 -> ?_printf(2), 
  1747 ;;  flag            1    0        unsigned char 
  1748 ;;  prec            1    0        char 
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  2    5[COMMON] int 
  1751 ;; Registers used:
  1752 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1758 ;;      Params:         2       0       0       0       0       0       0       0
  1759 ;;      Locals:         0       2       0       0       0       0       0       0
  1760 ;;      Temps:          3       0       0       0       0       0       0       0
  1761 ;;      Totals:         5       2       0       0       0       0       0       0
  1762 ;;Total ram usage:        7 bytes
  1763 ;; Hardware stack levels used:    1
  1764 ;; Hardware stack levels required when called:    4
  1765 ;; This function calls:
  1766 ;;		_putch
  1767 ;; This function is called by:
  1768 ;;		_int_gsm
  1769 ;;		_sms_text
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           
  1774                           ;psect for function _printf
  1775  018D                     _printf:	
  1776                           
  1777                           ;doprnt.c: 466: va_list ap;
  1778                           ;doprnt.c: 499: signed char c;
  1779                           ;doprnt.c: 506: signed char prec;
  1780                           ;doprnt.c: 508: unsigned char flag;
  1781                           ;doprnt.c: 523: union {
  1782                           ;doprnt.c: 524: unsigned long vd;
  1783                           ;doprnt.c: 525: double integ;
  1784                           ;doprnt.c: 526: } tmpval;
  1785                           ;doprnt.c: 528: unsigned int val;
  1786                           ;doprnt.c: 529: unsigned len;
  1787                           ;doprnt.c: 530: const char * cp;
  1788                           ;doprnt.c: 533: *ap = __va_start();
  1789                           
  1790                           ;incstack = 0
  1791                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1792  018D  3077               	movlw	(low ((?_printf| 0+2)))& (0+255)
  1793  018E  00F7               	movwf	??_printf
  1794  018F  0877               	movf	??_printf,w
  1795  0190  0020               	movlb	0	; select bank0
  1796  0191  00B8               	movwf	printf@ap
  1797  0192                     l1220:	
  1798                           ;doprnt.c: 543: }
  1799                           ;doprnt.c: 1422: {
  1800                           
  1801                           ;doprnt.c: 542: continue;
  1802                           
  1803                           ;doprnt.c: 536: while(c = *f++) {
  1804                           
  1805  0192  0876               	movf	printf@f+1,w
  1806  0193  00F8               	movwf	??_printf+1
  1807  0194  0875               	movf	printf@f,w
  1808  0195  00F7               	movwf	??_printf
  1809  0196  0AF5               	incf	printf@f,f
  1810  0197  1903               	skipnz
  1811  0198  0AF6               	incf	printf@f+1,f
  1812  0199  0877               	movf	??_printf,w
  1813  019A  0084               	movwf	4
  1814  019B  0878               	movf	??_printf+1,w
  1815  019C  0085               	movwf	5
  1816  019D  0800               	movf	0,w	;code access
  1817  019E  00F9               	movwf	??_printf+2
  1818  019F  0879               	movf	??_printf+2,w
  1819  01A0  0020               	movlb	0	; select bank0
  1820  01A1  00B9               	movwf	printf@c
  1821  01A2  0839               	movf	printf@c,w
  1822  01A3  1903               	btfsc	3,2
  1823  01A4  0008               	return
  1824                           
  1825                           ;doprnt.c: 540: {
  1826                           ;doprnt.c: 541: (putch(c) );
  1827  01A5  0839               	movf	printf@c,w
  1828  01A6  3182  2248  3181   	fcall	_putch
  1829  01A9  2992               	goto	l1220
  1830  01AA                     __end_of_printf:	
  1831                           ;doprnt.c: 1469: }
  1832                           ;doprnt.c: 1533: }
  1833                           ;doprnt.c: 1540: return 0;
  1834                           ;	Return value of _printf is never used
  1835                           
  1836                           
  1837                           	psect	text4
  1838  0248                     __ptext4:	
  1839 ;; *************** function _putch *****************
  1840 ;; Defined at:
  1841 ;;		line 161 in file "mcc_generated_files/eusart.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;  txData          1    wreg     unsigned char 
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;  txData          1    4[COMMON] unsigned char 
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  1    wreg      void 
  1848 ;; Registers used:
  1849 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1855 ;;      Params:         0       0       0       0       0       0       0       0
  1856 ;;      Locals:         1       0       0       0       0       0       0       0
  1857 ;;      Temps:          0       0       0       0       0       0       0       0
  1858 ;;      Totals:         1       0       0       0       0       0       0       0
  1859 ;;Total ram usage:        1 bytes
  1860 ;; Hardware stack levels used:    1
  1861 ;; Hardware stack levels required when called:    3
  1862 ;; This function calls:
  1863 ;;		_EUSART_Write
  1864 ;; This function is called by:
  1865 ;;		_int_gsm
  1866 ;;		_printf
  1867 ;;		_sms_text
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           
  1872                           ;psect for function _putch
  1873  0248                     _putch:	
  1874                           
  1875                           ;incstack = 0
  1876                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1877                           ;putch@txData stored from wreg
  1878  0248  00F4               	movwf	putch@txData
  1879                           
  1880                           ;eusart.c: 163: EUSART_Write(txData);
  1881  0249  0874               	movf	putch@txData,w
  1882  024A  3181  2147         	fcall	_EUSART_Write
  1883  024C  0008               	return
  1884  024D                     __end_of_putch:	
  1885                           
  1886                           	psect	text5
  1887  0147                     __ptext5:	
  1888 ;; *************** function _EUSART_Write *****************
  1889 ;; Defined at:
  1890 ;;		line 133 in file "mcc_generated_files/eusart.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;  txData          1    wreg     unsigned char 
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;  txData          1    3[COMMON] unsigned char 
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  1    wreg      void 
  1897 ;; Registers used:
  1898 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1904 ;;      Params:         0       0       0       0       0       0       0       0
  1905 ;;      Locals:         1       0       0       0       0       0       0       0
  1906 ;;      Temps:          1       0       0       0       0       0       0       0
  1907 ;;      Totals:         2       0       0       0       0       0       0       0
  1908 ;;Total ram usage:        2 bytes
  1909 ;; Hardware stack levels used:    1
  1910 ;; Hardware stack levels required when called:    2
  1911 ;; This function calls:
  1912 ;;		Nothing
  1913 ;; This function is called by:
  1914 ;;		_putch
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           
  1919                           ;psect for function _EUSART_Write
  1920  0147                     _EUSART_Write:	
  1921                           
  1922                           ;incstack = 0
  1923                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  1924                           ;EUSART_Write@txData stored from wreg
  1925  0147  00F3               	movwf	EUSART_Write@txData
  1926  0148                     l1198:	
  1927                           ;eusart.c: 136: {
  1928                           
  1929                           ;eusart.c: 135: while(0 == eusartTxBufferRemaining)
  1930                           
  1931  0148  0020               	movlb	0	; select bank0
  1932  0149  083F               	movf	_eusartTxBufferRemaining,w	;volatile
  1933  014A  1903               	btfsc	3,2
  1934  014B  2948               	goto	l1198
  1935                           
  1936                           ;eusart.c: 137: }
  1937                           ;eusart.c: 139: if(0 == PIE1bits.TXIE)
  1938  014C  0021               	movlb	1	; select bank1
  1939  014D  1A11               	btfsc	17,4	;volatile
  1940  014E  2953               	goto	l123
  1941                           
  1942                           ;eusart.c: 140: {
  1943                           ;eusart.c: 141: TXREG = txData;
  1944  014F  0873               	movf	EUSART_Write@txData,w
  1945  0150  0023               	movlb	3	; select bank3
  1946  0151  009A               	movwf	26	;volatile
  1947                           
  1948                           ;eusart.c: 142: }
  1949  0152  2967               	goto	l1212
  1950  0153                     l123:	
  1951                           
  1952                           ;eusart.c: 143: else
  1953                           ;eusart.c: 144: {
  1954                           ;eusart.c: 145: PIE1bits.TXIE = 0;
  1955  0153  1211               	bcf	17,4	;volatile
  1956                           
  1957                           ;eusart.c: 146: eusartTxBuffer[eusartTxHead++] = txData;
  1958  0154  0873               	movf	EUSART_Write@txData,w
  1959  0155  00F2               	movwf	??_EUSART_Write
  1960  0156  087B               	movf	_eusartTxHead,w
  1961  0157  3E28               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  1962  0158  0086               	movwf	6
  1963  0159  0187               	clrf	7
  1964  015A  0872               	movf	??_EUSART_Write,w
  1965  015B  0081               	movwf	1
  1966  015C  3001               	movlw	1
  1967  015D  00F2               	movwf	??_EUSART_Write
  1968  015E  0872               	movf	??_EUSART_Write,w
  1969  015F  07FB               	addwf	_eusartTxHead,f	;volatile
  1970                           
  1971                           ;eusart.c: 147: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  1972  0160  3008               	movlw	8
  1973  0161  027B               	subwf	_eusartTxHead,w	;volatile
  1974  0162  1803               	btfsc	3,0
  1975                           
  1976                           ;eusart.c: 148: {
  1977                           ;eusart.c: 149: eusartTxHead = 0;
  1978  0163  01FB               	clrf	_eusartTxHead	;volatile
  1979                           
  1980                           ;eusart.c: 150: }
  1981                           ;eusart.c: 151: eusartTxBufferRemaining--;
  1982  0164  3001               	movlw	1
  1983  0165  0020               	movlb	0	; select bank0
  1984  0166  02BF               	subwf	_eusartTxBufferRemaining,f	;volatile
  1985  0167                     l1212:	
  1986                           
  1987                           ;eusart.c: 152: }
  1988                           ;eusart.c: 153: PIE1bits.TXIE = 1;
  1989  0167  0021               	movlb	1	; select bank1
  1990  0168  1611               	bsf	17,4	;volatile
  1991  0169  0008               	return
  1992  016A                     __end_of_EUSART_Write:	
  1993                           
  1994                           	psect	text6
  1995  0226                     __ptext6:	
  1996 ;; *************** function _SYSTEM_Initialize *****************
  1997 ;; Defined at:
  1998 ;;		line 70 in file "mcc_generated_files/mcc.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;		None
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;		None
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  1    wreg      void 
  2005 ;; Registers used:
  2006 ;;		wreg, status,2, status,0, pclath, cstack
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2012 ;;      Params:         0       0       0       0       0       0       0       0
  2013 ;;      Locals:         0       0       0       0       0       0       0       0
  2014 ;;      Temps:          0       0       0       0       0       0       0       0
  2015 ;;      Totals:         0       0       0       0       0       0       0       0
  2016 ;;Total ram usage:        0 bytes
  2017 ;; Hardware stack levels used:    1
  2018 ;; Hardware stack levels required when called:    3
  2019 ;; This function calls:
  2020 ;;		_EUSART_Initialize
  2021 ;;		_OSCILLATOR_Initialize
  2022 ;;		_PIN_MANAGER_Initialize
  2023 ;;		_WDT_Initialize
  2024 ;; This function is called by:
  2025 ;;		_main
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028                           
  2029                           
  2030                           ;psect for function _SYSTEM_Initialize
  2031  0226                     _SYSTEM_Initialize:	
  2032                           
  2033                           ;mcc.c: 73: PIN_MANAGER_Initialize();
  2034                           
  2035                           ;incstack = 0
  2036                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2037  0226  3181  216A  3182   	fcall	_PIN_MANAGER_Initialize
  2038                           
  2039                           ;mcc.c: 74: OSCILLATOR_Initialize();
  2040  0229  3182  224D  3182   	fcall	_OSCILLATOR_Initialize
  2041                           
  2042                           ;mcc.c: 75: WDT_Initialize();
  2043  022C  3182  2252  3182   	fcall	_WDT_Initialize
  2044                           
  2045                           ;mcc.c: 76: EUSART_Initialize();
  2046  022F  3181  21C7         	fcall	_EUSART_Initialize
  2047  0231  0008               	return
  2048  0232                     __end_of_SYSTEM_Initialize:	
  2049                           
  2050                           	psect	text7
  2051  0252                     __ptext7:	
  2052 ;; *************** function _WDT_Initialize *****************
  2053 ;; Defined at:
  2054 ;;		line 87 in file "mcc_generated_files/mcc.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;		None
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;		None
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  1    wreg      void 
  2061 ;; Registers used:
  2062 ;;		wreg
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2068 ;;      Params:         0       0       0       0       0       0       0       0
  2069 ;;      Locals:         0       0       0       0       0       0       0       0
  2070 ;;      Temps:          0       0       0       0       0       0       0       0
  2071 ;;      Totals:         0       0       0       0       0       0       0       0
  2072 ;;Total ram usage:        0 bytes
  2073 ;; Hardware stack levels used:    1
  2074 ;; Hardware stack levels required when called:    2
  2075 ;; This function calls:
  2076 ;;		Nothing
  2077 ;; This function is called by:
  2078 ;;		_SYSTEM_Initialize
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           
  2083                           ;psect for function _WDT_Initialize
  2084  0252                     _WDT_Initialize:	
  2085                           
  2086                           ;mcc.c: 90: WDTCON = 0x16;
  2087                           
  2088                           ;incstack = 0
  2089                           ; Regs used in _WDT_Initialize: [wreg]
  2090  0252  3016               	movlw	22
  2091  0253  0021               	movlb	1	; select bank1
  2092  0254  0097               	movwf	23	;volatile
  2093  0255  0008               	return
  2094  0256                     __end_of_WDT_Initialize:	
  2095                           
  2096                           	psect	text8
  2097  016A                     __ptext8:	
  2098 ;; *************** function _PIN_MANAGER_Initialize *****************
  2099 ;; Defined at:
  2100 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;		None
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;		None
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  1    wreg      void 
  2107 ;; Registers used:
  2108 ;;		wreg, status,2
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2114 ;;      Params:         0       0       0       0       0       0       0       0
  2115 ;;      Locals:         0       0       0       0       0       0       0       0
  2116 ;;      Temps:          0       0       0       0       0       0       0       0
  2117 ;;      Totals:         0       0       0       0       0       0       0       0
  2118 ;;Total ram usage:        0 bytes
  2119 ;; Hardware stack levels used:    1
  2120 ;; Hardware stack levels required when called:    2
  2121 ;; This function calls:
  2122 ;;		Nothing
  2123 ;; This function is called by:
  2124 ;;		_SYSTEM_Initialize
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           
  2129                           ;psect for function _PIN_MANAGER_Initialize
  2130  016A                     _PIN_MANAGER_Initialize:	
  2131                           
  2132                           ;pin_manager.c: 57: LATE = 0x00;
  2133                           
  2134                           ;incstack = 0
  2135                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2136  016A  0022               	movlb	2	; select bank2
  2137  016B  0190               	clrf	16	;volatile
  2138                           
  2139                           ;pin_manager.c: 58: LATD = 0x00;
  2140  016C  018F               	clrf	15	;volatile
  2141                           
  2142                           ;pin_manager.c: 59: LATA = 0x00;
  2143  016D  018C               	clrf	12	;volatile
  2144                           
  2145                           ;pin_manager.c: 60: LATB = 0x00;
  2146  016E  018D               	clrf	13	;volatile
  2147                           
  2148                           ;pin_manager.c: 61: LATC = 0x00;
  2149  016F  018E               	clrf	14	;volatile
  2150                           
  2151                           ;pin_manager.c: 66: TRISE = 0x0F;
  2152  0170  300F               	movlw	15
  2153  0171  0021               	movlb	1	; select bank1
  2154  0172  0090               	movwf	16	;volatile
  2155                           
  2156                           ;pin_manager.c: 67: TRISA = 0xFF;
  2157  0173  30FF               	movlw	255
  2158  0174  008C               	movwf	12	;volatile
  2159                           
  2160                           ;pin_manager.c: 68: TRISB = 0x00;
  2161  0175  018D               	clrf	13	;volatile
  2162                           
  2163                           ;pin_manager.c: 69: TRISC = 0xBF;
  2164  0176  30BF               	movlw	191
  2165  0177  008E               	movwf	14	;volatile
  2166                           
  2167                           ;pin_manager.c: 70: TRISD = 0xFF;
  2168  0178  30FF               	movlw	255
  2169  0179  008F               	movwf	15	;volatile
  2170                           
  2171                           ;pin_manager.c: 75: ANSELB = 0x3F;
  2172  017A  303F               	movlw	63
  2173  017B  0023               	movlb	3	; select bank3
  2174  017C  008D               	movwf	13	;volatile
  2175                           
  2176                           ;pin_manager.c: 76: ANSELD = 0xFF;
  2177  017D  30FF               	movlw	255
  2178  017E  008F               	movwf	15	;volatile
  2179                           
  2180                           ;pin_manager.c: 77: ANSELE = 0x07;
  2181  017F  3007               	movlw	7
  2182  0180  0090               	movwf	16	;volatile
  2183                           
  2184                           ;pin_manager.c: 78: ANSELA = 0x3F;
  2185  0181  303F               	movlw	63
  2186  0182  008C               	movwf	12	;volatile
  2187                           
  2188                           ;pin_manager.c: 83: WPUE = 0x08;
  2189  0183  3008               	movlw	8
  2190  0184  0024               	movlb	4	; select bank4
  2191  0185  0090               	movwf	16	;volatile
  2192                           
  2193                           ;pin_manager.c: 84: WPUB = 0xFF;
  2194  0186  30FF               	movlw	255
  2195  0187  008D               	movwf	13	;volatile
  2196                           
  2197                           ;pin_manager.c: 85: OPTION_REGbits.nWPUEN = 0;
  2198  0188  0021               	movlb	1	; select bank1
  2199  0189  1395               	bcf	21,7	;volatile
  2200                           
  2201                           ;pin_manager.c: 91: APFCON = 0x00;
  2202  018A  0022               	movlb	2	; select bank2
  2203  018B  019D               	clrf	29	;volatile
  2204  018C  0008               	return
  2205  018D                     __end_of_PIN_MANAGER_Initialize:	
  2206                           
  2207                           	psect	text9
  2208  024D                     __ptext9:	
  2209 ;; *************** function _OSCILLATOR_Initialize *****************
  2210 ;; Defined at:
  2211 ;;		line 79 in file "mcc_generated_files/mcc.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;		None
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;		None
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  1    wreg      void 
  2218 ;; Registers used:
  2219 ;;		wreg, status,2
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2225 ;;      Params:         0       0       0       0       0       0       0       0
  2226 ;;      Locals:         0       0       0       0       0       0       0       0
  2227 ;;      Temps:          0       0       0       0       0       0       0       0
  2228 ;;      Totals:         0       0       0       0       0       0       0       0
  2229 ;;Total ram usage:        0 bytes
  2230 ;; Hardware stack levels used:    1
  2231 ;; Hardware stack levels required when called:    2
  2232 ;; This function calls:
  2233 ;;		Nothing
  2234 ;; This function is called by:
  2235 ;;		_SYSTEM_Initialize
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           
  2240                           ;psect for function _OSCILLATOR_Initialize
  2241  024D                     _OSCILLATOR_Initialize:	
  2242                           
  2243                           ;mcc.c: 82: OSCCON = 0x38;
  2244                           
  2245                           ;incstack = 0
  2246                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2247  024D  3038               	movlw	56
  2248  024E  0021               	movlb	1	; select bank1
  2249  024F  0099               	movwf	25	;volatile
  2250                           
  2251                           ;mcc.c: 84: OSCTUNE = 0x00;
  2252  0250  0198               	clrf	24	;volatile
  2253  0251  0008               	return
  2254  0252                     __end_of_OSCILLATOR_Initialize:	
  2255                           
  2256                           	psect	text10
  2257  01C7                     __ptext10:	
  2258 ;; *************** function _EUSART_Initialize *****************
  2259 ;; Defined at:
  2260 ;;		line 76 in file "mcc_generated_files/eusart.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;		None
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;		None
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      void 
  2267 ;; Registers used:
  2268 ;;		wreg, status,2
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2274 ;;      Params:         0       0       0       0       0       0       0       0
  2275 ;;      Locals:         0       0       0       0       0       0       0       0
  2276 ;;      Temps:          1       0       0       0       0       0       0       0
  2277 ;;      Totals:         1       0       0       0       0       0       0       0
  2278 ;;Total ram usage:        1 bytes
  2279 ;; Hardware stack levels used:    1
  2280 ;; Hardware stack levels required when called:    2
  2281 ;; This function calls:
  2282 ;;		Nothing
  2283 ;; This function is called by:
  2284 ;;		_SYSTEM_Initialize
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           
  2289                           ;psect for function _EUSART_Initialize
  2290  01C7                     _EUSART_Initialize:	
  2291                           
  2292                           ;eusart.c: 79: PIE1bits.RCIE = 0;
  2293                           
  2294                           ;incstack = 0
  2295                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  2296  01C7  0021               	movlb	1	; select bank1
  2297  01C8  1291               	bcf	17,5	;volatile
  2298                           
  2299                           ;eusart.c: 80: PIE1bits.TXIE = 0;
  2300  01C9  1211               	bcf	17,4	;volatile
  2301                           
  2302                           ;eusart.c: 85: BAUDCON = 0x08;
  2303  01CA  3008               	movlw	8
  2304  01CB  0023               	movlb	3	; select bank3
  2305  01CC  009F               	movwf	31	;volatile
  2306                           
  2307                           ;eusart.c: 88: RCSTA = 0x90;
  2308  01CD  3090               	movlw	144
  2309  01CE  009D               	movwf	29	;volatile
  2310                           
  2311                           ;eusart.c: 91: TXSTA = 0x24;
  2312  01CF  3024               	movlw	36
  2313  01D0  009E               	movwf	30	;volatile
  2314                           
  2315                           ;eusart.c: 94: SPBRGL = 0xDF;
  2316  01D1  30DF               	movlw	223
  2317  01D2  009B               	movwf	27	;volatile
  2318                           
  2319                           ;eusart.c: 97: SPBRGH = 0x01;
  2320  01D3  3001               	movlw	1
  2321  01D4  009C               	movwf	28	;volatile
  2322                           
  2323                           ;eusart.c: 101: eusartTxHead = 0;
  2324  01D5  01FB               	clrf	_eusartTxHead	;volatile
  2325                           
  2326                           ;eusart.c: 102: eusartTxTail = 0;
  2327  01D6  01FA               	clrf	_eusartTxTail	;volatile
  2328                           
  2329                           ;eusart.c: 103: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  2330  01D7  3008               	movlw	8
  2331  01D8  00F2               	movwf	??_EUSART_Initialize
  2332  01D9  0872               	movf	??_EUSART_Initialize,w
  2333  01DA  0020               	movlb	0	; select bank0
  2334  01DB  00BF               	movwf	_eusartTxBufferRemaining	;volatile
  2335                           
  2336                           ;eusart.c: 105: eusartRxHead = 0;
  2337  01DC  01B7               	clrf	_eusartRxHead	;volatile
  2338                           
  2339                           ;eusart.c: 106: eusartRxTail = 0;
  2340  01DD  01B6               	clrf	_eusartRxTail	;volatile
  2341                           
  2342                           ;eusart.c: 107: eusartRxCount = 0;
  2343  01DE  01B5               	clrf	_eusartRxCount	;volatile
  2344                           
  2345                           ;eusart.c: 110: PIE1bits.RCIE = 1;
  2346  01DF  0021               	movlb	1	; select bank1
  2347  01E0  1691               	bsf	17,5	;volatile
  2348  01E1  0008               	return
  2349  01E2                     __end_of_EUSART_Initialize:	
  2350                           
  2351                           	psect	intentry
  2352  0004                     __pintentry:	
  2353 ;; *************** function _INTERRUPT_InterruptManager *****************
  2354 ;; Defined at:
  2355 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;		None
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;		None
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  1    wreg      void 
  2362 ;; Registers used:
  2363 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2369 ;;      Params:         0       0       0       0       0       0       0       0
  2370 ;;      Locals:         0       0       0       0       0       0       0       0
  2371 ;;      Temps:          1       0       0       0       0       0       0       0
  2372 ;;      Totals:         1       0       0       0       0       0       0       0
  2373 ;;Total ram usage:        1 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; Hardware stack levels required when called:    1
  2376 ;; This function calls:
  2377 ;;		_EUSART_Receive_ISR
  2378 ;;		_EUSART_Transmit_ISR
  2379 ;; This function is called by:
  2380 ;;		Interrupt level 1
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384  0004                     _INTERRUPT_InterruptManager:	
  2385                           
  2386                           ;incstack = 0
  2387  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2388                           
  2389                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  2390  0005  3180               	pagesel	$
  2391  0006  0020               	movlb	0	; select bank0
  2392  0007  087F               	movf	127,w
  2393  0008  00F1               	movwf	??_INTERRUPT_InterruptManager
  2394                           
  2395                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE1bits.TXIE == 1 && PIR1bits.TXIF
      +                           == 1)
  2396  0009  1F0B               	btfss	11,6	;volatile
  2397  000A  2815               	goto	i1l161
  2398  000B  0021               	movlb	1	; select bank1
  2399  000C  1E11               	btfss	17,4	;volatile
  2400  000D  2815               	goto	i1l161
  2401  000E  0020               	movlb	0	; select bank0
  2402  000F  1E11               	btfss	17,4	;volatile
  2403  0010  2815               	goto	i1l161
  2404                           
  2405                           ;interrupt_manager.c: 55: {
  2406                           ;interrupt_manager.c: 56: EUSART_Transmit_ISR();
  2407  0011  3181  21AA  3180   	fcall	_EUSART_Transmit_ISR
  2408                           
  2409                           ;interrupt_manager.c: 57: }
  2410  0014  281F               	goto	i1l165
  2411  0015                     i1l161:	
  2412                           
  2413                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE1bits.RCIE == 1 && PIR1bits
      +                          .RCIF == 1)
  2414  0015  1F0B               	btfss	11,6	;volatile
  2415  0016  281F               	goto	i1l165
  2416  0017  0021               	movlb	1	; select bank1
  2417  0018  1E91               	btfss	17,5	;volatile
  2418  0019  281F               	goto	i1l165
  2419  001A  0020               	movlb	0	; select bank0
  2420  001B  1E91               	btfss	17,5	;volatile
  2421  001C  281F               	goto	i1l165
  2422                           
  2423                           ;interrupt_manager.c: 59: {
  2424                           ;interrupt_manager.c: 61: EUSART_Receive_ISR();
  2425  001D  3181  2110         	fcall	_EUSART_Receive_ISR
  2426  001F                     i1l165:	
  2427                           ;interrupt_manager.c: 63: else
  2428                           ;interrupt_manager.c: 64: {
  2429                           
  2430                           ;interrupt_manager.c: 62: }
  2431                           
  2432  001F  0871               	movf	??_INTERRUPT_InterruptManager,w
  2433  0020  0020               	movlb	0	; select bank0
  2434  0021  00FF               	movwf	127
  2435  0022  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2436  0023  0009               	retfie
  2437  0024                     __end_of_INTERRUPT_InterruptManager:	
  2438                           
  2439                           	psect	text12
  2440  01AA                     __ptext12:	
  2441 ;; *************** function _EUSART_Transmit_ISR *****************
  2442 ;; Defined at:
  2443 ;;		line 166 in file "mcc_generated_files/eusart.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;		None
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;		None
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  1    wreg      void 
  2450 ;; Registers used:
  2451 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2457 ;;      Params:         0       0       0       0       0       0       0       0
  2458 ;;      Locals:         0       0       0       0       0       0       0       0
  2459 ;;      Temps:          1       0       0       0       0       0       0       0
  2460 ;;      Totals:         1       0       0       0       0       0       0       0
  2461 ;;Total ram usage:        1 bytes
  2462 ;; Hardware stack levels used:    1
  2463 ;; This function calls:
  2464 ;;		Nothing
  2465 ;; This function is called by:
  2466 ;;		_INTERRUPT_InterruptManager
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           
  2471                           ;psect for function _EUSART_Transmit_ISR
  2472  01AA                     _EUSART_Transmit_ISR:	
  2473                           
  2474                           ;eusart.c: 170: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  2475                           
  2476                           ;incstack = 0
  2477                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2478  01AA  3008               	movlw	8
  2479  01AB  0020               	movlb	0	; select bank0
  2480  01AC  023F               	subwf	_eusartTxBufferRemaining,w	;volatile
  2481  01AD  1803               	skipnc
  2482  01AE  29C4               	goto	i1l135
  2483                           
  2484                           ;eusart.c: 171: {
  2485                           ;eusart.c: 172: TXREG = eusartTxBuffer[eusartTxTail++];
  2486  01AF  087A               	movf	_eusartTxTail,w
  2487  01B0  3E28               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  2488  01B1  0086               	movwf	6
  2489  01B2  0187               	clrf	7
  2490  01B3  0801               	movf	1,w
  2491  01B4  0023               	movlb	3	; select bank3
  2492  01B5  009A               	movwf	26	;volatile
  2493  01B6  3001               	movlw	1
  2494  01B7  00F0               	movwf	??_EUSART_Transmit_ISR
  2495  01B8  0870               	movf	??_EUSART_Transmit_ISR,w
  2496  01B9  07FA               	addwf	_eusartTxTail,f	;volatile
  2497                           
  2498                           ;eusart.c: 173: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  2499  01BA  3008               	movlw	8
  2500  01BB  027A               	subwf	_eusartTxTail,w	;volatile
  2501  01BC  1803               	btfsc	3,0
  2502                           
  2503                           ;eusart.c: 174: {
  2504                           ;eusart.c: 175: eusartTxTail = 0;
  2505  01BD  01FA               	clrf	_eusartTxTail	;volatile
  2506                           
  2507                           ;eusart.c: 176: }
  2508                           ;eusart.c: 177: eusartTxBufferRemaining++;
  2509  01BE  3001               	movlw	1
  2510  01BF  00F0               	movwf	??_EUSART_Transmit_ISR
  2511  01C0  0870               	movf	??_EUSART_Transmit_ISR,w
  2512  01C1  0020               	movlb	0	; select bank0
  2513  01C2  07BF               	addwf	_eusartTxBufferRemaining,f	;volatile
  2514                           
  2515                           ;eusart.c: 178: }
  2516  01C3  0008               	return
  2517  01C4                     i1l135:	
  2518                           
  2519                           ;eusart.c: 179: else
  2520                           ;eusart.c: 180: {
  2521                           ;eusart.c: 181: PIE1bits.TXIE = 0;
  2522  01C4  0021               	movlb	1	; select bank1
  2523  01C5  1211               	bcf	17,4	;volatile
  2524  01C6  0008               	return
  2525  01C7                     __end_of_EUSART_Transmit_ISR:	
  2526                           
  2527                           	psect	text13
  2528  0110                     __ptext13:	
  2529 ;; *************** function _EUSART_Receive_ISR *****************
  2530 ;; Defined at:
  2531 ;;		line 185 in file "mcc_generated_files/eusart.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;		None
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;		None
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2545 ;;      Params:         0       0       0       0       0       0       0       0
  2546 ;;      Locals:         0       0       0       0       0       0       0       0
  2547 ;;      Temps:          1       0       0       0       0       0       0       0
  2548 ;;      Totals:         1       0       0       0       0       0       0       0
  2549 ;;Total ram usage:        1 bytes
  2550 ;; Hardware stack levels used:    1
  2551 ;; This function calls:
  2552 ;;		Nothing
  2553 ;; This function is called by:
  2554 ;;		_INTERRUPT_InterruptManager
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           
  2559                           ;psect for function _EUSART_Receive_ISR
  2560  0110                     _EUSART_Receive_ISR:	
  2561                           
  2562                           ;eusart.c: 188: if(1 == RCSTAbits.OERR)
  2563                           
  2564                           ;incstack = 0
  2565                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  2566  0110  0023               	movlb	3	; select bank3
  2567  0111  1C9D               	btfss	29,1	;volatile
  2568  0112  2915               	goto	i1l1046
  2569                           
  2570                           ;eusart.c: 189: {
  2571                           ;eusart.c: 192: RCSTAbits.CREN = 0;
  2572  0113  121D               	bcf	29,4	;volatile
  2573                           
  2574                           ;eusart.c: 193: RCSTAbits.CREN = 1;
  2575  0114  161D               	bsf	29,4	;volatile
  2576  0115                     i1l1046:	
  2577                           
  2578                           ;eusart.c: 194: }
  2579                           ;eusart.c: 197: eusartRxBuffer[eusartRxHead++] = RCREG;
  2580  0115  0819               	movf	25,w	;volatile
  2581  0116  00F0               	movwf	??_EUSART_Receive_ISR
  2582  0117  0020               	movlb	0	; select bank0
  2583  0118  0837               	movf	_eusartRxHead,w
  2584  0119  3E20               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  2585  011A  0086               	movwf	6
  2586  011B  0187               	clrf	7
  2587  011C  0870               	movf	??_EUSART_Receive_ISR,w
  2588  011D  0081               	movwf	1
  2589  011E  3001               	movlw	1
  2590  011F  00F0               	movwf	??_EUSART_Receive_ISR
  2591  0120  0870               	movf	??_EUSART_Receive_ISR,w
  2592  0121  07B7               	addwf	_eusartRxHead,f	;volatile
  2593                           
  2594                           ;eusart.c: 198: rcreg=RCREG;
  2595  0122  0023               	movlb	3	; select bank3
  2596  0123  0819               	movf	25,w	;volatile
  2597  0124  00F0               	movwf	??_EUSART_Receive_ISR
  2598  0125  0870               	movf	??_EUSART_Receive_ISR,w
  2599  0126  0020               	movlb	0	; select bank0
  2600  0127  00B4               	movwf	_rcreg	;volatile
  2601                           
  2602                           ;eusart.c: 200: if(rcreg=='X')
  2603  0128  3058               	movlw	88
  2604  0129  0634               	xorwf	_rcreg,w	;volatile
  2605  012A  1D03               	btfss	3,2
  2606  012B  2935               	goto	i1l1058
  2607                           
  2608                           ;eusart.c: 201: {
  2609                           ;eusart.c: 202: LATB=0xAA;
  2610  012C  30AA               	movlw	170
  2611  012D  0022               	movlb	2	; select bank2
  2612  012E  008D               	movwf	13	;volatile
  2613                           
  2614                           ;eusart.c: 203: flag_G=1;
  2615  012F  3001               	movlw	1
  2616  0130  0020               	movlb	0	; select bank0
  2617  0131  00B0               	movwf	_flag_G
  2618  0132  3000               	movlw	0
  2619  0133  00B1               	movwf	_flag_G+1
  2620  0134  293D               	goto	i1l1062
  2621  0135                     i1l1058:	
  2622                           ;eusart.c: 205: }
  2623                           
  2624                           ;eusart.c: 204: rcreg=0;
  2625                           
  2626                           
  2627                           ;eusart.c: 206: else if(rcreg=='Y')
  2628  0135  3059               	movlw	89
  2629  0136  0634               	xorwf	_rcreg,w	;volatile
  2630  0137  1D03               	btfss	3,2
  2631  0138  293E               	goto	i1l1064
  2632                           
  2633                           ;eusart.c: 207: {
  2634                           ;eusart.c: 208: flag_N=1;
  2635  0139  3001               	movlw	1
  2636  013A  00B2               	movwf	_flag_N
  2637  013B  3000               	movlw	0
  2638  013C  00B3               	movwf	_flag_N+1
  2639  013D                     i1l1062:	
  2640                           
  2641                           ;eusart.c: 209: rcreg=0;
  2642  013D  01B4               	clrf	_rcreg	;volatile
  2643  013E                     i1l1064:	
  2644                           
  2645                           ;eusart.c: 210: }
  2646                           ;eusart.c: 215: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  2647  013E  3008               	movlw	8
  2648  013F  0237               	subwf	_eusartRxHead,w	;volatile
  2649  0140  1803               	btfsc	3,0
  2650                           
  2651                           ;eusart.c: 216: {
  2652                           ;eusart.c: 217: eusartRxHead = 0;
  2653  0141  01B7               	clrf	_eusartRxHead	;volatile
  2654                           
  2655                           ;eusart.c: 218: }
  2656                           ;eusart.c: 219: eusartRxCount++;
  2657  0142  3001               	movlw	1
  2658  0143  00F0               	movwf	??_EUSART_Receive_ISR
  2659  0144  0870               	movf	??_EUSART_Receive_ISR,w
  2660  0145  07B5               	addwf	_eusartRxCount,f	;volatile
  2661  0146  0008               	return
  2662  0147                     __end_of_EUSART_Receive_ISR:	
  2663  007E                     btemp	set	126	;btemp
  2664  007E                     int$flags	set	126
  2665  007E                     wtemp0	set	126


Data Sizes:
    Strings     87
    Constant    0
    Data        0
    BSS         26
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      7      32
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_7(CODE[18]), STR_6(CODE[10]), STR_5(CODE[15]), STR_4(CODE[3]), 
		 -> STR_3(CODE[6]), STR_2(CODE[21]), STR_1(CODE[14]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _int_gsm->_printf
    _printf->_putch
    _putch->_EUSART_Write
    _SYSTEM_Initialize->_EUSART_Initialize

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR

Critical Paths under _main in BANK0

    _main->_int_gsm
    _int_gsm->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     736
                                              4 BANK0      3     3      0
                  _SYSTEM_Initialize
                            _int_gsm
                           _turn_egs
 ---------------------------------------------------------------------------------
 (1) _turn_egs                                             3     3      0      24
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _int_gsm                                              2     2      0     709
                                              2 BANK0      2     2      0
                             _printf
                              _putch
 ---------------------------------------------------------------------------------
 (2) _printf                                              19    17      2     616
                                              5 COMMON     5     3      2
                                              0 BANK0      2     2      0
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      93
                                              4 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      62
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
 ---------------------------------------------------------------------------------
 (6) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _int_gsm
     _printf
       _putch
         _EUSART_Write
     _putch
       _EUSART_Write
   _turn_egs

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      7      20       6       40.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      2C      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu Oct 05 14:48:02 2017

                        __CFG_CP$OFF 0000                          __CFG_LVP$ON 0000  
                                l123 0153                                  u345 009B  
                       __CFG_CPD$OFF 0000                                  u507 0109  
                                u517 00A9                                  u527 00B6  
                                u537 00C3                                  u547 00D0  
                                u557 0044                                  u567 005B  
                                u577 0072                                  u497 00E8  
                                u587 0089                         __CFG_BORV$LO 0000  
                                wreg 0009                         __CFG_IESO$ON 0000  
                       __CFG_FOSC$HS 0000                                 l1212 0167  
                               l1220 0192                                 l1280 00F2  
                               l1198 0148                                 STR_1 0218  
                               STR_2 01E2                                 STR_3 023C  
                               STR_4 0256                                 STR_5 0209  
                               STR_6 0232                                 STR_7 01F7  
                               _LATA 010C                                 _LATB 010D  
                               _LATC 010E                                 _LATD 010F  
                               _LATE 0110                                 _WPUB 020D  
                               _WPUE 0210                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _main 00D6  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                               start 0024                        __CFG_MCLRE$ON 0000  
                      ?_EUSART_Write 0070       __size_of_OSCILLATOR_Initialize 0005  
      __end_of_OSCILLATOR_Initialize 0252                                ?_main 0070  
                      __CFG_WDTE$OFF 0000                                i1l135 01C4  
                              i1l161 0015                                i1l165 001F  
                              _RCREG 0199                                _RCSTA 019D  
                              _TRISA 008C                                _TRISB 008D  
                              _TRISC 008E                                _TRISD 008F  
                              _TRISE 0090                                _TXREG 019A  
                              _TXSTA 019E                       _WDT_Initialize 0252  
                              _rcreg 0034                      __end_of_int_gsm 0090  
                              _putch 0248                                main@x 003E  
                              status 0003                                wtemp0 007E  
                    __initialization 0026                         __end_of_main 0110  
                     ??_EUSART_Write 0072          ?_INTERRUPT_InterruptManager 0070  
                             ??_main 003C                       __CFG_PLLEN$OFF 0000  
             __end_of_WDT_Initialize 0256                               _APFCON 011D  
                             _ANSELA 018C                               ?_putch 0070  
                             _ANSELB 018D                               _ANSELD 018F  
                             _ANSELE 0190                               i1l1062 013D  
                             i1l1046 0115                               i1l1064 013E  
                             i1l1058 0135                               _OSCCON 0099  
                             _SPBRGH 019C                               _SPBRGL 019B  
                             _WDTCON 0097                       __CFG_PWRTE$OFF 0000  
                     __CFG_STVREN$ON 0000                               _flag_G 0030  
                             _flag_N 0032                  _EUSART_Transmit_ISR 01AA  
                             _printf 018D                            ??_int_gsm 003A  
                    ?_WDT_Initialize 0070                 ?_EUSART_Transmit_ISR 0070  
                   __end_of_turn_egs 00D6                    _SYSTEM_Initialize 0226  
            __end_of__initialization 002F                   ?_SYSTEM_Initialize 0070  
                     __pcstackCOMMON 0070                  ??_SYSTEM_Initialize 0073  
                      __end_of_putch 024D                       _OPTION_REGbits 0095  
          __end_of_SYSTEM_Initialize 0232                ??_EUSART_Transmit_ISR 0070  
                            ??_putch 0074                           __pbssBANK0 0020  
               __end_of_EUSART_Write 016A                      __CFG_VCAPEN$OFF 0000  
        __size_of_EUSART_Receive_ISR 0037                           __pmaintext 00D6  
                         __pintentry 0004                              _BAUDCON 019F  
                            ?_printf 0075                        _eusartRxCount 0035  
                            _OSCTUNE 0098                              __ptext1 0090  
                            __ptext2 0033                              __ptext3 018D  
                            __ptext4 0248                              __ptext5 0147  
                            __ptext6 0226                              __ptext7 0252  
                            __ptext8 016A                              __ptext9 024D  
                          ?_turn_egs 0070                      __size_of_printf 001D  
              _OSCILLATOR_Initialize 024D                              _int_gsm 0033  
           ??_PIN_MANAGER_Initialize 0072           __size_of_SYSTEM_Initialize 000C  
                            clrloop0 0243                 end_of_initialization 002F  
                  _EUSART_Initialize 01C7                   ?_EUSART_Initialize 0070  
                          _RCSTAbits 019D                              printf@c 0039  
                            printf@f 0075                  ??_EUSART_Initialize 0072  
                   ??_WDT_Initialize 0072                           ??_turn_egs 0072  
                          _TRISCbits 008E                __size_of_EUSART_Write 0023  
          __end_of_EUSART_Initialize 01E2                         _EUSART_Write 0147  
             ?_OSCILLATOR_Initialize 0070                       __end_of_printf 01AA  
                start_initialization 0026      __size_of_PIN_MANAGER_Initialize 0023  
                        putch@txData 0074                             ??_printf 0077  
        __end_of_EUSART_Transmit_ISR 01C7                          __pbssCOMMON 007A  
                          ___latbits 0002                        __pcstackBANK0 0038  
         __end_of_EUSART_Receive_ISR 0147           __size_of_EUSART_Initialize 001B  
                          __pnvBANK0 003F               _PIN_MANAGER_Initialize 016A  
                       _eusartRxHead 0037                         _eusartTxHead 007B  
                       _eusartRxTail 0036                         _eusartTxTail 007A  
       ??_INTERRUPT_InterruptManager 0071              _eusartTxBufferRemaining 003F  
                           ?_int_gsm 0070                    __size_of_turn_egs 0046  
                     __size_of_putch 0005                       _eusartRxBuffer 0020  
                     _eusartTxBuffer 0028                             _LATCbits 010E  
                          clear_ram0 0242                             _PIE1bits 0091  
__size_of_INTERRUPT_InterruptManager 0020                             _PIR1bits 0011  
            ??_OSCILLATOR_Initialize 0072                     __size_of_int_gsm 005D  
                           __ptext10 01C7                             __ptext12 01AA  
                           __ptext13 0110                        __size_of_main 003A  
                           int$flags 007E                           turn_egs@nr 0073  
 __end_of_INTERRUPT_InterruptManager 0024           _INTERRUPT_InterruptManager 0004  
                           _turn_egs 0090                           _INTCONbits 000B  
            __size_of_WDT_Initialize 0004                             intlevel1 0000  
            ?_PIN_MANAGER_Initialize 0070                    __CFG_CLKOUTEN$OFF 0000  
                           printf@ap 0038                   _EUSART_Receive_ISR 0110  
                      __pstringtext1 01E2                        __pstringtext2 01F7  
                      __pstringtext3 0209                        __pstringtext4 0218  
                      __pstringtext5 0232                        __pstringtext6 023C  
                      __pstringtext7 0256                        __pstringtext8 0000  
                ?_EUSART_Receive_ISR 0070                   EUSART_Write@txData 0073  
       __size_of_EUSART_Transmit_ISR 001D       __end_of_PIN_MANAGER_Initialize 018D  
               ??_EUSART_Receive_ISR 0070  
