

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Fri Dec 01 11:55:13 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F1937
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	stringtext2,global,class=STRCODE,delta=2
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	stringtext5,global,class=STRCODE,delta=2
    13                           	psect	stringtext6,global,class=STRCODE,delta=2
    14                           	psect	stringtext7,global,class=STRCODE,delta=2
    15                           	psect	stringtext8,global,class=STRCODE,delta=2
    16                           	psect	stringtext9,global,class=STRCODE,delta=2
    17                           	psect	stringtext10,global,class=STRCODE,delta=2
    18                           	psect	stringtext11,global,class=STRCODE,delta=2
    19                           	psect	stringtext12,global,class=STRCODE,delta=2
    20                           	psect	stringtext13,global,class=STRCODE,delta=2
    21                           	psect	stringtext14,global,class=STRCODE,delta=2
    22                           	psect	cinit,global,class=CODE,merge=1,delta=2
    23                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    26                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    27                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    28                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    29                           	psect	inittext,global,class=CODE,delta=2
    30                           	psect	clrtext,global,class=CODE,delta=2
    31                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    32                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    33                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    34                           	psect	text1,local,class=CODE,merge=1,delta=2
    35                           	psect	text2,local,class=CODE,merge=1,delta=2
    36                           	psect	text3,local,class=CODE,merge=1,delta=2
    37                           	psect	text4,local,class=CODE,merge=1,delta=2
    38                           	psect	text5,local,class=CODE,merge=1,delta=2
    39                           	psect	text6,local,class=CODE,merge=1,delta=2
    40                           	psect	text7,local,class=CODE,merge=1,delta=2
    41                           	psect	text8,local,class=CODE,merge=1,delta=2
    42                           	psect	text9,local,class=CODE,merge=1,delta=2
    43                           	psect	text10,local,class=CODE,merge=1,delta=2
    44                           	psect	text11,local,class=CODE,merge=1,delta=2
    45                           	psect	text12,local,class=CODE,merge=1,delta=2
    46                           	psect	text13,local,class=CODE,merge=1,delta=2
    47                           	psect	text14,local,class=CODE,merge=1,delta=2
    48                           	psect	text15,local,class=CODE,merge=1,delta=2
    49                           	psect	text16,local,class=CODE,merge=1,delta=2
    50                           	psect	text17,local,class=CODE,merge=1,delta=2
    51                           	psect	intentry,global,class=CODE,delta=2
    52                           	psect	text19,local,class=CODE,merge=1,delta=2
    53                           	psect	text20,local,class=CODE,merge=1,delta=2
    54                           	psect	text21,local,class=CODE,merge=1,delta=2
    55                           	psect	text22,local,class=CODE,merge=1,delta=2
    56                           	psect	text23,local,class=CODE,merge=1,delta=2
    57                           	psect	text24,local,class=CODE,merge=1,delta=2
    58                           	psect	text25,local,class=CODE,merge=1,delta=2
    59                           	dabs	1,0x7E,2
    60  0000                     
    61                           ; Version 1.42
    62                           ; Generated 13/04/2017 GMT
    63                           ; 
    64                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC16F1937 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     	;# 
    96  0001                     	;# 
    97  0002                     	;# 
    98  0003                     	;# 
    99  0004                     	;# 
   100  0005                     	;# 
   101  0006                     	;# 
   102  0007                     	;# 
   103  0008                     	;# 
   104  0009                     	;# 
   105  000A                     	;# 
   106  000B                     	;# 
   107  000C                     	;# 
   108  000D                     	;# 
   109  000E                     	;# 
   110  000F                     	;# 
   111  0010                     	;# 
   112  0011                     	;# 
   113  0012                     	;# 
   114  0013                     	;# 
   115  0015                     	;# 
   116  0016                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001B                     	;# 
   123  001C                     	;# 
   124  001E                     	;# 
   125  001F                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  008F                     	;# 
   130  0090                     	;# 
   131  0091                     	;# 
   132  0092                     	;# 
   133  0093                     	;# 
   134  0095                     	;# 
   135  0096                     	;# 
   136  0097                     	;# 
   137  0098                     	;# 
   138  0099                     	;# 
   139  009A                     	;# 
   140  009B                     	;# 
   141  009B                     	;# 
   142  009C                     	;# 
   143  009D                     	;# 
   144  009E                     	;# 
   145  010C                     	;# 
   146  010D                     	;# 
   147  010E                     	;# 
   148  010F                     	;# 
   149  0110                     	;# 
   150  0111                     	;# 
   151  0112                     	;# 
   152  0113                     	;# 
   153  0114                     	;# 
   154  0115                     	;# 
   155  0116                     	;# 
   156  0117                     	;# 
   157  0118                     	;# 
   158  0119                     	;# 
   159  011A                     	;# 
   160  011B                     	;# 
   161  011D                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164  018F                     	;# 
   165  0190                     	;# 
   166  0191                     	;# 
   167  0191                     	;# 
   168  0192                     	;# 
   169  0193                     	;# 
   170  0193                     	;# 
   171  0193                     	;# 
   172  0194                     	;# 
   173  0195                     	;# 
   174  0196                     	;# 
   175  0199                     	;# 
   176  019A                     	;# 
   177  019B                     	;# 
   178  019B                     	;# 
   179  019B                     	;# 
   180  019B                     	;# 
   181  019C                     	;# 
   182  019C                     	;# 
   183  019D                     	;# 
   184  019E                     	;# 
   185  019F                     	;# 
   186  020D                     	;# 
   187  0210                     	;# 
   188  0211                     	;# 
   189  0212                     	;# 
   190  0213                     	;# 
   191  0214                     	;# 
   192  0215                     	;# 
   193  0215                     	;# 
   194  0216                     	;# 
   195  0217                     	;# 
   196  0291                     	;# 
   197  0291                     	;# 
   198  0292                     	;# 
   199  0293                     	;# 
   200  0294                     	;# 
   201  0295                     	;# 
   202  0295                     	;# 
   203  0296                     	;# 
   204  0298                     	;# 
   205  0298                     	;# 
   206  0299                     	;# 
   207  029A                     	;# 
   208  029B                     	;# 
   209  029C                     	;# 
   210  029C                     	;# 
   211  029D                     	;# 
   212  029E                     	;# 
   213  029F                     	;# 
   214  0311                     	;# 
   215  0311                     	;# 
   216  0312                     	;# 
   217  0313                     	;# 
   218  0314                     	;# 
   219  0315                     	;# 
   220  0315                     	;# 
   221  0316                     	;# 
   222  0318                     	;# 
   223  0318                     	;# 
   224  0319                     	;# 
   225  031A                     	;# 
   226  031C                     	;# 
   227  031C                     	;# 
   228  031D                     	;# 
   229  031E                     	;# 
   230  0394                     	;# 
   231  0395                     	;# 
   232  0396                     	;# 
   233  0415                     	;# 
   234  0416                     	;# 
   235  0417                     	;# 
   236  041C                     	;# 
   237  041D                     	;# 
   238  041E                     	;# 
   239  0791                     	;# 
   240  0792                     	;# 
   241  0793                     	;# 
   242  0794                     	;# 
   243  0795                     	;# 
   244  0798                     	;# 
   245  0799                     	;# 
   246  079A                     	;# 
   247  07A0                     	;# 
   248  07A1                     	;# 
   249  07A2                     	;# 
   250  07A3                     	;# 
   251  07A4                     	;# 
   252  07A5                     	;# 
   253  07A6                     	;# 
   254  07A7                     	;# 
   255  07A8                     	;# 
   256  07A9                     	;# 
   257  07AA                     	;# 
   258  07AB                     	;# 
   259  0FE4                     	;# 
   260  0FE5                     	;# 
   261  0FE6                     	;# 
   262  0FE7                     	;# 
   263  0FE8                     	;# 
   264  0FE9                     	;# 
   265  0FEA                     	;# 
   266  0FEB                     	;# 
   267  0FED                     	;# 
   268  0FEE                     	;# 
   269  0FEF                     	;# 
   270  0000                     	;# 
   271  0001                     	;# 
   272  0002                     	;# 
   273  0003                     	;# 
   274  0004                     	;# 
   275  0005                     	;# 
   276  0006                     	;# 
   277  0007                     	;# 
   278  0008                     	;# 
   279  0009                     	;# 
   280  000A                     	;# 
   281  000B                     	;# 
   282  000C                     	;# 
   283  000D                     	;# 
   284  000E                     	;# 
   285  000F                     	;# 
   286  0010                     	;# 
   287  0011                     	;# 
   288  0012                     	;# 
   289  0013                     	;# 
   290  0015                     	;# 
   291  0016                     	;# 
   292  0016                     	;# 
   293  0017                     	;# 
   294  0018                     	;# 
   295  0019                     	;# 
   296  001A                     	;# 
   297  001B                     	;# 
   298  001C                     	;# 
   299  001E                     	;# 
   300  001F                     	;# 
   301  008C                     	;# 
   302  008D                     	;# 
   303  008E                     	;# 
   304  008F                     	;# 
   305  0090                     	;# 
   306  0091                     	;# 
   307  0092                     	;# 
   308  0093                     	;# 
   309  0095                     	;# 
   310  0096                     	;# 
   311  0097                     	;# 
   312  0098                     	;# 
   313  0099                     	;# 
   314  009A                     	;# 
   315  009B                     	;# 
   316  009B                     	;# 
   317  009C                     	;# 
   318  009D                     	;# 
   319  009E                     	;# 
   320  010C                     	;# 
   321  010D                     	;# 
   322  010E                     	;# 
   323  010F                     	;# 
   324  0110                     	;# 
   325  0111                     	;# 
   326  0112                     	;# 
   327  0113                     	;# 
   328  0114                     	;# 
   329  0115                     	;# 
   330  0116                     	;# 
   331  0117                     	;# 
   332  0118                     	;# 
   333  0119                     	;# 
   334  011A                     	;# 
   335  011B                     	;# 
   336  011D                     	;# 
   337  018C                     	;# 
   338  018D                     	;# 
   339  018F                     	;# 
   340  0190                     	;# 
   341  0191                     	;# 
   342  0191                     	;# 
   343  0192                     	;# 
   344  0193                     	;# 
   345  0193                     	;# 
   346  0193                     	;# 
   347  0194                     	;# 
   348  0195                     	;# 
   349  0196                     	;# 
   350  0199                     	;# 
   351  019A                     	;# 
   352  019B                     	;# 
   353  019B                     	;# 
   354  019B                     	;# 
   355  019B                     	;# 
   356  019C                     	;# 
   357  019C                     	;# 
   358  019D                     	;# 
   359  019E                     	;# 
   360  019F                     	;# 
   361  020D                     	;# 
   362  0210                     	;# 
   363  0211                     	;# 
   364  0212                     	;# 
   365  0213                     	;# 
   366  0214                     	;# 
   367  0215                     	;# 
   368  0215                     	;# 
   369  0216                     	;# 
   370  0217                     	;# 
   371  0291                     	;# 
   372  0291                     	;# 
   373  0292                     	;# 
   374  0293                     	;# 
   375  0294                     	;# 
   376  0295                     	;# 
   377  0295                     	;# 
   378  0296                     	;# 
   379  0298                     	;# 
   380  0298                     	;# 
   381  0299                     	;# 
   382  029A                     	;# 
   383  029B                     	;# 
   384  029C                     	;# 
   385  029C                     	;# 
   386  029D                     	;# 
   387  029E                     	;# 
   388  029F                     	;# 
   389  0311                     	;# 
   390  0311                     	;# 
   391  0312                     	;# 
   392  0313                     	;# 
   393  0314                     	;# 
   394  0315                     	;# 
   395  0315                     	;# 
   396  0316                     	;# 
   397  0318                     	;# 
   398  0318                     	;# 
   399  0319                     	;# 
   400  031A                     	;# 
   401  031C                     	;# 
   402  031C                     	;# 
   403  031D                     	;# 
   404  031E                     	;# 
   405  0394                     	;# 
   406  0395                     	;# 
   407  0396                     	;# 
   408  0415                     	;# 
   409  0416                     	;# 
   410  0417                     	;# 
   411  041C                     	;# 
   412  041D                     	;# 
   413  041E                     	;# 
   414  0791                     	;# 
   415  0792                     	;# 
   416  0793                     	;# 
   417  0794                     	;# 
   418  0795                     	;# 
   419  0798                     	;# 
   420  0799                     	;# 
   421  079A                     	;# 
   422  07A0                     	;# 
   423  07A1                     	;# 
   424  07A2                     	;# 
   425  07A3                     	;# 
   426  07A4                     	;# 
   427  07A5                     	;# 
   428  07A6                     	;# 
   429  07A7                     	;# 
   430  07A8                     	;# 
   431  07A9                     	;# 
   432  07AA                     	;# 
   433  07AB                     	;# 
   434  0FE4                     	;# 
   435  0FE5                     	;# 
   436  0FE6                     	;# 
   437  0FE7                     	;# 
   438  0FE8                     	;# 
   439  0FE9                     	;# 
   440  0FEA                     	;# 
   441  0FEB                     	;# 
   442  0FED                     	;# 
   443  0FEE                     	;# 
   444  0FEF                     	;# 
   445  0000                     	;# 
   446  0001                     	;# 
   447  0002                     	;# 
   448  0003                     	;# 
   449  0004                     	;# 
   450  0005                     	;# 
   451  0006                     	;# 
   452  0007                     	;# 
   453  0008                     	;# 
   454  0009                     	;# 
   455  000A                     	;# 
   456  000B                     	;# 
   457  000C                     	;# 
   458  000D                     	;# 
   459  000E                     	;# 
   460  000F                     	;# 
   461  0010                     	;# 
   462  0011                     	;# 
   463  0012                     	;# 
   464  0013                     	;# 
   465  0015                     	;# 
   466  0016                     	;# 
   467  0016                     	;# 
   468  0017                     	;# 
   469  0018                     	;# 
   470  0019                     	;# 
   471  001A                     	;# 
   472  001B                     	;# 
   473  001C                     	;# 
   474  001E                     	;# 
   475  001F                     	;# 
   476  008C                     	;# 
   477  008D                     	;# 
   478  008E                     	;# 
   479  008F                     	;# 
   480  0090                     	;# 
   481  0091                     	;# 
   482  0092                     	;# 
   483  0093                     	;# 
   484  0095                     	;# 
   485  0096                     	;# 
   486  0097                     	;# 
   487  0098                     	;# 
   488  0099                     	;# 
   489  009A                     	;# 
   490  009B                     	;# 
   491  009B                     	;# 
   492  009C                     	;# 
   493  009D                     	;# 
   494  009E                     	;# 
   495  010C                     	;# 
   496  010D                     	;# 
   497  010E                     	;# 
   498  010F                     	;# 
   499  0110                     	;# 
   500  0111                     	;# 
   501  0112                     	;# 
   502  0113                     	;# 
   503  0114                     	;# 
   504  0115                     	;# 
   505  0116                     	;# 
   506  0117                     	;# 
   507  0118                     	;# 
   508  0119                     	;# 
   509  011A                     	;# 
   510  011B                     	;# 
   511  011D                     	;# 
   512  018C                     	;# 
   513  018D                     	;# 
   514  018F                     	;# 
   515  0190                     	;# 
   516  0191                     	;# 
   517  0191                     	;# 
   518  0192                     	;# 
   519  0193                     	;# 
   520  0193                     	;# 
   521  0193                     	;# 
   522  0194                     	;# 
   523  0195                     	;# 
   524  0196                     	;# 
   525  0199                     	;# 
   526  019A                     	;# 
   527  019B                     	;# 
   528  019B                     	;# 
   529  019B                     	;# 
   530  019B                     	;# 
   531  019C                     	;# 
   532  019C                     	;# 
   533  019D                     	;# 
   534  019E                     	;# 
   535  019F                     	;# 
   536  020D                     	;# 
   537  0210                     	;# 
   538  0211                     	;# 
   539  0212                     	;# 
   540  0213                     	;# 
   541  0214                     	;# 
   542  0215                     	;# 
   543  0215                     	;# 
   544  0216                     	;# 
   545  0217                     	;# 
   546  0291                     	;# 
   547  0291                     	;# 
   548  0292                     	;# 
   549  0293                     	;# 
   550  0294                     	;# 
   551  0295                     	;# 
   552  0295                     	;# 
   553  0296                     	;# 
   554  0298                     	;# 
   555  0298                     	;# 
   556  0299                     	;# 
   557  029A                     	;# 
   558  029B                     	;# 
   559  029C                     	;# 
   560  029C                     	;# 
   561  029D                     	;# 
   562  029E                     	;# 
   563  029F                     	;# 
   564  0311                     	;# 
   565  0311                     	;# 
   566  0312                     	;# 
   567  0313                     	;# 
   568  0314                     	;# 
   569  0315                     	;# 
   570  0315                     	;# 
   571  0316                     	;# 
   572  0318                     	;# 
   573  0318                     	;# 
   574  0319                     	;# 
   575  031A                     	;# 
   576  031C                     	;# 
   577  031C                     	;# 
   578  031D                     	;# 
   579  031E                     	;# 
   580  0394                     	;# 
   581  0395                     	;# 
   582  0396                     	;# 
   583  0415                     	;# 
   584  0416                     	;# 
   585  0417                     	;# 
   586  041C                     	;# 
   587  041D                     	;# 
   588  041E                     	;# 
   589  0791                     	;# 
   590  0792                     	;# 
   591  0793                     	;# 
   592  0794                     	;# 
   593  0795                     	;# 
   594  0798                     	;# 
   595  0799                     	;# 
   596  079A                     	;# 
   597  07A0                     	;# 
   598  07A1                     	;# 
   599  07A2                     	;# 
   600  07A3                     	;# 
   601  07A4                     	;# 
   602  07A5                     	;# 
   603  07A6                     	;# 
   604  07A7                     	;# 
   605  07A8                     	;# 
   606  07A9                     	;# 
   607  07AA                     	;# 
   608  07AB                     	;# 
   609  0FE4                     	;# 
   610  0FE5                     	;# 
   611  0FE6                     	;# 
   612  0FE7                     	;# 
   613  0FE8                     	;# 
   614  0FE9                     	;# 
   615  0FEA                     	;# 
   616  0FEB                     	;# 
   617  0FED                     	;# 
   618  0FEE                     	;# 
   619  0FEF                     	;# 
   620  0000                     	;# 
   621  0001                     	;# 
   622  0002                     	;# 
   623  0003                     	;# 
   624  0004                     	;# 
   625  0005                     	;# 
   626  0006                     	;# 
   627  0007                     	;# 
   628  0008                     	;# 
   629  0009                     	;# 
   630  000A                     	;# 
   631  000B                     	;# 
   632  000C                     	;# 
   633  000D                     	;# 
   634  000E                     	;# 
   635  000F                     	;# 
   636  0010                     	;# 
   637  0011                     	;# 
   638  0012                     	;# 
   639  0013                     	;# 
   640  0015                     	;# 
   641  0016                     	;# 
   642  0016                     	;# 
   643  0017                     	;# 
   644  0018                     	;# 
   645  0019                     	;# 
   646  001A                     	;# 
   647  001B                     	;# 
   648  001C                     	;# 
   649  001E                     	;# 
   650  001F                     	;# 
   651  008C                     	;# 
   652  008D                     	;# 
   653  008E                     	;# 
   654  008F                     	;# 
   655  0090                     	;# 
   656  0091                     	;# 
   657  0092                     	;# 
   658  0093                     	;# 
   659  0095                     	;# 
   660  0096                     	;# 
   661  0097                     	;# 
   662  0098                     	;# 
   663  0099                     	;# 
   664  009A                     	;# 
   665  009B                     	;# 
   666  009B                     	;# 
   667  009C                     	;# 
   668  009D                     	;# 
   669  009E                     	;# 
   670  010C                     	;# 
   671  010D                     	;# 
   672  010E                     	;# 
   673  010F                     	;# 
   674  0110                     	;# 
   675  0111                     	;# 
   676  0112                     	;# 
   677  0113                     	;# 
   678  0114                     	;# 
   679  0115                     	;# 
   680  0116                     	;# 
   681  0117                     	;# 
   682  0118                     	;# 
   683  0119                     	;# 
   684  011A                     	;# 
   685  011B                     	;# 
   686  011D                     	;# 
   687  018C                     	;# 
   688  018D                     	;# 
   689  018F                     	;# 
   690  0190                     	;# 
   691  0191                     	;# 
   692  0191                     	;# 
   693  0192                     	;# 
   694  0193                     	;# 
   695  0193                     	;# 
   696  0193                     	;# 
   697  0194                     	;# 
   698  0195                     	;# 
   699  0196                     	;# 
   700  0199                     	;# 
   701  019A                     	;# 
   702  019B                     	;# 
   703  019B                     	;# 
   704  019B                     	;# 
   705  019B                     	;# 
   706  019C                     	;# 
   707  019C                     	;# 
   708  019D                     	;# 
   709  019E                     	;# 
   710  019F                     	;# 
   711  020D                     	;# 
   712  0210                     	;# 
   713  0211                     	;# 
   714  0212                     	;# 
   715  0213                     	;# 
   716  0214                     	;# 
   717  0215                     	;# 
   718  0215                     	;# 
   719  0216                     	;# 
   720  0217                     	;# 
   721  0291                     	;# 
   722  0291                     	;# 
   723  0292                     	;# 
   724  0293                     	;# 
   725  0294                     	;# 
   726  0295                     	;# 
   727  0295                     	;# 
   728  0296                     	;# 
   729  0298                     	;# 
   730  0298                     	;# 
   731  0299                     	;# 
   732  029A                     	;# 
   733  029B                     	;# 
   734  029C                     	;# 
   735  029C                     	;# 
   736  029D                     	;# 
   737  029E                     	;# 
   738  029F                     	;# 
   739  0311                     	;# 
   740  0311                     	;# 
   741  0312                     	;# 
   742  0313                     	;# 
   743  0314                     	;# 
   744  0315                     	;# 
   745  0315                     	;# 
   746  0316                     	;# 
   747  0318                     	;# 
   748  0318                     	;# 
   749  0319                     	;# 
   750  031A                     	;# 
   751  031C                     	;# 
   752  031C                     	;# 
   753  031D                     	;# 
   754  031E                     	;# 
   755  0394                     	;# 
   756  0395                     	;# 
   757  0396                     	;# 
   758  0415                     	;# 
   759  0416                     	;# 
   760  0417                     	;# 
   761  041C                     	;# 
   762  041D                     	;# 
   763  041E                     	;# 
   764  0791                     	;# 
   765  0792                     	;# 
   766  0793                     	;# 
   767  0794                     	;# 
   768  0795                     	;# 
   769  0798                     	;# 
   770  0799                     	;# 
   771  079A                     	;# 
   772  07A0                     	;# 
   773  07A1                     	;# 
   774  07A2                     	;# 
   775  07A3                     	;# 
   776  07A4                     	;# 
   777  07A5                     	;# 
   778  07A6                     	;# 
   779  07A7                     	;# 
   780  07A8                     	;# 
   781  07A9                     	;# 
   782  07AA                     	;# 
   783  07AB                     	;# 
   784  0FE4                     	;# 
   785  0FE5                     	;# 
   786  0FE6                     	;# 
   787  0FE7                     	;# 
   788  0FE8                     	;# 
   789  0FE9                     	;# 
   790  0FEA                     	;# 
   791  0FEB                     	;# 
   792  0FED                     	;# 
   793  0FEE                     	;# 
   794  0FEF                     	;# 
   795  0000                     	;# 
   796  0001                     	;# 
   797  0002                     	;# 
   798  0003                     	;# 
   799  0004                     	;# 
   800  0005                     	;# 
   801  0006                     	;# 
   802  0007                     	;# 
   803  0008                     	;# 
   804  0009                     	;# 
   805  000A                     	;# 
   806  000B                     	;# 
   807  000C                     	;# 
   808  000D                     	;# 
   809  000E                     	;# 
   810  000F                     	;# 
   811  0010                     	;# 
   812  0011                     	;# 
   813  0012                     	;# 
   814  0013                     	;# 
   815  0015                     	;# 
   816  0016                     	;# 
   817  0016                     	;# 
   818  0017                     	;# 
   819  0018                     	;# 
   820  0019                     	;# 
   821  001A                     	;# 
   822  001B                     	;# 
   823  001C                     	;# 
   824  001E                     	;# 
   825  001F                     	;# 
   826  008C                     	;# 
   827  008D                     	;# 
   828  008E                     	;# 
   829  008F                     	;# 
   830  0090                     	;# 
   831  0091                     	;# 
   832  0092                     	;# 
   833  0093                     	;# 
   834  0095                     	;# 
   835  0096                     	;# 
   836  0097                     	;# 
   837  0098                     	;# 
   838  0099                     	;# 
   839  009A                     	;# 
   840  009B                     	;# 
   841  009B                     	;# 
   842  009C                     	;# 
   843  009D                     	;# 
   844  009E                     	;# 
   845  010C                     	;# 
   846  010D                     	;# 
   847  010E                     	;# 
   848  010F                     	;# 
   849  0110                     	;# 
   850  0111                     	;# 
   851  0112                     	;# 
   852  0113                     	;# 
   853  0114                     	;# 
   854  0115                     	;# 
   855  0116                     	;# 
   856  0117                     	;# 
   857  0118                     	;# 
   858  0119                     	;# 
   859  011A                     	;# 
   860  011B                     	;# 
   861  011D                     	;# 
   862  018C                     	;# 
   863  018D                     	;# 
   864  018F                     	;# 
   865  0190                     	;# 
   866  0191                     	;# 
   867  0191                     	;# 
   868  0192                     	;# 
   869  0193                     	;# 
   870  0193                     	;# 
   871  0193                     	;# 
   872  0194                     	;# 
   873  0195                     	;# 
   874  0196                     	;# 
   875  0199                     	;# 
   876  019A                     	;# 
   877  019B                     	;# 
   878  019B                     	;# 
   879  019B                     	;# 
   880  019B                     	;# 
   881  019C                     	;# 
   882  019C                     	;# 
   883  019D                     	;# 
   884  019E                     	;# 
   885  019F                     	;# 
   886  020D                     	;# 
   887  0210                     	;# 
   888  0211                     	;# 
   889  0212                     	;# 
   890  0213                     	;# 
   891  0214                     	;# 
   892  0215                     	;# 
   893  0215                     	;# 
   894  0216                     	;# 
   895  0217                     	;# 
   896  0291                     	;# 
   897  0291                     	;# 
   898  0292                     	;# 
   899  0293                     	;# 
   900  0294                     	;# 
   901  0295                     	;# 
   902  0295                     	;# 
   903  0296                     	;# 
   904  0298                     	;# 
   905  0298                     	;# 
   906  0299                     	;# 
   907  029A                     	;# 
   908  029B                     	;# 
   909  029C                     	;# 
   910  029C                     	;# 
   911  029D                     	;# 
   912  029E                     	;# 
   913  029F                     	;# 
   914  0311                     	;# 
   915  0311                     	;# 
   916  0312                     	;# 
   917  0313                     	;# 
   918  0314                     	;# 
   919  0315                     	;# 
   920  0315                     	;# 
   921  0316                     	;# 
   922  0318                     	;# 
   923  0318                     	;# 
   924  0319                     	;# 
   925  031A                     	;# 
   926  031C                     	;# 
   927  031C                     	;# 
   928  031D                     	;# 
   929  031E                     	;# 
   930  0394                     	;# 
   931  0395                     	;# 
   932  0396                     	;# 
   933  0415                     	;# 
   934  0416                     	;# 
   935  0417                     	;# 
   936  041C                     	;# 
   937  041D                     	;# 
   938  041E                     	;# 
   939  0791                     	;# 
   940  0792                     	;# 
   941  0793                     	;# 
   942  0794                     	;# 
   943  0795                     	;# 
   944  0798                     	;# 
   945  0799                     	;# 
   946  079A                     	;# 
   947  07A0                     	;# 
   948  07A1                     	;# 
   949  07A2                     	;# 
   950  07A3                     	;# 
   951  07A4                     	;# 
   952  07A5                     	;# 
   953  07A6                     	;# 
   954  07A7                     	;# 
   955  07A8                     	;# 
   956  07A9                     	;# 
   957  07AA                     	;# 
   958  07AB                     	;# 
   959  0FE4                     	;# 
   960  0FE5                     	;# 
   961  0FE6                     	;# 
   962  0FE7                     	;# 
   963  0FE8                     	;# 
   964  0FE9                     	;# 
   965  0FEA                     	;# 
   966  0FEB                     	;# 
   967  0FED                     	;# 
   968  0FEE                     	;# 
   969  0FEF                     	;# 
   970  0000                     	;# 
   971  0001                     	;# 
   972  0002                     	;# 
   973  0003                     	;# 
   974  0004                     	;# 
   975  0005                     	;# 
   976  0006                     	;# 
   977  0007                     	;# 
   978  0008                     	;# 
   979  0009                     	;# 
   980  000A                     	;# 
   981  000B                     	;# 
   982  000C                     	;# 
   983  000D                     	;# 
   984  000E                     	;# 
   985  000F                     	;# 
   986  0010                     	;# 
   987  0011                     	;# 
   988  0012                     	;# 
   989  0013                     	;# 
   990  0015                     	;# 
   991  0016                     	;# 
   992  0016                     	;# 
   993  0017                     	;# 
   994  0018                     	;# 
   995  0019                     	;# 
   996  001A                     	;# 
   997  001B                     	;# 
   998  001C                     	;# 
   999  001E                     	;# 
  1000  001F                     	;# 
  1001  008C                     	;# 
  1002  008D                     	;# 
  1003  008E                     	;# 
  1004  008F                     	;# 
  1005  0090                     	;# 
  1006  0091                     	;# 
  1007  0092                     	;# 
  1008  0093                     	;# 
  1009  0095                     	;# 
  1010  0096                     	;# 
  1011  0097                     	;# 
  1012  0098                     	;# 
  1013  0099                     	;# 
  1014  009A                     	;# 
  1015  009B                     	;# 
  1016  009B                     	;# 
  1017  009C                     	;# 
  1018  009D                     	;# 
  1019  009E                     	;# 
  1020  010C                     	;# 
  1021  010D                     	;# 
  1022  010E                     	;# 
  1023  010F                     	;# 
  1024  0110                     	;# 
  1025  0111                     	;# 
  1026  0112                     	;# 
  1027  0113                     	;# 
  1028  0114                     	;# 
  1029  0115                     	;# 
  1030  0116                     	;# 
  1031  0117                     	;# 
  1032  0118                     	;# 
  1033  0119                     	;# 
  1034  011A                     	;# 
  1035  011B                     	;# 
  1036  011D                     	;# 
  1037  018C                     	;# 
  1038  018D                     	;# 
  1039  018F                     	;# 
  1040  0190                     	;# 
  1041  0191                     	;# 
  1042  0191                     	;# 
  1043  0192                     	;# 
  1044  0193                     	;# 
  1045  0193                     	;# 
  1046  0193                     	;# 
  1047  0194                     	;# 
  1048  0195                     	;# 
  1049  0196                     	;# 
  1050  0199                     	;# 
  1051  019A                     	;# 
  1052  019B                     	;# 
  1053  019B                     	;# 
  1054  019B                     	;# 
  1055  019B                     	;# 
  1056  019C                     	;# 
  1057  019C                     	;# 
  1058  019D                     	;# 
  1059  019E                     	;# 
  1060  019F                     	;# 
  1061  020D                     	;# 
  1062  0210                     	;# 
  1063  0211                     	;# 
  1064  0212                     	;# 
  1065  0213                     	;# 
  1066  0214                     	;# 
  1067  0215                     	;# 
  1068  0215                     	;# 
  1069  0216                     	;# 
  1070  0217                     	;# 
  1071  0291                     	;# 
  1072  0291                     	;# 
  1073  0292                     	;# 
  1074  0293                     	;# 
  1075  0294                     	;# 
  1076  0295                     	;# 
  1077  0295                     	;# 
  1078  0296                     	;# 
  1079  0298                     	;# 
  1080  0298                     	;# 
  1081  0299                     	;# 
  1082  029A                     	;# 
  1083  029B                     	;# 
  1084  029C                     	;# 
  1085  029C                     	;# 
  1086  029D                     	;# 
  1087  029E                     	;# 
  1088  029F                     	;# 
  1089  0311                     	;# 
  1090  0311                     	;# 
  1091  0312                     	;# 
  1092  0313                     	;# 
  1093  0314                     	;# 
  1094  0315                     	;# 
  1095  0315                     	;# 
  1096  0316                     	;# 
  1097  0318                     	;# 
  1098  0318                     	;# 
  1099  0319                     	;# 
  1100  031A                     	;# 
  1101  031C                     	;# 
  1102  031C                     	;# 
  1103  031D                     	;# 
  1104  031E                     	;# 
  1105  0394                     	;# 
  1106  0395                     	;# 
  1107  0396                     	;# 
  1108  0415                     	;# 
  1109  0416                     	;# 
  1110  0417                     	;# 
  1111  041C                     	;# 
  1112  041D                     	;# 
  1113  041E                     	;# 
  1114  0791                     	;# 
  1115  0792                     	;# 
  1116  0793                     	;# 
  1117  0794                     	;# 
  1118  0795                     	;# 
  1119  0798                     	;# 
  1120  0799                     	;# 
  1121  079A                     	;# 
  1122  07A0                     	;# 
  1123  07A1                     	;# 
  1124  07A2                     	;# 
  1125  07A3                     	;# 
  1126  07A4                     	;# 
  1127  07A5                     	;# 
  1128  07A6                     	;# 
  1129  07A7                     	;# 
  1130  07A8                     	;# 
  1131  07A9                     	;# 
  1132  07AA                     	;# 
  1133  07AB                     	;# 
  1134  0FE4                     	;# 
  1135  0FE5                     	;# 
  1136  0FE6                     	;# 
  1137  0FE7                     	;# 
  1138  0FE8                     	;# 
  1139  0FE9                     	;# 
  1140  0FEA                     	;# 
  1141  0FEB                     	;# 
  1142  0FED                     	;# 
  1143  0FEE                     	;# 
  1144  0FEF                     	;# 
  1145  0000                     	;# 
  1146  0001                     	;# 
  1147  0002                     	;# 
  1148  0003                     	;# 
  1149  0004                     	;# 
  1150  0005                     	;# 
  1151  0006                     	;# 
  1152  0007                     	;# 
  1153  0008                     	;# 
  1154  0009                     	;# 
  1155  000A                     	;# 
  1156  000B                     	;# 
  1157  000C                     	;# 
  1158  000D                     	;# 
  1159  000E                     	;# 
  1160  000F                     	;# 
  1161  0010                     	;# 
  1162  0011                     	;# 
  1163  0012                     	;# 
  1164  0013                     	;# 
  1165  0015                     	;# 
  1166  0016                     	;# 
  1167  0016                     	;# 
  1168  0017                     	;# 
  1169  0018                     	;# 
  1170  0019                     	;# 
  1171  001A                     	;# 
  1172  001B                     	;# 
  1173  001C                     	;# 
  1174  001E                     	;# 
  1175  001F                     	;# 
  1176  008C                     	;# 
  1177  008D                     	;# 
  1178  008E                     	;# 
  1179  008F                     	;# 
  1180  0090                     	;# 
  1181  0091                     	;# 
  1182  0092                     	;# 
  1183  0093                     	;# 
  1184  0095                     	;# 
  1185  0096                     	;# 
  1186  0097                     	;# 
  1187  0098                     	;# 
  1188  0099                     	;# 
  1189  009A                     	;# 
  1190  009B                     	;# 
  1191  009B                     	;# 
  1192  009C                     	;# 
  1193  009D                     	;# 
  1194  009E                     	;# 
  1195  010C                     	;# 
  1196  010D                     	;# 
  1197  010E                     	;# 
  1198  010F                     	;# 
  1199  0110                     	;# 
  1200  0111                     	;# 
  1201  0112                     	;# 
  1202  0113                     	;# 
  1203  0114                     	;# 
  1204  0115                     	;# 
  1205  0116                     	;# 
  1206  0117                     	;# 
  1207  0118                     	;# 
  1208  0119                     	;# 
  1209  011A                     	;# 
  1210  011B                     	;# 
  1211  011D                     	;# 
  1212  018C                     	;# 
  1213  018D                     	;# 
  1214  018F                     	;# 
  1215  0190                     	;# 
  1216  0191                     	;# 
  1217  0191                     	;# 
  1218  0192                     	;# 
  1219  0193                     	;# 
  1220  0193                     	;# 
  1221  0193                     	;# 
  1222  0194                     	;# 
  1223  0195                     	;# 
  1224  0196                     	;# 
  1225  0199                     	;# 
  1226  019A                     	;# 
  1227  019B                     	;# 
  1228  019B                     	;# 
  1229  019B                     	;# 
  1230  019B                     	;# 
  1231  019C                     	;# 
  1232  019C                     	;# 
  1233  019D                     	;# 
  1234  019E                     	;# 
  1235  019F                     	;# 
  1236  020D                     	;# 
  1237  0210                     	;# 
  1238  0211                     	;# 
  1239  0212                     	;# 
  1240  0213                     	;# 
  1241  0214                     	;# 
  1242  0215                     	;# 
  1243  0215                     	;# 
  1244  0216                     	;# 
  1245  0217                     	;# 
  1246  0291                     	;# 
  1247  0291                     	;# 
  1248  0292                     	;# 
  1249  0293                     	;# 
  1250  0294                     	;# 
  1251  0295                     	;# 
  1252  0295                     	;# 
  1253  0296                     	;# 
  1254  0298                     	;# 
  1255  0298                     	;# 
  1256  0299                     	;# 
  1257  029A                     	;# 
  1258  029B                     	;# 
  1259  029C                     	;# 
  1260  029C                     	;# 
  1261  029D                     	;# 
  1262  029E                     	;# 
  1263  029F                     	;# 
  1264  0311                     	;# 
  1265  0311                     	;# 
  1266  0312                     	;# 
  1267  0313                     	;# 
  1268  0314                     	;# 
  1269  0315                     	;# 
  1270  0315                     	;# 
  1271  0316                     	;# 
  1272  0318                     	;# 
  1273  0318                     	;# 
  1274  0319                     	;# 
  1275  031A                     	;# 
  1276  031C                     	;# 
  1277  031C                     	;# 
  1278  031D                     	;# 
  1279  031E                     	;# 
  1280  0394                     	;# 
  1281  0395                     	;# 
  1282  0396                     	;# 
  1283  0415                     	;# 
  1284  0416                     	;# 
  1285  0417                     	;# 
  1286  041C                     	;# 
  1287  041D                     	;# 
  1288  041E                     	;# 
  1289  0791                     	;# 
  1290  0792                     	;# 
  1291  0793                     	;# 
  1292  0794                     	;# 
  1293  0795                     	;# 
  1294  0798                     	;# 
  1295  0799                     	;# 
  1296  079A                     	;# 
  1297  07A0                     	;# 
  1298  07A1                     	;# 
  1299  07A2                     	;# 
  1300  07A3                     	;# 
  1301  07A4                     	;# 
  1302  07A5                     	;# 
  1303  07A6                     	;# 
  1304  07A7                     	;# 
  1305  07A8                     	;# 
  1306  07A9                     	;# 
  1307  07AA                     	;# 
  1308  07AB                     	;# 
  1309  0FE4                     	;# 
  1310  0FE5                     	;# 
  1311  0FE6                     	;# 
  1312  0FE7                     	;# 
  1313  0FE8                     	;# 
  1314  0FE9                     	;# 
  1315  0FEA                     	;# 
  1316  0FEB                     	;# 
  1317  0FED                     	;# 
  1318  0FEE                     	;# 
  1319  0FEF                     	;# 
  1320  0000                     	;# 
  1321  0001                     	;# 
  1322  0002                     	;# 
  1323  0003                     	;# 
  1324  0004                     	;# 
  1325  0005                     	;# 
  1326  0006                     	;# 
  1327  0007                     	;# 
  1328  0008                     	;# 
  1329  0009                     	;# 
  1330  000A                     	;# 
  1331  000B                     	;# 
  1332  000C                     	;# 
  1333  000D                     	;# 
  1334  000E                     	;# 
  1335  000F                     	;# 
  1336  0010                     	;# 
  1337  0011                     	;# 
  1338  0012                     	;# 
  1339  0013                     	;# 
  1340  0015                     	;# 
  1341  0016                     	;# 
  1342  0016                     	;# 
  1343  0017                     	;# 
  1344  0018                     	;# 
  1345  0019                     	;# 
  1346  001A                     	;# 
  1347  001B                     	;# 
  1348  001C                     	;# 
  1349  001E                     	;# 
  1350  001F                     	;# 
  1351  008C                     	;# 
  1352  008D                     	;# 
  1353  008E                     	;# 
  1354  008F                     	;# 
  1355  0090                     	;# 
  1356  0091                     	;# 
  1357  0092                     	;# 
  1358  0093                     	;# 
  1359  0095                     	;# 
  1360  0096                     	;# 
  1361  0097                     	;# 
  1362  0098                     	;# 
  1363  0099                     	;# 
  1364  009A                     	;# 
  1365  009B                     	;# 
  1366  009B                     	;# 
  1367  009C                     	;# 
  1368  009D                     	;# 
  1369  009E                     	;# 
  1370  010C                     	;# 
  1371  010D                     	;# 
  1372  010E                     	;# 
  1373  010F                     	;# 
  1374  0110                     	;# 
  1375  0111                     	;# 
  1376  0112                     	;# 
  1377  0113                     	;# 
  1378  0114                     	;# 
  1379  0115                     	;# 
  1380  0116                     	;# 
  1381  0117                     	;# 
  1382  0118                     	;# 
  1383  0119                     	;# 
  1384  011A                     	;# 
  1385  011B                     	;# 
  1386  011D                     	;# 
  1387  018C                     	;# 
  1388  018D                     	;# 
  1389  018F                     	;# 
  1390  0190                     	;# 
  1391  0191                     	;# 
  1392  0191                     	;# 
  1393  0192                     	;# 
  1394  0193                     	;# 
  1395  0193                     	;# 
  1396  0193                     	;# 
  1397  0194                     	;# 
  1398  0195                     	;# 
  1399  0196                     	;# 
  1400  0199                     	;# 
  1401  019A                     	;# 
  1402  019B                     	;# 
  1403  019B                     	;# 
  1404  019B                     	;# 
  1405  019B                     	;# 
  1406  019C                     	;# 
  1407  019C                     	;# 
  1408  019D                     	;# 
  1409  019E                     	;# 
  1410  019F                     	;# 
  1411  020D                     	;# 
  1412  0210                     	;# 
  1413  0211                     	;# 
  1414  0212                     	;# 
  1415  0213                     	;# 
  1416  0214                     	;# 
  1417  0215                     	;# 
  1418  0215                     	;# 
  1419  0216                     	;# 
  1420  0217                     	;# 
  1421  0291                     	;# 
  1422  0291                     	;# 
  1423  0292                     	;# 
  1424  0293                     	;# 
  1425  0294                     	;# 
  1426  0295                     	;# 
  1427  0295                     	;# 
  1428  0296                     	;# 
  1429  0298                     	;# 
  1430  0298                     	;# 
  1431  0299                     	;# 
  1432  029A                     	;# 
  1433  029B                     	;# 
  1434  029C                     	;# 
  1435  029C                     	;# 
  1436  029D                     	;# 
  1437  029E                     	;# 
  1438  029F                     	;# 
  1439  0311                     	;# 
  1440  0311                     	;# 
  1441  0312                     	;# 
  1442  0313                     	;# 
  1443  0314                     	;# 
  1444  0315                     	;# 
  1445  0315                     	;# 
  1446  0316                     	;# 
  1447  0318                     	;# 
  1448  0318                     	;# 
  1449  0319                     	;# 
  1450  031A                     	;# 
  1451  031C                     	;# 
  1452  031C                     	;# 
  1453  031D                     	;# 
  1454  031E                     	;# 
  1455  0394                     	;# 
  1456  0395                     	;# 
  1457  0396                     	;# 
  1458  0415                     	;# 
  1459  0416                     	;# 
  1460  0417                     	;# 
  1461  041C                     	;# 
  1462  041D                     	;# 
  1463  041E                     	;# 
  1464  0791                     	;# 
  1465  0792                     	;# 
  1466  0793                     	;# 
  1467  0794                     	;# 
  1468  0795                     	;# 
  1469  0798                     	;# 
  1470  0799                     	;# 
  1471  079A                     	;# 
  1472  07A0                     	;# 
  1473  07A1                     	;# 
  1474  07A2                     	;# 
  1475  07A3                     	;# 
  1476  07A4                     	;# 
  1477  07A5                     	;# 
  1478  07A6                     	;# 
  1479  07A7                     	;# 
  1480  07A8                     	;# 
  1481  07A9                     	;# 
  1482  07AA                     	;# 
  1483  07AB                     	;# 
  1484  0FE4                     	;# 
  1485  0FE5                     	;# 
  1486  0FE6                     	;# 
  1487  0FE7                     	;# 
  1488  0FE8                     	;# 
  1489  0FE9                     	;# 
  1490  0FEA                     	;# 
  1491  0FEB                     	;# 
  1492  0FED                     	;# 
  1493  0FEE                     	;# 
  1494  0FEF                     	;# 
  1495  0000                     	;# 
  1496  0001                     	;# 
  1497  0002                     	;# 
  1498  0003                     	;# 
  1499  0004                     	;# 
  1500  0005                     	;# 
  1501  0006                     	;# 
  1502  0007                     	;# 
  1503  0008                     	;# 
  1504  0009                     	;# 
  1505  000A                     	;# 
  1506  000B                     	;# 
  1507  000C                     	;# 
  1508  000D                     	;# 
  1509  000E                     	;# 
  1510  000F                     	;# 
  1511  0010                     	;# 
  1512  0011                     	;# 
  1513  0012                     	;# 
  1514  0013                     	;# 
  1515  0015                     	;# 
  1516  0016                     	;# 
  1517  0016                     	;# 
  1518  0017                     	;# 
  1519  0018                     	;# 
  1520  0019                     	;# 
  1521  001A                     	;# 
  1522  001B                     	;# 
  1523  001C                     	;# 
  1524  001E                     	;# 
  1525  001F                     	;# 
  1526  008C                     	;# 
  1527  008D                     	;# 
  1528  008E                     	;# 
  1529  008F                     	;# 
  1530  0090                     	;# 
  1531  0091                     	;# 
  1532  0092                     	;# 
  1533  0093                     	;# 
  1534  0095                     	;# 
  1535  0096                     	;# 
  1536  0097                     	;# 
  1537  0098                     	;# 
  1538  0099                     	;# 
  1539  009A                     	;# 
  1540  009B                     	;# 
  1541  009B                     	;# 
  1542  009C                     	;# 
  1543  009D                     	;# 
  1544  009E                     	;# 
  1545  010C                     	;# 
  1546  010D                     	;# 
  1547  010E                     	;# 
  1548  010F                     	;# 
  1549  0110                     	;# 
  1550  0111                     	;# 
  1551  0112                     	;# 
  1552  0113                     	;# 
  1553  0114                     	;# 
  1554  0115                     	;# 
  1555  0116                     	;# 
  1556  0117                     	;# 
  1557  0118                     	;# 
  1558  0119                     	;# 
  1559  011A                     	;# 
  1560  011B                     	;# 
  1561  011D                     	;# 
  1562  018C                     	;# 
  1563  018D                     	;# 
  1564  018F                     	;# 
  1565  0190                     	;# 
  1566  0191                     	;# 
  1567  0191                     	;# 
  1568  0192                     	;# 
  1569  0193                     	;# 
  1570  0193                     	;# 
  1571  0193                     	;# 
  1572  0194                     	;# 
  1573  0195                     	;# 
  1574  0196                     	;# 
  1575  0199                     	;# 
  1576  019A                     	;# 
  1577  019B                     	;# 
  1578  019B                     	;# 
  1579  019B                     	;# 
  1580  019B                     	;# 
  1581  019C                     	;# 
  1582  019C                     	;# 
  1583  019D                     	;# 
  1584  019E                     	;# 
  1585  019F                     	;# 
  1586  020D                     	;# 
  1587  0210                     	;# 
  1588  0211                     	;# 
  1589  0212                     	;# 
  1590  0213                     	;# 
  1591  0214                     	;# 
  1592  0215                     	;# 
  1593  0215                     	;# 
  1594  0216                     	;# 
  1595  0217                     	;# 
  1596  0291                     	;# 
  1597  0291                     	;# 
  1598  0292                     	;# 
  1599  0293                     	;# 
  1600  0294                     	;# 
  1601  0295                     	;# 
  1602  0295                     	;# 
  1603  0296                     	;# 
  1604  0298                     	;# 
  1605  0298                     	;# 
  1606  0299                     	;# 
  1607  029A                     	;# 
  1608  029B                     	;# 
  1609  029C                     	;# 
  1610  029C                     	;# 
  1611  029D                     	;# 
  1612  029E                     	;# 
  1613  029F                     	;# 
  1614  0311                     	;# 
  1615  0311                     	;# 
  1616  0312                     	;# 
  1617  0313                     	;# 
  1618  0314                     	;# 
  1619  0315                     	;# 
  1620  0315                     	;# 
  1621  0316                     	;# 
  1622  0318                     	;# 
  1623  0318                     	;# 
  1624  0319                     	;# 
  1625  031A                     	;# 
  1626  031C                     	;# 
  1627  031C                     	;# 
  1628  031D                     	;# 
  1629  031E                     	;# 
  1630  0394                     	;# 
  1631  0395                     	;# 
  1632  0396                     	;# 
  1633  0415                     	;# 
  1634  0416                     	;# 
  1635  0417                     	;# 
  1636  041C                     	;# 
  1637  041D                     	;# 
  1638  041E                     	;# 
  1639  0791                     	;# 
  1640  0792                     	;# 
  1641  0793                     	;# 
  1642  0794                     	;# 
  1643  0795                     	;# 
  1644  0798                     	;# 
  1645  0799                     	;# 
  1646  079A                     	;# 
  1647  07A0                     	;# 
  1648  07A1                     	;# 
  1649  07A2                     	;# 
  1650  07A3                     	;# 
  1651  07A4                     	;# 
  1652  07A5                     	;# 
  1653  07A6                     	;# 
  1654  07A7                     	;# 
  1655  07A8                     	;# 
  1656  07A9                     	;# 
  1657  07AA                     	;# 
  1658  07AB                     	;# 
  1659  0FE4                     	;# 
  1660  0FE5                     	;# 
  1661  0FE6                     	;# 
  1662  0FE7                     	;# 
  1663  0FE8                     	;# 
  1664  0FE9                     	;# 
  1665  0FEA                     	;# 
  1666  0FEB                     	;# 
  1667  0FED                     	;# 
  1668  0FEE                     	;# 
  1669  0FEF                     	;# 
  1670                           
  1671 ;; Function _putch is unused but had its address taken
  1672  0000                     
  1673                           	psect	idataBANK0
  1674  0491                     __pidataBANK0:	
  1675                           
  1676                           ;initializer for turn_egs@step_nr
  1677  0491  3401               	retlw	1
  1678  0492  3400               	retlw	0
  1679                           
  1680                           ;initializer for _line1
  1681  0493  3420               	retlw	32
  1682  0494  3400               	retlw	0
  1683                           
  1684                           ;initializer for _line2
  1685  0495  3420               	retlw	32
  1686  0496  3400               	retlw	0
  1687                           
  1688                           	psect	idataBANK1
  1689  029B                     __pidataBANK1:	
  1690                           
  1691                           ;initializer for comparare@F3755
  1692  029B  34BA               	retlw	186
  1693  029C  340B               	retlw	11
  1694  029D  3481               	retlw	129
  1695  029E  340A               	retlw	10
  1696  029F  3449               	retlw	73
  1697  02A0  3409               	retlw	9
  1698  02A1  3458               	retlw	88
  1699  02A2  3408               	retlw	8
  1700  02A3  3467               	retlw	103
  1701  02A4  3407               	retlw	7
  1702  02A5  34AB               	retlw	171
  1703  02A6  3406               	retlw	6
  1704  02A7  34F0               	retlw	240
  1705  02A8  3405               	retlw	5
  1706  02A9  345E               	retlw	94
  1707  02AA  3405               	retlw	5
  1708  02AB  34CC               	retlw	204
  1709  02AC  3404               	retlw	4
  1710  02AD  345A               	retlw	90
  1711  02AE  3404               	retlw	4
  1712  02AF  34E8               	retlw	232
  1713  02B0  3403               	retlw	3
  1714  02B1  348C               	retlw	140
  1715  02B2  3403               	retlw	3
  1716  02B3  3431               	retlw	49
  1717  02B4  3403               	retlw	3
  1718  02B5  34E9               	retlw	233
  1719  02B6  3402               	retlw	2
  1720  02B7  34A1               	retlw	161
  1721  02B8  3402               	retlw	2
  1722  02B9  3467               	retlw	103
  1723  02BA  3402               	retlw	2
  1724  02BB  342D               	retlw	45
  1725  02BC  3402               	retlw	2
  1726  02BD  34FE               	retlw	254
  1727  02BE  3401               	retlw	1
  1728  02BF  34CF               	retlw	207
  1729  02C0  3401               	retlw	1
  1730  02C1  34A7               	retlw	167
  1731  02C2  3401               	retlw	1
  1732  02C3  347F               	retlw	127
  1733  02C4  3401               	retlw	1
  1734                           
  1735                           	psect	stringtext1
  1736  0461                     __pstringtext1:	
  1737  0461                     _dpowers:	
  1738  0461  3401               	retlw	1
  1739  0462  3400               	retlw	0
  1740  0463  340A               	retlw	10
  1741  0464  3400               	retlw	0
  1742  0465  3464               	retlw	100
  1743  0466  3400               	retlw	0
  1744  0467  34E8               	retlw	232
  1745  0468  3403               	retlw	3
  1746  0469  3410               	retlw	16
  1747  046A  3427               	retlw	39
  1748  046B                     __end_of_dpowers:	
  1749                           
  1750                           	psect	nvBANK0
  1751  006B                     __pnvBANK0:	
  1752  006B                     _flag_directie:	
  1753  006B                     	ds	2
  1754  006D                     _timer1ReloadVal:	
  1755  006D                     	ds	2
  1756  006F                     _eusartTxBufferRemaining:	
  1757  006F                     	ds	1
  1758                           
  1759                           	psect	nvBANK1
  1760  00E1                     __pnvBANK1:	
  1761  00E1                     _TMR1_InterruptHandler:	
  1762  00E1                     	ds	2
  1763  000F                     _PORTD	set	15
  1764  000D                     _PORTB	set	13
  1765  000F                     _PORTDbits	set	15
  1766  0019                     _T1GCONbits	set	25
  1767  0018                     _T1CONbits	set	24
  1768  0016                     _TMR1L	set	22
  1769  0017                     _TMR1H	set	23
  1770  0019                     _T1GCON	set	25
  1771  0018                     _T1CON	set	24
  1772  0011                     _PIR1bits	set	17
  1773  000B                     _INTCONbits	set	11
  1774  0079                     _RD1	set	121
  1775  0078                     _RD0	set	120
  1776  007B                     _RD3	set	123
  1777  008E                     _TRISCbits	set	142
  1778  008F                     _TRISDbits	set	143
  1779  009D                     _ADCON0bits	set	157
  1780  009C                     _ADRESH	set	156
  1781  009B                     _ADRESL	set	155
  1782  009E                     _ADCON1	set	158
  1783  009D                     _ADCON0	set	157
  1784  0091                     _PIE1bits	set	145
  1785  0095                     _OPTION_REGbits	set	149
  1786  008F                     _TRISD	set	143
  1787  008E                     _TRISC	set	142
  1788  008D                     _TRISB	set	141
  1789  008C                     _TRISA	set	140
  1790  0090                     _TRISE	set	144
  1791  0097                     _WDTCON	set	151
  1792  0098                     _OSCTUNE	set	152
  1793  0099                     _OSCCON	set	153
  1794  010E                     _LATCbits	set	270
  1795  011D                     _APFCON	set	285
  1796  010E                     _LATC	set	270
  1797  010D                     _LATB	set	269
  1798  010C                     _LATA	set	268
  1799  010F                     _LATD	set	271
  1800  0110                     _LATE	set	272
  1801  0199                     _RCREG	set	409
  1802  019D                     _RCSTAbits	set	413
  1803  019A                     _TXREG	set	410
  1804  019C                     _SPBRGH	set	412
  1805  019B                     _SPBRGL	set	411
  1806  019E                     _TXSTA	set	414
  1807  019D                     _RCSTA	set	413
  1808  019F                     _BAUDCON	set	415
  1809  018C                     _ANSELA	set	396
  1810  0190                     _ANSELE	set	400
  1811  018F                     _ANSELD	set	399
  1812  018D                     _ANSELB	set	397
  1813  020D                     _WPUB	set	525
  1814  0210                     _WPUE	set	528
  1815                           
  1816                           	psect	stringtext2
  1817  03B5                     __pstringtext2:	
  1818  03B5                     STR_2:	
  1819  03B5  3441               	retlw	65	;'A'
  1820  03B6  3454               	retlw	84	;'T'
  1821  03B7  342B               	retlw	43	;'+'
  1822  03B8  3443               	retlw	67	;'C'
  1823  03B9  344D               	retlw	77	;'M'
  1824  03BA  3447               	retlw	71	;'G'
  1825  03BB  3453               	retlw	83	;'S'
  1826  03BC  343D               	retlw	61	;'='
  1827  03BD  3422               	retlw	34	;'"'
  1828  03BE  3430               	retlw	48	;'0'
  1829  03BF  3437               	retlw	55	;'7'
  1830  03C0  3435               	retlw	53	;'5'
  1831  03C1  3434               	retlw	52	;'4'
  1832  03C2  3435               	retlw	53	;'5'
  1833  03C3  3431               	retlw	49	;'1'
  1834  03C4  3434               	retlw	52	;'4'
  1835  03C5  3439               	retlw	57	;'9'
  1836  03C6  3431               	retlw	49	;'1'
  1837  03C7  3437               	retlw	55	;'7'
  1838  03C8  3422               	retlw	34	;'"'
  1839  03C9  3400               	retlw	0
  1840                           
  1841                           	psect	stringtext3
  1842  03CA                     __pstringtext3:	
  1843  03CA                     STR_12:	
  1844  03CA  3420               	retlw	32	;' '
  1845  03CB  3462               	retlw	98	;'b'
  1846  03CC  3474               	retlw	116	;'t'
  1847  03CD  346E               	retlw	110	;'n'
  1848  03CE  3420               	retlw	32	;' '
  1849  03CF  346D               	retlw	109	;'m'
  1850  03D0  3469               	retlw	105	;'i'
  1851  03D1  346E               	retlw	110	;'n'
  1852  03D2  3475               	retlw	117	;'u'
  1853  03D3  3473               	retlw	115	;'s'
  1854  03D4  3420               	retlw	32	;' '
  1855  03D5  3420               	retlw	32	;' '
  1856  03D6  3420               	retlw	32	;' '
  1857  03D7  3420               	retlw	32	;' '
  1858  03D8  3420               	retlw	32	;' '
  1859  03D9  3420               	retlw	32	;' '
  1860  03DA  3420               	retlw	32	;' '
  1861  03DB  3400               	retlw	0
  1862                           
  1863                           	psect	stringtext4
  1864  03DC                     __pstringtext4:	
  1865  03DC                     STR_8:	
  1866  03DC  3441               	retlw	65	;'A'
  1867  03DD  3454               	retlw	84	;'T'
  1868  03DE  342B               	retlw	43	;'+'
  1869  03DF  3443               	retlw	67	;'C'
  1870  03E0  344E               	retlw	78	;'N'
  1871  03E1  344D               	retlw	77	;'M'
  1872  03E2  3449               	retlw	73	;'I'
  1873  03E3  343D               	retlw	61	;'='
  1874  03E4  3431               	retlw	49	;'1'
  1875  03E5  342C               	retlw	44	;','
  1876  03E6  3432               	retlw	50	;'2'
  1877  03E7  342C               	retlw	44	;','
  1878  03E8  3430               	retlw	48	;'0'
  1879  03E9  342C               	retlw	44	;','
  1880  03EA  3430               	retlw	48	;'0'
  1881  03EB  342C               	retlw	44	;','
  1882  03EC  3430               	retlw	48	;'0'
  1883  03ED  3400               	retlw	0
  1884                           
  1885                           	psect	stringtext5
  1886  0400                     __pstringtext5:	
  1887  0400                     STR_11:	
  1888  0400  3420               	retlw	32	;' '
  1889  0401  3462               	retlw	98	;'b'
  1890  0402  3474               	retlw	116	;'t'
  1891  0403  346E               	retlw	110	;'n'
  1892  0404  3420               	retlw	32	;' '
  1893  0405  346F               	retlw	111	;'o'
  1894  0406  346B               	retlw	107	;'k'
  1895  0407  3420               	retlw	32	;' '
  1896  0408  3420               	retlw	32	;' '
  1897  0409  3420               	retlw	32	;' '
  1898  040A  3420               	retlw	32	;' '
  1899  040B  3420               	retlw	32	;' '
  1900  040C  3420               	retlw	32	;' '
  1901  040D  3420               	retlw	32	;' '
  1902  040E  3420               	retlw	32	;' '
  1903  040F  3420               	retlw	32	;' '
  1904  0410  3400               	retlw	0
  1905                           
  1906                           	psect	stringtext6
  1907  0411                     __pstringtext6:	
  1908  0411                     STR_4:	
  1909  0411  3420               	retlw	32	;' '
  1910  0412  3455               	retlw	85	;'U'
  1911  0413  346D               	retlw	109	;'m'
  1912  0414  3469               	retlw	105	;'i'
  1913  0415  3464               	retlw	100	;'d'
  1914  0416  343D               	retlw	61	;'='
  1915  0417  3425               	retlw	37	;'%'
  1916  0418  3464               	retlw	100	;'d'
  1917  0419  3420               	retlw	32	;' '
  1918  041A  3420               	retlw	32	;' '
  1919  041B  3420               	retlw	32	;' '
  1920  041C  3420               	retlw	32	;' '
  1921  041D  3420               	retlw	32	;' '
  1922  041E  3420               	retlw	32	;' '
  1923  041F  3420               	retlw	32	;' '
  1924  0420  3420               	retlw	32	;' '
  1925  0421  3400               	retlw	0
  1926                           
  1927                           	psect	stringtext7
  1928  0422                     __pstringtext7:	
  1929  0422                     STR_13:	
  1930  0422  3420               	retlw	32	;' '
  1931  0423  3462               	retlw	98	;'b'
  1932  0424  3474               	retlw	116	;'t'
  1933  0425  346E               	retlw	110	;'n'
  1934  0426  3420               	retlw	32	;' '
  1935  0427  3450               	retlw	80	;'P'
  1936  0428  344C               	retlw	76	;'L'
  1937  0429  3455               	retlw	85	;'U'
  1938  042A  3453               	retlw	83	;'S'
  1939  042B  3420               	retlw	32	;' '
  1940  042C  3420               	retlw	32	;' '
  1941  042D  3420               	retlw	32	;' '
  1942  042E  3420               	retlw	32	;' '
  1943  042F  3420               	retlw	32	;' '
  1944  0430  3420               	retlw	32	;' '
  1945  0431  3420               	retlw	32	;' '
  1946  0432  3400               	retlw	0
  1947                           
  1948                           	psect	stringtext8
  1949  0433                     __pstringtext8:	
  1950  0433                     STR_3:	
  1951  0433  3420               	retlw	32	;' '
  1952  0434  3454               	retlw	84	;'T'
  1953  0435  3465               	retlw	101	;'e'
  1954  0436  346D               	retlw	109	;'m'
  1955  0437  3470               	retlw	112	;'p'
  1956  0438  3465               	retlw	101	;'e'
  1957  0439  3472               	retlw	114	;'r'
  1958  043A  343D               	retlw	61	;'='
  1959  043B  3425               	retlw	37	;'%'
  1960  043C  3464               	retlw	100	;'d'
  1961  043D  3420               	retlw	32	;' '
  1962  043E  3420               	retlw	32	;' '
  1963  043F  3420               	retlw	32	;' '
  1964  0440  3420               	retlw	32	;' '
  1965  0441  3420               	retlw	32	;' '
  1966  0442  3420               	retlw	32	;' '
  1967  0443  3400               	retlw	0
  1968                           
  1969                           	psect	stringtext9
  1970  0444                     __pstringtext9:	
  1971  0444                     STR_6:	
  1972  0444  3441               	retlw	65	;'A'
  1973  0445  3454               	retlw	84	;'T'
  1974  0446  342B               	retlw	43	;'+'
  1975  0447  3443               	retlw	67	;'C'
  1976  0448  3450               	retlw	80	;'P'
  1977  0449  3449               	retlw	73	;'I'
  1978  044A  344E               	retlw	78	;'N'
  1979  044B  343D               	retlw	61	;'='
  1980  044C  3422               	retlw	34	;'"'
  1981  044D  3431               	retlw	49	;'1'
  1982  044E  3432               	retlw	50	;'2'
  1983  044F  3433               	retlw	51	;'3'
  1984  0450  3434               	retlw	52	;'4'
  1985  0451  3422               	retlw	34	;'"'
  1986  0452  3400               	retlw	0
  1987                           
  1988                           	psect	stringtext10
  1989  0453                     __pstringtext10:	
  1990  0453                     STR_1:	
  1991  0453  3441               	retlw	65	;'A'
  1992  0454  3454               	retlw	84	;'T'
  1993  0455  342B               	retlw	43	;'+'
  1994  0456  3443               	retlw	67	;'C'
  1995  0457  3453               	retlw	83	;'S'
  1996  0458  3443               	retlw	67	;'C'
  1997  0459  3453               	retlw	83	;'S'
  1998  045A  343D               	retlw	61	;'='
  1999  045B  3422               	retlw	34	;'"'
  2000  045C  3447               	retlw	71	;'G'
  2001  045D  3453               	retlw	83	;'S'
  2002  045E  344D               	retlw	77	;'M'
  2003  045F  3422               	retlw	34	;'"'
  2004  0460  3400               	retlw	0
  2005                           
  2006                           	psect	stringtext11
  2007  046B                     __pstringtext11:	
  2008  046B                     STR_7:	
  2009  046B  3441               	retlw	65	;'A'
  2010  046C  3454               	retlw	84	;'T'
  2011  046D  342B               	retlw	43	;'+'
  2012  046E  3443               	retlw	67	;'C'
  2013  046F  344D               	retlw	77	;'M'
  2014  0470  3447               	retlw	71	;'G'
  2015  0471  3446               	retlw	70	;'F'
  2016  0472  343D               	retlw	61	;'='
  2017  0473  3431               	retlw	49	;'1'
  2018  0474  3400               	retlw	0
  2019                           
  2020                           	psect	stringtext12
  2021  0497                     __pstringtext12:	
  2022  0497                     STR_10:	
  2023  0497  3455               	retlw	85	;'U'
  2024  0498  346D               	retlw	109	;'m'
  2025  0499  343D               	retlw	61	;'='
  2026  049A  3425               	retlw	37	;'%'
  2027  049B  3464               	retlw	100	;'d'
  2028  049C  3400               	retlw	0
  2029                           
  2030                           	psect	stringtext13
  2031  04B8                     __pstringtext13:	
  2032  04B8                     STR_5:	
  2033  04B8  3441               	retlw	65	;'A'
  2034  04B9  3454               	retlw	84	;'T'
  2035  04BA  3400               	retlw	0
  2036                           
  2037                           	psect	stringtext14
  2038  0000                     __pstringtext14:	
  2039  0453                     
  2040                           ; #config settings
  2041  0000                     
  2042                           	psect	cinit
  2043  003E                     start_initialization:	
  2044  003E                     __initialization:	
  2045                           
  2046                           ; Initialize objects allocated to BANK0
  2047  003E  3091               	movlw	low __pidataBANK0
  2048  003F  0084               	movwf	4
  2049  0040  3084               	movlw	(high __pidataBANK0)| (0+128)
  2050  0041  0085               	movwf	5
  2051  0042  3065               	movlw	low __pdataBANK0
  2052  0043  0086               	movwf	6
  2053  0044  3000               	movlw	high __pdataBANK0
  2054  0045  0087               	movwf	7
  2055  0046  3006               	movlw	6
  2056  0047  3184  249D  3180   	fcall	init_ram
  2057                           
  2058                           ; Initialize objects allocated to BANK1
  2059  004A  309B               	movlw	low __pidataBANK1
  2060  004B  0084               	movwf	4
  2061  004C  3082               	movlw	(high __pidataBANK1)| (0+128)
  2062  004D  0085               	movwf	5
  2063  004E  30A0               	movlw	low __pdataBANK1
  2064  004F  0086               	movwf	6
  2065  0050  3000               	movlw	high __pdataBANK1
  2066  0051  0087               	movwf	7
  2067  0052  302A               	movlw	42
  2068  0053  3184  249D  3180   	fcall	init_ram
  2069                           
  2070                           ; Clear objects allocated to COMMON
  2071  0056  01FA               	clrf	__pbssCOMMON& (0+127)
  2072  0057  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  2073  0058  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
  2074  0059  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
  2075                           
  2076                           ; Clear objects allocated to BANK0
  2077  005A  3020               	movlw	low __pbssBANK0
  2078  005B  0084               	movwf	4
  2079  005C  3000               	movlw	high __pbssBANK0
  2080  005D  0085               	movwf	5
  2081  005E  3037               	movlw	55
  2082  005F  3184  24A3  3180   	fcall	clear_ram0
  2083                           
  2084                           ; Clear objects allocated to BANK1
  2085  0062  30CA               	movlw	low __pbssBANK1
  2086  0063  0084               	movwf	4
  2087  0064  3000               	movlw	high __pbssBANK1
  2088  0065  0085               	movwf	5
  2089  0066  3017               	movlw	23
  2090  0067  3184  24A3  3180   	fcall	clear_ram0
  2091                           
  2092                           ; Clear objects allocated to BANK2
  2093  006A  3020               	movlw	low __pbssBANK2
  2094  006B  0084               	movwf	4
  2095  006C  3001               	movlw	high __pbssBANK2
  2096  006D  0085               	movwf	5
  2097  006E  304B               	movlw	75
  2098  006F  3184  24A3         	fcall	clear_ram0
  2099  0071                     end_of_initialization:	
  2100                           ;End of C runtime variable initialization code
  2101                           
  2102  0071                     __end_of__initialization:	
  2103  0071  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2104  0072  0020               	movlb	0
  2105  0073  3180  2875         	ljmp	_main	;jump to C main() function
  2106                           
  2107                           	psect	bssCOMMON
  2108  007A                     __pbssCOMMON:	
  2109  007A                     turn_egs@step_index:	
  2110  007A                     	ds	1
  2111  007B                     _RH_byte1:	
  2112  007B                     	ds	1
  2113  007C                     _rcreg:	
  2114  007C                     	ds	1
  2115  007D                     _strKey_Counts:	
  2116  007D                     	ds	1
  2117                           
  2118                           	psect	bssBANK0
  2119  0020                     __pbssBANK0:	
  2120  0020                     int_gsm@sms1_index:	
  2121  0020                     	ds	2
  2122  0022                     _umiditate:	
  2123  0022                     	ds	2
  2124  0024                     _temp:	
  2125  0024                     	ds	2
  2126  0026                     TMR1_ISR@CountCallBack:	
  2127  0026                     	ds	2
  2128  0028                     _count_4000_ms:	
  2129  0028                     	ds	2
  2130  002A                     _count_1000_ms:	
  2131  002A                     	ds	2
  2132  002C                     _count_500_ms:	
  2133  002C                     	ds	2
  2134  002E                     _count_100_ms:	
  2135  002E                     	ds	2
  2136  0030                     _flag_4000_ms:	
  2137  0030                     	ds	2
  2138  0032                     _flag_1000_ms:	
  2139  0032                     	ds	2
  2140  0034                     _flag_500_ms:	
  2141  0034                     	ds	2
  2142  0036                     _flag_100_ms:	
  2143  0036                     	ds	2
  2144  0038                     _flag_10_ms:	
  2145  0038                     	ds	2
  2146  003A                     _flag_1_ms:	
  2147  003A                     	ds	2
  2148  003C                     _flag_B:	
  2149  003C                     	ds	2
  2150  003E                     _flag_A:	
  2151  003E                     	ds	2
  2152  0040                     _flag_G:	
  2153  0040                     	ds	2
  2154  0042                     _flag_N:	
  2155  0042                     	ds	2
  2156  0044                     _rez_conversie:	
  2157  0044                     	ds	2
  2158  0046                     sms_text@F3745:	
  2159  0046                     	ds	1
  2160  0047                     sms_text@F3743:	
  2161  0047                     	ds	1
  2162  0048                     _Sum:	
  2163  0048                     	ds	1
  2164  0049                     _RH:	
  2165  0049                     	ds	1
  2166  004A                     _Temp:	
  2167  004A                     	ds	1
  2168  004B                     _Ch:	
  2169  004B                     	ds	1
  2170  004C                     _RH_byte2:	
  2171  004C                     	ds	1
  2172  004D                     _T_byte2:	
  2173  004D                     	ds	1
  2174  004E                     _T_byte1:	
  2175  004E                     	ds	1
  2176  004F                     _Check:	
  2177  004F                     	ds	1
  2178  0050                     _eusartRxCount:	
  2179  0050                     	ds	1
  2180  0051                     _eusartRxTail:	
  2181  0051                     	ds	1
  2182  0052                     _eusartRxHead:	
  2183  0052                     	ds	1
  2184  0053                     _eusartTxTail:	
  2185  0053                     	ds	1
  2186  0054                     _eusartTxHead:	
  2187  0054                     	ds	1
  2188  0055                     _strKey_Released:	
  2189  0055                     	ds	1
  2190  0056                     _strKey_Pressed:	
  2191  0056                     	ds	1
  2192                           
  2193                           	psect	dataBANK0
  2194  0065                     __pdataBANK0:	
  2195  0065                     turn_egs@step_nr:	
  2196  0065                     	ds	2
  2197  0067                     _line1:	
  2198  0067                     	ds	2
  2199  0069                     _line2:	
  2200  0069                     	ds	2
  2201                           
  2202                           	psect	bssBANK1
  2203  00CA                     __pbssBANK1:	
  2204  00CA                     _eusartRxBuffer:	
  2205  00CA                     	ds	8
  2206  00D2                     _eusartTxBuffer:	
  2207  00D2                     	ds	8
  2208  00DA                     LCDWriteInt@F3737:	
  2209  00DA                     	ds	5
  2210  00DF                     sms_text@sms_index:	
  2211  00DF                     	ds	2
  2212                           
  2213                           	psect	dataBANK1
  2214  00A0                     __pdataBANK1:	
  2215  00A0                     comparare@F3755:	
  2216  00A0                     	ds	42
  2217                           
  2218                           	psect	bssBANK2
  2219  0120                     __pbssBANK2:	
  2220  0120                     comparare@F3760:	
  2221  0120                     	ds	75
  2222                           
  2223                           	psect	inittext
  2224  049D                     init_ram:	
  2225  049D  00FE               	movwf	126
  2226  049E                     initloop:	
  2227  049E  0012               	moviw fsr0++
  2228  049F  001E               	movwi fsr1++
  2229  04A0  0BFE               	decfsz	126,f
  2230  04A1  2C9E               	goto	initloop
  2231  04A2  3400               	retlw	0
  2232                           
  2233                           	psect	clrtext
  2234  04A3                     clear_ram0:	
  2235                           ;	Called with FSR0 containing the base address, and
  2236                           ;	WREG with the size to clear
  2237                           
  2238  04A3  0064               	clrwdt	;clear the watchdog before getting into this loop
  2239  04A4                     clrloop0:	
  2240  04A4  0180               	clrf	0	;clear RAM location pointed to by FSR
  2241  04A5  3101               	addfsr 0,1
  2242  04A6  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2243  04A7  2CA4               	goto	clrloop0	;have we reached the end yet?
  2244  04A8  3400               	retlw	0	;all done for this memory range, return
  2245                           
  2246                           	psect	cstackCOMMON
  2247  0070                     __pcstackCOMMON:	
  2248  0070                     ?_PIN_MANAGER_Initialize:	
  2249  0070                     ?_OSCILLATOR_Initialize:	
  2250                           ; 1 bytes @ 0x0
  2251                           
  2252  0070                     ?_WDT_Initialize:	
  2253                           ; 1 bytes @ 0x0
  2254                           
  2255  0070                     ?_TMR1_Initialize:	
  2256                           ; 1 bytes @ 0x0
  2257                           
  2258  0070                     ?_ADC_Initialize:	
  2259                           ; 1 bytes @ 0x0
  2260                           
  2261  0070                     ?_EUSART_Initialize:	
  2262                           ; 1 bytes @ 0x0
  2263                           
  2264  0070                     ?_ADC_ISR:	
  2265                           ; 1 bytes @ 0x0
  2266                           
  2267  0070                     ?_TMR1_ISR:	
  2268                           ; 1 bytes @ 0x0
  2269                           
  2270  0070                     ??_TMR1_ISR:	
  2271                           ; 1 bytes @ 0x0
  2272                           
  2273  0070                     ?_TMR1_DefaultInterruptHandler:	
  2274                           ; 1 bytes @ 0x0
  2275                           
  2276  0070                     ??_TMR1_DefaultInterruptHandler:	
  2277                           ; 1 bytes @ 0x0
  2278                           
  2279  0070                     ?_TMR1_StartTimer:	
  2280                           ; 1 bytes @ 0x0
  2281                           
  2282  0070                     ?_TMR1_CallBack:	
  2283                           ; 1 bytes @ 0x0
  2284                           
  2285  0070                     ??_TMR1_CallBack:	
  2286                           ; 1 bytes @ 0x0
  2287                           
  2288  0070                     ?_LCDInit:	
  2289                           ; 1 bytes @ 0x0
  2290                           
  2291  0070                     ?_Keyboard_Manager:	
  2292                           ; 1 bytes @ 0x0
  2293                           
  2294  0070                     ?_Check_key:	
  2295                           ; 1 bytes @ 0x0
  2296                           
  2297  0070                     ?_Check_KeyPressed:	
  2298                           ; 1 bytes @ 0x0
  2299                           
  2300  0070                     ?_Check_KeyReleased:	
  2301                           ; 1 bytes @ 0x0
  2302                           
  2303  0070                     ?_SYSTEM_Initialize:	
  2304                           ; 1 bytes @ 0x0
  2305                           
  2306  0070                     ?_EUSART_Transmit_ISR:	
  2307                           ; 1 bytes @ 0x0
  2308                           
  2309  0070                     ??_EUSART_Transmit_ISR:	
  2310                           ; 1 bytes @ 0x0
  2311                           
  2312  0070                     ?_EUSART_Receive_ISR:	
  2313                           ; 1 bytes @ 0x0
  2314                           
  2315  0070                     ??_EUSART_Receive_ISR:	
  2316                           ; 1 bytes @ 0x0
  2317                           
  2318  0070                     ?_INTERRUPT_InterruptManager:	
  2319                           ; 1 bytes @ 0x0
  2320                           
  2321  0070                     ?_ADC_StartConversion:	
  2322                           ; 1 bytes @ 0x0
  2323                           
  2324  0070                     ?_main:	
  2325                           ; 1 bytes @ 0x0
  2326                           
  2327  0070                     ?_ADC_GetConversionResult:	
  2328                           ; 1 bytes @ 0x0
  2329                           
  2330                           
  2331                           ; 2 bytes @ 0x0
  2332  0070                     	ds	2
  2333  0072                     ??_ADC_GetConversionResult:	
  2334                           
  2335                           ; 1 bytes @ 0x2
  2336  0072                     	ds	7
  2337  0079                     ??_ADC_ISR:	
  2338  0079                     ??_INTERRUPT_InterruptManager:	
  2339                           ; 1 bytes @ 0x9
  2340                           
  2341                           
  2342                           ; 1 bytes @ 0x9
  2343  0079                     	ds	1
  2344                           
  2345                           	psect	cstackBANK0
  2346  0057                     __pcstackBANK0:	
  2347  0057                     ??_PIN_MANAGER_Initialize:	
  2348  0057                     ??_OSCILLATOR_Initialize:	
  2349                           ; 1 bytes @ 0x0
  2350                           
  2351  0057                     ??_WDT_Initialize:	
  2352                           ; 1 bytes @ 0x0
  2353                           
  2354  0057                     ??_ADC_Initialize:	
  2355                           ; 1 bytes @ 0x0
  2356                           
  2357  0057                     ??_EUSART_Initialize:	
  2358                           ; 1 bytes @ 0x0
  2359                           
  2360  0057                     ?_TMR1_SetInterruptHandler:	
  2361                           ; 1 bytes @ 0x0
  2362                           
  2363  0057                     ??_TMR1_StartTimer:	
  2364                           ; 1 bytes @ 0x0
  2365                           
  2366  0057                     ??_Check_key:	
  2367                           ; 1 bytes @ 0x0
  2368                           
  2369  0057                     ?_LCDByte:	
  2370                           ; 1 bytes @ 0x0
  2371                           
  2372  0057                     ??_Check_KeyPressed:	
  2373                           ; 1 bytes @ 0x0
  2374                           
  2375  0057                     ??_Check_KeyReleased:	
  2376                           ; 1 bytes @ 0x0
  2377                           
  2378  0057                     ??_ADC_StartConversion:	
  2379                           ; 1 bytes @ 0x0
  2380                           
  2381  0057                     LCDByte@isdata:	
  2382                           ; 1 bytes @ 0x0
  2383                           
  2384  0057                     Check_key@btn_mask:	
  2385                           ; 1 bytes @ 0x0
  2386                           
  2387  0057                     TMR1_SetInterruptHandler@InterruptHandler:	
  2388                           ; 1 bytes @ 0x0
  2389                           
  2390                           
  2391                           ; 2 bytes @ 0x0
  2392  0057                     	ds	1
  2393  0058                     ??_Keyboard_Manager:	
  2394  0058                     ??_LCDByte:	
  2395                           ; 1 bytes @ 0x1
  2396                           
  2397  0058                     Check_key@btn_pressed:	
  2398                           ; 1 bytes @ 0x1
  2399                           
  2400                           
  2401                           ; 1 bytes @ 0x1
  2402  0058                     	ds	1
  2403  0059                     ??_TMR1_Initialize:	
  2404  0059                     ??_TMR1_SetInterruptHandler:	
  2405                           ; 1 bytes @ 0x2
  2406                           
  2407  0059                     ??_SYSTEM_Initialize:	
  2408                           ; 1 bytes @ 0x2
  2409                           
  2410                           
  2411                           ; 1 bytes @ 0x2
  2412  0059                     	ds	1
  2413  005A                     LCDByte@hn:	
  2414                           
  2415                           ; 1 bytes @ 0x3
  2416  005A                     	ds	1
  2417  005B                     LCDByte@ln:	
  2418                           
  2419                           ; 1 bytes @ 0x4
  2420  005B                     	ds	1
  2421  005C                     LCDByte@c:	
  2422                           
  2423                           ; 1 bytes @ 0x5
  2424  005C                     	ds	1
  2425  005D                     LCDByte@temp:	
  2426                           
  2427                           ; 1 bytes @ 0x6
  2428  005D                     	ds	1
  2429  005E                     ??_LCDInit:	
  2430  005E                     ?_LCDWriteString:	
  2431                           ; 1 bytes @ 0x7
  2432                           
  2433  005E                     LCDWriteString@msg:	
  2434                           ; 1 bytes @ 0x7
  2435                           
  2436                           
  2437                           ; 2 bytes @ 0x7
  2438  005E                     	ds	1
  2439  005F                     LCDInit@style:	
  2440                           
  2441                           ; 1 bytes @ 0x8
  2442  005F                     	ds	1
  2443  0060                     ??_LCDWriteString:	
  2444                           
  2445                           ; 1 bytes @ 0x9
  2446  0060                     	ds	1
  2447  0061                     LCDWriteString@cc:	
  2448                           
  2449                           ; 1 bytes @ 0xA
  2450  0061                     	ds	1
  2451  0062                     ??_main:	
  2452                           
  2453                           ; 1 bytes @ 0xB
  2454  0062                     	ds	1
  2455  0063                     main@x:	
  2456                           
  2457                           ; 1 bytes @ 0xC
  2458  0063                     	ds	1
  2459  0064                     main@incubator_state:	
  2460                           
  2461                           ; 1 bytes @ 0xD
  2462  0064                     	ds	1
  2463                           
  2464                           	psect	maintext
  2465  0075                     __pmaintext:	
  2466 ;;
  2467 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2468 ;;
  2469 ;; *************** function _main *****************
  2470 ;; Defined at:
  2471 ;;		line 401 in file "main.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;		None
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  volt            3    0        float 
  2476 ;;  incubator_st    1   13[BANK0 ] unsigned char 
  2477 ;;  x               1   12[BANK0 ] unsigned char 
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  1    wreg      void 
  2480 ;; Registers used:
  2481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2482 ;; Tracked objects:
  2483 ;;		On entry : B1F/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2487 ;;      Params:         0       0       0       0       0       0       0       0
  2488 ;;      Locals:         0       2       0       0       0       0       0       0
  2489 ;;      Temps:          0       1       0       0       0       0       0       0
  2490 ;;      Totals:         0       3       0       0       0       0       0       0
  2491 ;;Total ram usage:        3 bytes
  2492 ;; Hardware stack levels required when called:    7
  2493 ;; This function calls:
  2494 ;;		_ADC_StartConversion
  2495 ;;		_Check_key
  2496 ;;		_Keyboard_Manager
  2497 ;;		_LCDByte
  2498 ;;		_LCDInit
  2499 ;;		_LCDWriteString
  2500 ;;		_SYSTEM_Initialize
  2501 ;; This function is called by:
  2502 ;;		Startup code after reset
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           
  2507                           ;psect for function _main
  2508  0075                     _main:	
  2509                           
  2510                           ;main.c: 403: char x=0;
  2511                           
  2512                           ;incstack = 0
  2513                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2514  0075  0020               	movlb	0	; select bank0
  2515  0076  01E3               	clrf	main@x
  2516                           
  2517                           ;main.c: 406: SYSTEM_Initialize();
  2518  0077  3183  23EE  3180   	fcall	_SYSTEM_Initialize
  2519                           
  2520                           ;main.c: 407: TRISCbits.TRISC2=0;
  2521  007A  0021               	movlb	1	; select bank1
  2522  007B  110E               	bcf	14,2	;volatile
  2523                           
  2524                           ;main.c: 408: ADC_StartConversion();
  2525  007C  3184  24BE  3180   	fcall	_ADC_StartConversion
  2526                           
  2527                           ;main.c: 409: TRISCbits.TRISC0=0;
  2528  007F  0021               	movlb	1	; select bank1
  2529  0080  100E               	bcf	14,0	;volatile
  2530                           
  2531                           ;main.c: 410: TRISCbits.TRISC3=0;
  2532  0081  118E               	bcf	14,3	;volatile
  2533                           
  2534                           ;main.c: 411: TRISCbits.TRISC4=0;
  2535  0082  120E               	bcf	14,4	;volatile
  2536                           
  2537                           ;main.c: 412: TRISCbits.TRISC5=0;
  2538  0083  128E               	bcf	14,5	;volatile
  2539                           
  2540                           ;main.c: 415: ANSELD=ANSELD & 0b11100000;
  2541  0084  0023               	movlb	3	; select bank3
  2542  0085  080F               	movf	15,w	;volatile
  2543  0086  39E0               	andlw	224
  2544  0087  008F               	movwf	15	;volatile
  2545                           
  2546                           ;main.c: 420: (INTCONbits.GIE = 1);
  2547  0088  178B               	bsf	11,7	;volatile
  2548                           
  2549                           ;main.c: 423: (INTCONbits.PEIE = 1);
  2550  0089  170B               	bsf	11,6	;volatile
  2551                           
  2552                           ;main.c: 431: char incubator_state=none;
  2553  008A  3006               	movlw	6
  2554  008B  0020               	movlb	0	; select bank0
  2555  008C  00E2               	movwf	??_main
  2556  008D  0862               	movf	??_main,w
  2557  008E  00E4               	movwf	main@incubator_state
  2558                           
  2559                           ;main.c: 432: TRISDbits.TRISD2 = 1;
  2560  008F  0021               	movlb	1	; select bank1
  2561  0090  150F               	bsf	15,2	;volatile
  2562                           
  2563                           ;main.c: 434: flag_directie=1;
  2564  0091  3001               	movlw	1
  2565  0092  0020               	movlb	0	; select bank0
  2566  0093  00EB               	movwf	_flag_directie
  2567  0094  3000               	movlw	0
  2568  0095  00EC               	movwf	_flag_directie+1
  2569                           
  2570                           ;main.c: 441: float volt;
  2571                           ;main.c: 442: LCDInit(1);
  2572  0096  3001               	movlw	1
  2573  0097  3181  21D3  3180   	fcall	_LCDInit
  2574  009A                     l3059:	
  2575                           ;main.c: 446: while (1)
  2576                           
  2577                           
  2578                           ;main.c: 447: {
  2579                           ;main.c: 448: if(flag_100_ms==1)
  2580  009A  0020               	movlb	0	; select bank0
  2581  009B  0336               	decf	_flag_100_ms,w
  2582  009C  0437               	iorwf	_flag_100_ms+1,w
  2583  009D  1D03               	btfss	3,2
  2584  009E  289A               	goto	l3059
  2585                           
  2586                           ;main.c: 449: {
  2587                           ;main.c: 450: Keyboard_Manager();
  2588  009F  3184  24A9  3180   	fcall	_Keyboard_Manager
  2589                           
  2590                           ;main.c: 451: if (Check_key(0b01000000)==1)
  2591  00A2  3040               	movlw	64
  2592  00A3  3182  22C5  3180   	fcall	_Check_key
  2593  00A6  3A01               	xorlw	1
  2594  00A7  1D03               	skipz
  2595  00A8  28B7               	goto	l3069
  2596                           
  2597                           ;main.c: 452: {
  2598                           ;main.c: 453: (LCDByte(0b00000001,0));
  2599  00A9  0020               	movlb	0	; select bank0
  2600  00AA  01D7               	clrf	LCDByte@isdata
  2601  00AB  3001               	movlw	1
  2602  00AC  3182  225A  3180   	fcall	_LCDByte
  2603                           
  2604                           ;main.c: 454: LCDWriteString(" btn ok         ");
  2605  00AF  3000               	movlw	low (STR_11| (0+32768))
  2606  00B0  0020               	movlb	0	; select bank0
  2607  00B1  00DE               	movwf	LCDWriteString@msg
  2608  00B2  3084               	movlw	high (STR_11| (0+32768))
  2609  00B3  00DF               	movwf	LCDWriteString@msg+1
  2610  00B4  3182  2219  3180   	fcall	_LCDWriteString
  2611  00B7                     l3069:	
  2612                           
  2613                           ;main.c: 455: }
  2614                           ;main.c: 456: if (Check_key(0b00100000)==1)
  2615  00B7  3020               	movlw	32
  2616  00B8  3182  22C5  3180   	fcall	_Check_key
  2617  00BB  3A01               	xorlw	1
  2618  00BC  1D03               	skipz
  2619  00BD  28CC               	goto	l3075
  2620                           
  2621                           ;main.c: 457: {
  2622                           ;main.c: 458: (LCDByte(0b00000001,0));
  2623  00BE  0020               	movlb	0	; select bank0
  2624  00BF  01D7               	clrf	LCDByte@isdata
  2625  00C0  3001               	movlw	1
  2626  00C1  3182  225A  3180   	fcall	_LCDByte
  2627                           
  2628                           ;main.c: 459: LCDWriteString(" btn minus       ");
  2629  00C4  30CA               	movlw	low (STR_12| (0+32768))
  2630  00C5  0020               	movlb	0	; select bank0
  2631  00C6  00DE               	movwf	LCDWriteString@msg
  2632  00C7  3083               	movlw	high (STR_12| (0+32768))
  2633  00C8  00DF               	movwf	LCDWriteString@msg+1
  2634  00C9  3182  2219  3180   	fcall	_LCDWriteString
  2635  00CC                     l3075:	
  2636                           
  2637                           ;main.c: 460: }
  2638                           ;main.c: 461: if (Check_key(0b10000000)==1)
  2639  00CC  3080               	movlw	128
  2640  00CD  3182  22C5  3180   	fcall	_Check_key
  2641  00D0  3A01               	xorlw	1
  2642  00D1  1D03               	skipz
  2643  00D2  28E1               	goto	l3081
  2644                           
  2645                           ;main.c: 462: {
  2646                           ;main.c: 463: (LCDByte(0b00000001,0));
  2647  00D3  0020               	movlb	0	; select bank0
  2648  00D4  01D7               	clrf	LCDByte@isdata
  2649  00D5  3001               	movlw	1
  2650  00D6  3182  225A  3180   	fcall	_LCDByte
  2651                           
  2652                           ;main.c: 464: LCDWriteString(" btn PLUS       ");
  2653  00D9  3022               	movlw	low (STR_13| (0+32768))
  2654  00DA  0020               	movlb	0	; select bank0
  2655  00DB  00DE               	movwf	LCDWriteString@msg
  2656  00DC  3084               	movlw	high (STR_13| (0+32768))
  2657  00DD  00DF               	movwf	LCDWriteString@msg+1
  2658  00DE  3182  2219  3180   	fcall	_LCDWriteString
  2659  00E1                     l3081:	
  2660                           
  2661                           ;main.c: 465: }
  2662                           ;main.c: 467: flag_100_ms=0;
  2663  00E1  0020               	movlb	0	; select bank0
  2664  00E2  01B6               	clrf	_flag_100_ms
  2665  00E3  01B7               	clrf	_flag_100_ms+1
  2666  00E4  289A               	goto	l3059
  2667  00E5                     __end_of_main:	
  2668                           ;main.c: 468: }
  2669                           ;main.c: 538: }
  2670                           ;main.c: 541: return;
  2671                           
  2672                           
  2673                           	psect	text1
  2674  03EE                     __ptext1:	
  2675 ;; *************** function _SYSTEM_Initialize *****************
  2676 ;; Defined at:
  2677 ;;		line 70 in file "mcc_generated_files/mcc.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;		None
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;		None
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1    wreg      void 
  2684 ;; Registers used:
  2685 ;;		wreg, status,2, status,0, pclath, cstack
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2691 ;;      Params:         0       0       0       0       0       0       0       0
  2692 ;;      Locals:         0       0       0       0       0       0       0       0
  2693 ;;      Temps:          0       0       0       0       0       0       0       0
  2694 ;;      Totals:         0       0       0       0       0       0       0       0
  2695 ;;Total ram usage:        0 bytes
  2696 ;; Hardware stack levels used:    1
  2697 ;; Hardware stack levels required when called:    6
  2698 ;; This function calls:
  2699 ;;		_ADC_Initialize
  2700 ;;		_EUSART_Initialize
  2701 ;;		_OSCILLATOR_Initialize
  2702 ;;		_PIN_MANAGER_Initialize
  2703 ;;		_TMR1_Initialize
  2704 ;;		_WDT_Initialize
  2705 ;; This function is called by:
  2706 ;;		_main
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           
  2711                           ;psect for function _SYSTEM_Initialize
  2712  03EE                     _SYSTEM_Initialize:	
  2713                           
  2714                           ;mcc.c: 73: PIN_MANAGER_Initialize();
  2715                           
  2716                           ;incstack = 0
  2717                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2718  03EE  3182  22EA  3183   	fcall	_PIN_MANAGER_Initialize
  2719                           
  2720                           ;mcc.c: 74: OSCILLATOR_Initialize();
  2721  03F1  3184  24AF  3183   	fcall	_OSCILLATOR_Initialize
  2722                           
  2723                           ;mcc.c: 75: WDT_Initialize();
  2724  03F4  3184  24B4  3183   	fcall	_WDT_Initialize
  2725                           
  2726                           ;mcc.c: 76: TMR1_Initialize();
  2727  03F7  3183  239D  3183   	fcall	_TMR1_Initialize
  2728                           
  2729                           ;mcc.c: 77: ADC_Initialize();
  2730  03FA  3184  2488  3183   	fcall	_ADC_Initialize
  2731                           
  2732                           ;mcc.c: 78: EUSART_Initialize();
  2733  03FD  3183  2367         	fcall	_EUSART_Initialize
  2734  03FF  0008               	return
  2735  0400                     __end_of_SYSTEM_Initialize:	
  2736                           
  2737                           	psect	text2
  2738  04B4                     __ptext2:	
  2739 ;; *************** function _WDT_Initialize *****************
  2740 ;; Defined at:
  2741 ;;		line 89 in file "mcc_generated_files/mcc.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;		None
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;		None
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      void 
  2748 ;; Registers used:
  2749 ;;		wreg
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2755 ;;      Params:         0       0       0       0       0       0       0       0
  2756 ;;      Locals:         0       0       0       0       0       0       0       0
  2757 ;;      Temps:          0       0       0       0       0       0       0       0
  2758 ;;      Totals:         0       0       0       0       0       0       0       0
  2759 ;;Total ram usage:        0 bytes
  2760 ;; Hardware stack levels used:    1
  2761 ;; Hardware stack levels required when called:    4
  2762 ;; This function calls:
  2763 ;;		Nothing
  2764 ;; This function is called by:
  2765 ;;		_SYSTEM_Initialize
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           
  2770                           ;psect for function _WDT_Initialize
  2771  04B4                     _WDT_Initialize:	
  2772                           
  2773                           ;mcc.c: 92: WDTCON = 0x16;
  2774                           
  2775                           ;incstack = 0
  2776                           ; Regs used in _WDT_Initialize: [wreg]
  2777  04B4  3016               	movlw	22
  2778  04B5  0021               	movlb	1	; select bank1
  2779  04B6  0097               	movwf	23	;volatile
  2780  04B7  0008               	return
  2781  04B8                     __end_of_WDT_Initialize:	
  2782                           
  2783                           	psect	text3
  2784  039D                     __ptext3:	
  2785 ;; *************** function _TMR1_Initialize *****************
  2786 ;; Defined at:
  2787 ;;		line 74 in file "mcc_generated_files/tmr1.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;		None
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;		None
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      void 
  2794 ;; Registers used:
  2795 ;;		wreg, status,2, status,0, pclath, cstack
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2801 ;;      Params:         0       0       0       0       0       0       0       0
  2802 ;;      Locals:         0       0       0       0       0       0       0       0
  2803 ;;      Temps:          0       0       0       0       0       0       0       0
  2804 ;;      Totals:         0       0       0       0       0       0       0       0
  2805 ;;Total ram usage:        0 bytes
  2806 ;; Hardware stack levels used:    1
  2807 ;; Hardware stack levels required when called:    5
  2808 ;; This function calls:
  2809 ;;		_TMR1_SetInterruptHandler
  2810 ;;		_TMR1_StartTimer
  2811 ;; This function is called by:
  2812 ;;		_SYSTEM_Initialize
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816                           
  2817                           ;psect for function _TMR1_Initialize
  2818  039D                     _TMR1_Initialize:	
  2819                           
  2820                           ;tmr1.c: 79: T1CON = 0x00;
  2821                           
  2822                           ;incstack = 0
  2823                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2824  039D  0020               	movlb	0	; select bank0
  2825  039E  0198               	clrf	24	;volatile
  2826                           
  2827                           ;tmr1.c: 82: T1GCON = 0x00;
  2828  039F  0199               	clrf	25	;volatile
  2829                           
  2830                           ;tmr1.c: 85: TMR1H = 0xEE;
  2831  03A0  30EE               	movlw	238
  2832  03A1  0097               	movwf	23	;volatile
  2833                           
  2834                           ;tmr1.c: 88: TMR1L = 0x00;
  2835  03A2  0196               	clrf	22	;volatile
  2836                           
  2837                           ;tmr1.c: 91: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  2838  03A3  0817               	movf	23,w	;volatile
  2839  03A4  00EE               	movwf	_timer1ReloadVal+1	;volatile
  2840  03A5  0816               	movf	22,w	;volatile
  2841  03A6  00ED               	movwf	_timer1ReloadVal	;volatile
  2842                           
  2843                           ;tmr1.c: 94: PIR1bits.TMR1IF = 0;
  2844  03A7  1011               	bcf	17,0	;volatile
  2845                           
  2846                           ;tmr1.c: 97: PIE1bits.TMR1IE = 1;
  2847  03A8  0021               	movlb	1	; select bank1
  2848  03A9  1411               	bsf	17,0	;volatile
  2849                           
  2850                           ;tmr1.c: 100: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  2851  03AA  30C1               	movlw	low _TMR1_DefaultInterruptHandler
  2852  03AB  0020               	movlb	0	; select bank0
  2853  03AC  00D7               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  2854  03AD  3004               	movlw	high _TMR1_DefaultInterruptHandler
  2855  03AE  00D8               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  2856  03AF  3184  247F  3183   	fcall	_TMR1_SetInterruptHandler
  2857                           
  2858                           ;tmr1.c: 103: TMR1_StartTimer();
  2859  03B2  3184  24BB         	fcall	_TMR1_StartTimer
  2860  03B4  0008               	return
  2861  03B5                     __end_of_TMR1_Initialize:	
  2862                           
  2863                           	psect	text4
  2864  04BB                     __ptext4:	
  2865 ;; *************** function _TMR1_StartTimer *****************
  2866 ;; Defined at:
  2867 ;;		line 106 in file "mcc_generated_files/tmr1.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;		None
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;		None
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  1    wreg      void 
  2874 ;; Registers used:
  2875 ;;		None
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2881 ;;      Params:         0       0       0       0       0       0       0       0
  2882 ;;      Locals:         0       0       0       0       0       0       0       0
  2883 ;;      Temps:          0       0       0       0       0       0       0       0
  2884 ;;      Totals:         0       0       0       0       0       0       0       0
  2885 ;;Total ram usage:        0 bytes
  2886 ;; Hardware stack levels used:    1
  2887 ;; Hardware stack levels required when called:    4
  2888 ;; This function calls:
  2889 ;;		Nothing
  2890 ;; This function is called by:
  2891 ;;		_TMR1_Initialize
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895                           
  2896                           ;psect for function _TMR1_StartTimer
  2897  04BB                     _TMR1_StartTimer:	
  2898                           
  2899                           ;tmr1.c: 109: T1CONbits.TMR1ON = 1;
  2900                           
  2901                           ;incstack = 0
  2902                           ; Regs used in _TMR1_StartTimer: []
  2903  04BB  0020               	movlb	0	; select bank0
  2904  04BC  1418               	bsf	24,0	;volatile
  2905  04BD  0008               	return
  2906  04BE                     __end_of_TMR1_StartTimer:	
  2907                           
  2908                           	psect	text5
  2909  047F                     __ptext5:	
  2910 ;; *************** function _TMR1_SetInterruptHandler *****************
  2911 ;; Defined at:
  2912 ;;		line 227 in file "mcc_generated_files/tmr1.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2915 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;		None
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  1    wreg      void 
  2920 ;; Registers used:
  2921 ;;		wreg
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2927 ;;      Params:         0       2       0       0       0       0       0       0
  2928 ;;      Locals:         0       0       0       0       0       0       0       0
  2929 ;;      Temps:          0       0       0       0       0       0       0       0
  2930 ;;      Totals:         0       2       0       0       0       0       0       0
  2931 ;;Total ram usage:        2 bytes
  2932 ;; Hardware stack levels used:    1
  2933 ;; Hardware stack levels required when called:    4
  2934 ;; This function calls:
  2935 ;;		Nothing
  2936 ;; This function is called by:
  2937 ;;		_TMR1_Initialize
  2938 ;; This function uses a non-reentrant model
  2939 ;;
  2940                           
  2941                           
  2942                           ;psect for function _TMR1_SetInterruptHandler
  2943  047F                     _TMR1_SetInterruptHandler:	
  2944                           
  2945                           ;tmr1.c: 228: TMR1_InterruptHandler = InterruptHandler;
  2946                           
  2947                           ;incstack = 0
  2948                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  2949  047F  0020               	movlb	0	; select bank0
  2950  0480  0858               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  2951  0481  0021               	movlb	1	; select bank1
  2952  0482  00E2               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
  2953  0483  0020               	movlb	0	; select bank0
  2954  0484  0857               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  2955  0485  0021               	movlb	1	; select bank1
  2956  0486  00E1               	movwf	_TMR1_InterruptHandler^(0+128)
  2957  0487  0008               	return
  2958  0488                     __end_of_TMR1_SetInterruptHandler:	
  2959                           
  2960                           	psect	text6
  2961  02EA                     __ptext6:	
  2962 ;; *************** function _PIN_MANAGER_Initialize *****************
  2963 ;; Defined at:
  2964 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;		None
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;		None
  2969 ;; Return value:  Size  Location     Type
  2970 ;;                  1    wreg      void 
  2971 ;; Registers used:
  2972 ;;		wreg, status,2
  2973 ;; Tracked objects:
  2974 ;;		On entry : 0/0
  2975 ;;		On exit  : 0/0
  2976 ;;		Unchanged: 0/0
  2977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2978 ;;      Params:         0       0       0       0       0       0       0       0
  2979 ;;      Locals:         0       0       0       0       0       0       0       0
  2980 ;;      Temps:          0       0       0       0       0       0       0       0
  2981 ;;      Totals:         0       0       0       0       0       0       0       0
  2982 ;;Total ram usage:        0 bytes
  2983 ;; Hardware stack levels used:    1
  2984 ;; Hardware stack levels required when called:    4
  2985 ;; This function calls:
  2986 ;;		Nothing
  2987 ;; This function is called by:
  2988 ;;		_SYSTEM_Initialize
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991                           
  2992                           
  2993                           ;psect for function _PIN_MANAGER_Initialize
  2994  02EA                     _PIN_MANAGER_Initialize:	
  2995                           
  2996                           ;pin_manager.c: 57: LATE = 0x00;
  2997                           
  2998                           ;incstack = 0
  2999                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3000  02EA  0022               	movlb	2	; select bank2
  3001  02EB  0190               	clrf	16	;volatile
  3002                           
  3003                           ;pin_manager.c: 58: LATD = 0x00;
  3004  02EC  018F               	clrf	15	;volatile
  3005                           
  3006                           ;pin_manager.c: 59: LATA = 0x00;
  3007  02ED  018C               	clrf	12	;volatile
  3008                           
  3009                           ;pin_manager.c: 60: LATB = 0x00;
  3010  02EE  018D               	clrf	13	;volatile
  3011                           
  3012                           ;pin_manager.c: 61: LATC = 0x00;
  3013  02EF  018E               	clrf	14	;volatile
  3014                           
  3015                           ;pin_manager.c: 66: TRISE = 0x0F;
  3016  02F0  300F               	movlw	15
  3017  02F1  0021               	movlb	1	; select bank1
  3018  02F2  0090               	movwf	16	;volatile
  3019                           
  3020                           ;pin_manager.c: 67: TRISA = 0xFF;
  3021  02F3  30FF               	movlw	255
  3022  02F4  008C               	movwf	12	;volatile
  3023                           
  3024                           ;pin_manager.c: 68: TRISB = 0x00;
  3025  02F5  018D               	clrf	13	;volatile
  3026                           
  3027                           ;pin_manager.c: 69: TRISC = 0xBF;
  3028  02F6  30BF               	movlw	191
  3029  02F7  008E               	movwf	14	;volatile
  3030                           
  3031                           ;pin_manager.c: 70: TRISD = 0xF4;
  3032  02F8  30F4               	movlw	244
  3033  02F9  008F               	movwf	15	;volatile
  3034                           
  3035                           ;pin_manager.c: 75: ANSELB = 0x0F;
  3036  02FA  300F               	movlw	15
  3037  02FB  0023               	movlb	3	; select bank3
  3038  02FC  008D               	movwf	13	;volatile
  3039                           
  3040                           ;pin_manager.c: 76: ANSELD = 0x14;
  3041  02FD  3014               	movlw	20
  3042  02FE  008F               	movwf	15	;volatile
  3043                           
  3044                           ;pin_manager.c: 77: ANSELE = 0x07;
  3045  02FF  3007               	movlw	7
  3046  0300  0090               	movwf	16	;volatile
  3047                           
  3048                           ;pin_manager.c: 78: ANSELA = 0x3F;
  3049  0301  303F               	movlw	63
  3050  0302  008C               	movwf	12	;volatile
  3051                           
  3052                           ;pin_manager.c: 83: WPUE = 0x08;
  3053  0303  3008               	movlw	8
  3054  0304  0024               	movlb	4	; select bank4
  3055  0305  0090               	movwf	16	;volatile
  3056                           
  3057                           ;pin_manager.c: 84: WPUB = 0xFF;
  3058  0306  30FF               	movlw	255
  3059  0307  008D               	movwf	13	;volatile
  3060                           
  3061                           ;pin_manager.c: 85: OPTION_REGbits.nWPUEN = 0;
  3062  0308  0021               	movlb	1	; select bank1
  3063  0309  1395               	bcf	21,7	;volatile
  3064                           
  3065                           ;pin_manager.c: 91: APFCON = 0x00;
  3066  030A  0022               	movlb	2	; select bank2
  3067  030B  019D               	clrf	29	;volatile
  3068  030C  0008               	return
  3069  030D                     __end_of_PIN_MANAGER_Initialize:	
  3070                           
  3071                           	psect	text7
  3072  04AF                     __ptext7:	
  3073 ;; *************** function _OSCILLATOR_Initialize *****************
  3074 ;; Defined at:
  3075 ;;		line 81 in file "mcc_generated_files/mcc.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;		None
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;		None
  3080 ;; Return value:  Size  Location     Type
  3081 ;;                  1    wreg      void 
  3082 ;; Registers used:
  3083 ;;		wreg, status,2
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3089 ;;      Params:         0       0       0       0       0       0       0       0
  3090 ;;      Locals:         0       0       0       0       0       0       0       0
  3091 ;;      Temps:          0       0       0       0       0       0       0       0
  3092 ;;      Totals:         0       0       0       0       0       0       0       0
  3093 ;;Total ram usage:        0 bytes
  3094 ;; Hardware stack levels used:    1
  3095 ;; Hardware stack levels required when called:    4
  3096 ;; This function calls:
  3097 ;;		Nothing
  3098 ;; This function is called by:
  3099 ;;		_SYSTEM_Initialize
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           
  3103                           
  3104                           ;psect for function _OSCILLATOR_Initialize
  3105  04AF                     _OSCILLATOR_Initialize:	
  3106                           
  3107                           ;mcc.c: 84: OSCCON = 0x78;
  3108                           
  3109                           ;incstack = 0
  3110                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3111  04AF  3078               	movlw	120
  3112  04B0  0021               	movlb	1	; select bank1
  3113  04B1  0099               	movwf	25	;volatile
  3114                           
  3115                           ;mcc.c: 86: OSCTUNE = 0x00;
  3116  04B2  0198               	clrf	24	;volatile
  3117  04B3  0008               	return
  3118  04B4                     __end_of_OSCILLATOR_Initialize:	
  3119                           
  3120                           	psect	text8
  3121  0367                     __ptext8:	
  3122 ;; *************** function _EUSART_Initialize *****************
  3123 ;; Defined at:
  3124 ;;		line 76 in file "mcc_generated_files/eusart.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;		None
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;		None
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  1    wreg      void 
  3131 ;; Registers used:
  3132 ;;		wreg, status,2
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3138 ;;      Params:         0       0       0       0       0       0       0       0
  3139 ;;      Locals:         0       0       0       0       0       0       0       0
  3140 ;;      Temps:          0       1       0       0       0       0       0       0
  3141 ;;      Totals:         0       1       0       0       0       0       0       0
  3142 ;;Total ram usage:        1 bytes
  3143 ;; Hardware stack levels used:    1
  3144 ;; Hardware stack levels required when called:    4
  3145 ;; This function calls:
  3146 ;;		Nothing
  3147 ;; This function is called by:
  3148 ;;		_SYSTEM_Initialize
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152                           
  3153                           ;psect for function _EUSART_Initialize
  3154  0367                     _EUSART_Initialize:	
  3155                           
  3156                           ;eusart.c: 79: PIE1bits.RCIE = 0;
  3157                           
  3158                           ;incstack = 0
  3159                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  3160  0367  0021               	movlb	1	; select bank1
  3161  0368  1291               	bcf	17,5	;volatile
  3162                           
  3163                           ;eusart.c: 80: PIE1bits.TXIE = 0;
  3164  0369  1211               	bcf	17,4	;volatile
  3165                           
  3166                           ;eusart.c: 85: BAUDCON = 0x08;
  3167  036A  3008               	movlw	8
  3168  036B  0023               	movlb	3	; select bank3
  3169  036C  009F               	movwf	31	;volatile
  3170                           
  3171                           ;eusart.c: 88: RCSTA = 0x90;
  3172  036D  3090               	movlw	144
  3173  036E  009D               	movwf	29	;volatile
  3174                           
  3175                           ;eusart.c: 91: TXSTA = 0x24;
  3176  036F  3024               	movlw	36
  3177  0370  009E               	movwf	30	;volatile
  3178                           
  3179                           ;eusart.c: 94: SPBRGL = 0xDF;
  3180  0371  30DF               	movlw	223
  3181  0372  009B               	movwf	27	;volatile
  3182                           
  3183                           ;eusart.c: 97: SPBRGH = 0x01;
  3184  0373  3001               	movlw	1
  3185  0374  009C               	movwf	28	;volatile
  3186                           
  3187                           ;eusart.c: 101: eusartTxHead = 0;
  3188  0375  0020               	movlb	0	; select bank0
  3189  0376  01D4               	clrf	_eusartTxHead	;volatile
  3190                           
  3191                           ;eusart.c: 102: eusartTxTail = 0;
  3192  0377  01D3               	clrf	_eusartTxTail	;volatile
  3193                           
  3194                           ;eusart.c: 103: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  3195  0378  3008               	movlw	8
  3196  0379  00D7               	movwf	??_EUSART_Initialize
  3197  037A  0857               	movf	??_EUSART_Initialize,w
  3198  037B  00EF               	movwf	_eusartTxBufferRemaining	;volatile
  3199                           
  3200                           ;eusart.c: 105: eusartRxHead = 0;
  3201  037C  01D2               	clrf	_eusartRxHead	;volatile
  3202                           
  3203                           ;eusart.c: 106: eusartRxTail = 0;
  3204  037D  01D1               	clrf	_eusartRxTail	;volatile
  3205                           
  3206                           ;eusart.c: 107: eusartRxCount = 0;
  3207  037E  01D0               	clrf	_eusartRxCount	;volatile
  3208                           
  3209                           ;eusart.c: 110: PIE1bits.RCIE = 1;
  3210  037F  0021               	movlb	1	; select bank1
  3211  0380  1691               	bsf	17,5	;volatile
  3212  0381  0008               	return
  3213  0382                     __end_of_EUSART_Initialize:	
  3214                           
  3215                           	psect	text9
  3216  0488                     __ptext9:	
  3217 ;; *************** function _ADC_Initialize *****************
  3218 ;; Defined at:
  3219 ;;		line 64 in file "mcc_generated_files/adc.c"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;		None
  3222 ;; Auto vars:     Size  Location     Type
  3223 ;;		None
  3224 ;; Return value:  Size  Location     Type
  3225 ;;                  1    wreg      void 
  3226 ;; Registers used:
  3227 ;;		wreg, status,2
  3228 ;; Tracked objects:
  3229 ;;		On entry : 0/0
  3230 ;;		On exit  : 0/0
  3231 ;;		Unchanged: 0/0
  3232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3233 ;;      Params:         0       0       0       0       0       0       0       0
  3234 ;;      Locals:         0       0       0       0       0       0       0       0
  3235 ;;      Temps:          0       0       0       0       0       0       0       0
  3236 ;;      Totals:         0       0       0       0       0       0       0       0
  3237 ;;Total ram usage:        0 bytes
  3238 ;; Hardware stack levels used:    1
  3239 ;; Hardware stack levels required when called:    4
  3240 ;; This function calls:
  3241 ;;		Nothing
  3242 ;; This function is called by:
  3243 ;;		_SYSTEM_Initialize
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           
  3247                           
  3248                           ;psect for function _ADC_Initialize
  3249  0488                     _ADC_Initialize:	
  3250                           
  3251                           ;adc.c: 69: ADCON0 = 0x01;
  3252                           
  3253                           ;incstack = 0
  3254                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3255  0488  3001               	movlw	1
  3256  0489  0021               	movlb	1	; select bank1
  3257  048A  009D               	movwf	29	;volatile
  3258                           
  3259                           ;adc.c: 72: ADCON1 = 0x60;
  3260  048B  3060               	movlw	96
  3261  048C  009E               	movwf	30	;volatile
  3262                           
  3263                           ;adc.c: 75: ADRESL = 0x00;
  3264  048D  019B               	clrf	27	;volatile
  3265                           
  3266                           ;adc.c: 78: ADRESH = 0x00;
  3267  048E  019C               	clrf	28	;volatile
  3268                           
  3269                           ;adc.c: 81: PIE1bits.ADIE = 1;
  3270  048F  1711               	bsf	17,6	;volatile
  3271  0490  0008               	return
  3272  0491                     __end_of_ADC_Initialize:	
  3273                           
  3274                           	psect	text10
  3275  0219                     __ptext10:	
  3276 ;; *************** function _LCDWriteString *****************
  3277 ;; Defined at:
  3278 ;;		line 192 in file "lcd_hd44780_pic16.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;  msg             2    7[BANK0 ] PTR const unsigned char 
  3281 ;;		 -> STR_13(17), STR_12(18), STR_11(17), 
  3282 ;; Auto vars:     Size  Location     Type
  3283 ;;  cc              1   10[BANK0 ] char 
  3284 ;; Return value:  Size  Location     Type
  3285 ;;                  1    wreg      void 
  3286 ;; Registers used:
  3287 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3288 ;; Tracked objects:
  3289 ;;		On entry : 0/0
  3290 ;;		On exit  : 0/0
  3291 ;;		Unchanged: 0/0
  3292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3293 ;;      Params:         0       2       0       0       0       0       0       0
  3294 ;;      Locals:         0       1       0       0       0       0       0       0
  3295 ;;      Temps:          0       1       0       0       0       0       0       0
  3296 ;;      Totals:         0       4       0       0       0       0       0       0
  3297 ;;Total ram usage:        4 bytes
  3298 ;; Hardware stack levels used:    1
  3299 ;; Hardware stack levels required when called:    5
  3300 ;; This function calls:
  3301 ;;		_LCDByte
  3302 ;; This function is called by:
  3303 ;;		_main
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           
  3308                           ;psect for function _LCDWriteString
  3309  0219                     _LCDWriteString:	
  3310  0219                     l2517:	
  3311                           ;lcd_hd44780_pic16.c: 222: while(*msg!='\0')
  3312                           
  3313                           ;incstack = 0
  3314                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3315                           
  3316  0219  0020               	movlb	0	; select bank0
  3317  021A  085E               	movf	LCDWriteString@msg,w
  3318  021B  0084               	movwf	4
  3319  021C  085F               	movf	LCDWriteString@msg+1,w
  3320  021D  0085               	movwf	5
  3321  021E  0012               	moviw fsr0++
  3322  021F  1903               	btfsc	3,2
  3323  0220  0008               	return
  3324                           
  3325                           ;lcd_hd44780_pic16.c: 223: {
  3326                           ;lcd_hd44780_pic16.c: 225: if(*msg=='%')
  3327  0221  0020               	movlb	0	; select bank0
  3328  0222  085E               	movf	LCDWriteString@msg,w
  3329  0223  0084               	movwf	4
  3330  0224  085F               	movf	LCDWriteString@msg+1,w
  3331  0225  0085               	movwf	5
  3332  0226  0012               	moviw fsr0++
  3333  0227  3A25               	xorlw	37
  3334  0228  1D03               	btfss	3,2
  3335  0229  2A49               	goto	l2513
  3336                           
  3337                           ;lcd_hd44780_pic16.c: 226: {
  3338                           ;lcd_hd44780_pic16.c: 227: msg++;
  3339  022A  3001               	movlw	1
  3340  022B  07DE               	addwf	LCDWriteString@msg,f
  3341  022C  3000               	movlw	0
  3342  022D  3DDF               	addwfc	LCDWriteString@msg+1,f
  3343                           
  3344                           ;lcd_hd44780_pic16.c: 228: int8_t cc=*msg-'0';
  3345  022E  085E               	movf	LCDWriteString@msg,w
  3346  022F  0084               	movwf	4
  3347  0230  085F               	movf	LCDWriteString@msg+1,w
  3348  0231  0085               	movwf	5
  3349  0232  0800               	movf	0,w	;code access
  3350  0233  3ED0               	addlw	-48
  3351  0234  00E0               	movwf	??_LCDWriteString
  3352  0235  0860               	movf	??_LCDWriteString,w
  3353  0236  00E1               	movwf	LCDWriteString@cc
  3354                           
  3355                           ;lcd_hd44780_pic16.c: 230: if(cc>=0 && cc<=7)
  3356  0237  1BE1               	btfsc	LCDWriteString@cc,7
  3357  0238  2A42               	goto	l2509
  3358  0239  0861               	movf	LCDWriteString@cc,w
  3359  023A  3A80               	xorlw	128
  3360  023B  3E78               	addlw	-136
  3361  023C  1803               	skipnc
  3362  023D  2A42               	goto	l2509
  3363                           
  3364                           ;lcd_hd44780_pic16.c: 231: {
  3365                           ;lcd_hd44780_pic16.c: 232: (LCDByte(cc,1));
  3366  023E  01D7               	clrf	LCDByte@isdata
  3367  023F  0AD7               	incf	LCDByte@isdata,f
  3368  0240  0861               	movf	LCDWriteString@cc,w
  3369  0241  2A51               	goto	L1
  3370  0242                     l2509:	
  3371                           ;lcd_hd44780_pic16.c: 233: }
  3372                           
  3373                           
  3374                           ;lcd_hd44780_pic16.c: 234: else
  3375                           ;lcd_hd44780_pic16.c: 235: {
  3376                           ;lcd_hd44780_pic16.c: 236: (LCDByte('%',1));
  3377  0242  0020               	movlb	0	; select bank0
  3378  0243  01D7               	clrf	LCDByte@isdata
  3379  0244  0AD7               	incf	LCDByte@isdata,f
  3380  0245  3025               	movlw	37
  3381  0246  3182  225A  3182   	fcall	_LCDByte
  3382  0249                     l2513:	
  3383                           ;lcd_hd44780_pic16.c: 238: }
  3384                           ;lcd_hd44780_pic16.c: 239: }
  3385                           
  3386                           ;lcd_hd44780_pic16.c: 237: (LCDByte(*msg,1));
  3387                           
  3388                           
  3389                           ;lcd_hd44780_pic16.c: 240: else
  3390                           ;lcd_hd44780_pic16.c: 241: {
  3391                           ;lcd_hd44780_pic16.c: 242: (LCDByte(*msg,1));
  3392  0249  0020               	movlb	0	; select bank0
  3393  024A  01D7               	clrf	LCDByte@isdata
  3394  024B  0AD7               	incf	LCDByte@isdata,f
  3395  024C  085E               	movf	LCDWriteString@msg,w
  3396  024D  0084               	movwf	4
  3397  024E  085F               	movf	LCDWriteString@msg+1,w
  3398  024F  0085               	movwf	5
  3399  0250  0800               	movf	0,w	;code access
  3400  0251                     L1:	
  3401  0251  3182  225A  3182   	fcall	_LCDByte
  3402                           
  3403                           ;lcd_hd44780_pic16.c: 243: }
  3404                           ;lcd_hd44780_pic16.c: 244: msg++;
  3405  0254  3001               	movlw	1
  3406  0255  0020               	movlb	0	; select bank0
  3407  0256  07DE               	addwf	LCDWriteString@msg,f
  3408  0257  3000               	movlw	0
  3409  0258  3DDF               	addwfc	LCDWriteString@msg+1,f
  3410  0259  2A19               	goto	l2517
  3411  025A                     __end_of_LCDWriteString:	
  3412                           
  3413                           	psect	text11
  3414  01D3                     __ptext11:	
  3415 ;; *************** function _LCDInit *****************
  3416 ;; Defined at:
  3417 ;;		line 135 in file "lcd_hd44780_pic16.c"
  3418 ;; Parameters:    Size  Location     Type
  3419 ;;  style           1    wreg     unsigned char 
  3420 ;; Auto vars:     Size  Location     Type
  3421 ;;  style           1    8[BANK0 ] unsigned char 
  3422 ;; Return value:  Size  Location     Type
  3423 ;;                  1    wreg      void 
  3424 ;; Registers used:
  3425 ;;		wreg, status,2, status,0, pclath, cstack
  3426 ;; Tracked objects:
  3427 ;;		On entry : 0/0
  3428 ;;		On exit  : 0/0
  3429 ;;		Unchanged: 0/0
  3430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3431 ;;      Params:         0       0       0       0       0       0       0       0
  3432 ;;      Locals:         0       1       0       0       0       0       0       0
  3433 ;;      Temps:          0       1       0       0       0       0       0       0
  3434 ;;      Totals:         0       2       0       0       0       0       0       0
  3435 ;;Total ram usage:        2 bytes
  3436 ;; Hardware stack levels used:    1
  3437 ;; Hardware stack levels required when called:    5
  3438 ;; This function calls:
  3439 ;;		_LCDByte
  3440 ;; This function is called by:
  3441 ;;		_main
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445                           
  3446                           ;psect for function _LCDInit
  3447  01D3                     _LCDInit:	
  3448                           
  3449                           ;incstack = 0
  3450                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
  3451                           ;LCDInit@style stored from wreg
  3452  01D3  0020               	movlb	0	; select bank0
  3453  01D4  00DF               	movwf	LCDInit@style
  3454                           
  3455                           ;lcd_hd44780_pic16.c: 151: _delay((unsigned long)((30)*(18432000/4000.0)));
  3456  01D5  30B4               	movlw	180
  3457  01D6  0020               	movlb	0	; select bank0
  3458  01D7  00DE               	movwf	??_LCDInit
  3459  01D8  3087               	movlw	135
  3460  01D9                     u3417:	
  3461  01D9  0B89               	decfsz	9,f
  3462  01DA  29D9               	goto	u3417
  3463  01DB  0BDE               	decfsz	??_LCDInit,f
  3464  01DC  29D9               	goto	u3417
  3465                           
  3466                           ;lcd_hd44780_pic16.c: 154: TRISB&=(~(0x0F<<0));
  3467  01DD  30F0               	movlw	240
  3468  01DE  0020               	movlb	0	; select bank0
  3469  01DF  00DE               	movwf	??_LCDInit
  3470  01E0  085E               	movf	??_LCDInit,w
  3471  01E1  0021               	movlb	1	; select bank1
  3472  01E2  058D               	andwf	13,f	;volatile
  3473                           
  3474                           ;lcd_hd44780_pic16.c: 156: TRISDbits.TRISD0=0;
  3475  01E3  100F               	bcf	15,0	;volatile
  3476                           
  3477                           ;lcd_hd44780_pic16.c: 157: TRISDbits.TRISD3=0;
  3478  01E4  118F               	bcf	15,3	;volatile
  3479                           
  3480                           ;lcd_hd44780_pic16.c: 158: TRISDbits.TRISD1=0;
  3481  01E5  108F               	bcf	15,1	;volatile
  3482                           
  3483                           ;lcd_hd44780_pic16.c: 160: PORTB&=(~(0x0F<<0));
  3484  01E6  30F0               	movlw	240
  3485  01E7  0020               	movlb	0	; select bank0
  3486  01E8  00DE               	movwf	??_LCDInit
  3487  01E9  085E               	movf	??_LCDInit,w
  3488  01EA  058D               	andwf	13,f	;volatile
  3489                           
  3490                           ;lcd_hd44780_pic16.c: 162: (RD0=0);
  3491  01EB  100F               	bcf	15,0	;volatile
  3492                           
  3493                           ;lcd_hd44780_pic16.c: 163: (RD1=0);
  3494  01EC  108F               	bcf	15,1	;volatile
  3495                           
  3496                           ;lcd_hd44780_pic16.c: 164: (RD3=0);
  3497  01ED  118F               	bcf	15,3	;volatile
  3498                           
  3499                           ;lcd_hd44780_pic16.c: 167: _delay((unsigned long)((0.5)*(18432000/4000000.0)));
  3500  01EE  3200               	nop2	;2 cycle nop
  3501                           
  3502                           ;lcd_hd44780_pic16.c: 169: (RD0=1);
  3503  01EF  0020               	movlb	0	; select bank0
  3504  01F0  140F               	bsf	15,0	;volatile
  3505                           
  3506                           ;lcd_hd44780_pic16.c: 170: PORTB|=((0b00000010)<<0);
  3507  01F1  148D               	bsf	13,1	;volatile
  3508                           
  3509                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((1)*(18432000/4000000.0)));
  3510  01F2  3200               	nop2	;2 cycle nop
  3511  01F3  3200               	nop2	;2 cycle nop
  3512                           
  3513                           ;lcd_hd44780_pic16.c: 172: (RD0=0);
  3514  01F4  0020               	movlb	0	; select bank0
  3515  01F5  100F               	bcf	15,0	;volatile
  3516                           
  3517                           ;lcd_hd44780_pic16.c: 173: _delay((unsigned long)((1)*(18432000/4000000.0)));
  3518  01F6  3200               	nop2	;2 cycle nop
  3519  01F7  3200               	nop2	;2 cycle nop
  3520                           
  3521                           ;lcd_hd44780_pic16.c: 177: _delay((unsigned long)((1)*(18432000/4000.0)));
  3522  01F8  3006               	movlw	6
  3523  01F9  0020               	movlb	0	; select bank0
  3524  01FA  00DE               	movwf	??_LCDInit
  3525  01FB  30FB               	movlw	251
  3526  01FC                     u3427:	
  3527  01FC  0B89               	decfsz	9,f
  3528  01FD  29FC               	goto	u3427
  3529  01FE  0BDE               	decfsz	??_LCDInit,f
  3530  01FF  29FC               	goto	u3427
  3531                           
  3532                           ;lcd_hd44780_pic16.c: 181: (LCDByte(0b00101000,0));
  3533  0200  0020               	movlb	0	; select bank0
  3534  0201  01D7               	clrf	LCDByte@isdata
  3535  0202  3028               	movlw	40
  3536  0203  3182  225A  3181   	fcall	_LCDByte
  3537                           
  3538                           ;lcd_hd44780_pic16.c: 182: (LCDByte(0b00001100|style,0));
  3539  0206  0020               	movlb	0	; select bank0
  3540  0207  01D7               	clrf	LCDByte@isdata
  3541  0208  085F               	movf	LCDInit@style,w
  3542  0209  380C               	iorlw	12
  3543  020A  3182  225A  3181   	fcall	_LCDByte
  3544                           
  3545                           ;lcd_hd44780_pic16.c: 185: (LCDByte(0b01000000,0));
  3546  020D  0020               	movlb	0	; select bank0
  3547  020E  01D7               	clrf	LCDByte@isdata
  3548  020F  3040               	movlw	64
  3549  0210  3182  225A  3181   	fcall	_LCDByte
  3550                           
  3551                           ;lcd_hd44780_pic16.c: 186: (LCDByte(0b00000001,0));
  3552  0213  0020               	movlb	0	; select bank0
  3553  0214  01D7               	clrf	LCDByte@isdata
  3554  0215  3001               	movlw	1
  3555  0216  3182  225A         	fcall	_LCDByte
  3556  0218  0008               	return
  3557  0219                     __end_of_LCDInit:	
  3558                           
  3559                           	psect	text12
  3560  025A                     __ptext12:	
  3561 ;; *************** function _LCDByte *****************
  3562 ;; Defined at:
  3563 ;;		line 80 in file "lcd_hd44780_pic16.c"
  3564 ;; Parameters:    Size  Location     Type
  3565 ;;  c               1    wreg     unsigned char 
  3566 ;;  isdata          1    0[BANK0 ] unsigned char 
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;  c               1    5[BANK0 ] unsigned char 
  3569 ;;  temp            1    6[BANK0 ] unsigned char 
  3570 ;;  ln              1    4[BANK0 ] unsigned char 
  3571 ;;  hn              1    3[BANK0 ] unsigned char 
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  1    wreg      void 
  3574 ;; Registers used:
  3575 ;;		wreg, status,2, status,0
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3581 ;;      Params:         0       1       0       0       0       0       0       0
  3582 ;;      Locals:         0       4       0       0       0       0       0       0
  3583 ;;      Temps:          0       2       0       0       0       0       0       0
  3584 ;;      Totals:         0       7       0       0       0       0       0       0
  3585 ;;Total ram usage:        7 bytes
  3586 ;; Hardware stack levels used:    1
  3587 ;; Hardware stack levels required when called:    4
  3588 ;; This function calls:
  3589 ;;		Nothing
  3590 ;; This function is called by:
  3591 ;;		_main
  3592 ;;		_LCDInit
  3593 ;;		_LCDWriteString
  3594 ;;		_LCDWriteInt
  3595 ;;		_LCDGotoXY
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598                           
  3599                           
  3600                           ;psect for function _LCDByte
  3601  025A                     _LCDByte:	
  3602                           
  3603                           ;incstack = 0
  3604                           ; Regs used in _LCDByte: [wreg+status,2+status,0]
  3605                           ;LCDByte@c stored from wreg
  3606  025A  0020               	movlb	0	; select bank0
  3607  025B  00DC               	movwf	LCDByte@c
  3608                           
  3609                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  3610                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  3611                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  3612  025C  085C               	movf	LCDByte@c,w
  3613  025D  00D8               	movwf	??_LCDByte
  3614  025E  3004               	movlw	4
  3615  025F                     u1265:	
  3616  025F  36D8               	lsrf	??_LCDByte,f
  3617  0260  0B89               	decfsz	9,f
  3618  0261  2A5F               	goto	u1265
  3619  0262  0858               	movf	??_LCDByte,w
  3620  0263  00D9               	movwf	??_LCDByte+1
  3621  0264  0859               	movf	??_LCDByte+1,w
  3622  0265  00DA               	movwf	LCDByte@hn
  3623                           
  3624                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  3625  0266  085C               	movf	LCDByte@c,w
  3626  0267  390F               	andlw	15
  3627  0268  00D8               	movwf	??_LCDByte
  3628  0269  0858               	movf	??_LCDByte,w
  3629  026A  00DB               	movwf	LCDByte@ln
  3630                           
  3631                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  3632  026B  0857               	movf	LCDByte@isdata,w
  3633  026C  1D03               	btfss	3,2
  3634  026D  2A70               	goto	l569
  3635                           
  3636                           ;lcd_hd44780_pic16.c: 96: (RD3=0);
  3637  026E  118F               	bcf	15,3	;volatile
  3638  026F  2A71               	goto	l570
  3639  0270                     l569:	
  3640                           
  3641                           ;lcd_hd44780_pic16.c: 97: else
  3642                           ;lcd_hd44780_pic16.c: 98: (RD3=1);
  3643  0270  158F               	bsf	15,3	;volatile
  3644  0271                     l570:	
  3645                           
  3646                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(18432000/4000000.0)));
  3647  0271  3200               	nop2	;2 cycle nop
  3648                           
  3649                           ;lcd_hd44780_pic16.c: 102: (RD0=1);
  3650  0272  0020               	movlb	0	; select bank0
  3651  0273  140F               	bsf	15,0	;volatile
  3652                           
  3653                           ;lcd_hd44780_pic16.c: 106: temp=(PORTB & (~(0X0F<<0)))|((hn<<0));
  3654  0274  080D               	movf	13,w	;volatile
  3655  0275  39F0               	andlw	240
  3656  0276  045A               	iorwf	LCDByte@hn,w
  3657  0277  00D8               	movwf	??_LCDByte
  3658  0278  0858               	movf	??_LCDByte,w
  3659  0279  00DD               	movwf	LCDByte@temp
  3660                           
  3661                           ;lcd_hd44780_pic16.c: 107: PORTB=temp;
  3662  027A  085D               	movf	LCDByte@temp,w
  3663  027B  008D               	movwf	13	;volatile
  3664                           
  3665                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(18432000/4000000.0)));
  3666  027C  3200               	nop2	;2 cycle nop
  3667  027D  3200               	nop2	;2 cycle nop
  3668                           
  3669                           ;lcd_hd44780_pic16.c: 113: (RD0=0);
  3670  027E  0020               	movlb	0	; select bank0
  3671  027F  100F               	bcf	15,0	;volatile
  3672                           
  3673                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(18432000/4000000.0)));
  3674  0280  3200               	nop2	;2 cycle nop
  3675  0281  3200               	nop2	;2 cycle nop
  3676                           
  3677                           ;lcd_hd44780_pic16.c: 118: (RD0=1);
  3678  0282  0020               	movlb	0	; select bank0
  3679  0283  140F               	bsf	15,0	;volatile
  3680                           
  3681                           ;lcd_hd44780_pic16.c: 120: temp=(PORTB & (~(0X0F<<0)))|((ln<<0));
  3682  0284  080D               	movf	13,w	;volatile
  3683  0285  39F0               	andlw	240
  3684  0286  045B               	iorwf	LCDByte@ln,w
  3685  0287  00D8               	movwf	??_LCDByte
  3686  0288  0858               	movf	??_LCDByte,w
  3687  0289  00DD               	movwf	LCDByte@temp
  3688                           
  3689                           ;lcd_hd44780_pic16.c: 122: PORTB=temp;
  3690  028A  085D               	movf	LCDByte@temp,w
  3691  028B  008D               	movwf	13	;volatile
  3692                           
  3693                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(18432000/4000000.0)));
  3694  028C  3200               	nop2	;2 cycle nop
  3695  028D  3200               	nop2	;2 cycle nop
  3696                           
  3697                           ;lcd_hd44780_pic16.c: 128: (RD0=0);
  3698  028E  0020               	movlb	0	; select bank0
  3699  028F  100F               	bcf	15,0	;volatile
  3700                           
  3701                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(18432000/4000000.0)));
  3702  0290  3200               	nop2	;2 cycle nop
  3703  0291  3200               	nop2	;2 cycle nop
  3704                           
  3705                           ;lcd_hd44780_pic16.c: 131: _delay((unsigned long)((1)*(18432000/4000.0)));
  3706  0292  3006               	movlw	6
  3707  0293  0020               	movlb	0	; select bank0
  3708  0294  00D8               	movwf	??_LCDByte
  3709  0295  30FB               	movlw	251
  3710  0296                     u3437:	
  3711  0296  0B89               	decfsz	9,f
  3712  0297  2A96               	goto	u3437
  3713  0298  0BD8               	decfsz	??_LCDByte,f
  3714  0299  2A96               	goto	u3437
  3715  029A  0008               	return
  3716  029B                     __end_of_LCDByte:	
  3717                           
  3718                           	psect	text13
  3719  04A9                     __ptext13:	
  3720 ;; *************** function _Keyboard_Manager *****************
  3721 ;; Defined at:
  3722 ;;		line 9 in file "keyboard.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;		None
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;		None
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  1    wreg      void 
  3729 ;; Registers used:
  3730 ;;		wreg, status,2, status,0, pclath, cstack
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3736 ;;      Params:         0       0       0       0       0       0       0       0
  3737 ;;      Locals:         0       0       0       0       0       0       0       0
  3738 ;;      Temps:          0       0       0       0       0       0       0       0
  3739 ;;      Totals:         0       0       0       0       0       0       0       0
  3740 ;;Total ram usage:        0 bytes
  3741 ;; Hardware stack levels used:    1
  3742 ;; Hardware stack levels required when called:    5
  3743 ;; This function calls:
  3744 ;;		_Check_KeyPressed
  3745 ;;		_Check_KeyReleased
  3746 ;; This function is called by:
  3747 ;;		_main
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           
  3752                           ;psect for function _Keyboard_Manager
  3753  04A9                     _Keyboard_Manager:	
  3754                           
  3755                           ;keyboard.c: 11: Check_KeyPressed();
  3756                           
  3757                           ;incstack = 0
  3758                           ; Regs used in _Keyboard_Manager: [wreg+status,2+status,0+pclath+cstack]
  3759  04A9  3180  20E5  3184   	fcall	_Check_KeyPressed
  3760                           
  3761                           ;keyboard.c: 12: Check_KeyReleased();
  3762  04AC  3183  230D         	fcall	_Check_KeyReleased
  3763  04AE  0008               	return
  3764  04AF                     __end_of_Keyboard_Manager:	
  3765                           
  3766                           	psect	text14
  3767  030D                     __ptext14:	
  3768 ;; *************** function _Check_KeyReleased *****************
  3769 ;; Defined at:
  3770 ;;		line 56 in file "keyboard.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;		None
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;		None
  3775 ;; Return value:  Size  Location     Type
  3776 ;;                  1    wreg      void 
  3777 ;; Registers used:
  3778 ;;		wreg, status,2, status,0
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3784 ;;      Params:         0       0       0       0       0       0       0       0
  3785 ;;      Locals:         0       0       0       0       0       0       0       0
  3786 ;;      Temps:          0       0       0       0       0       0       0       0
  3787 ;;      Totals:         0       0       0       0       0       0       0       0
  3788 ;;Total ram usage:        0 bytes
  3789 ;; Hardware stack levels used:    1
  3790 ;; Hardware stack levels required when called:    4
  3791 ;; This function calls:
  3792 ;;		Nothing
  3793 ;; This function is called by:
  3794 ;;		_Keyboard_Manager
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           
  3799                           ;psect for function _Check_KeyReleased
  3800  030D                     _Check_KeyReleased:	
  3801                           
  3802                           ;keyboard.c: 61: if(((PORTD & 0b01000000)!=0)&&(strKey_Counts.btnOK==3))
  3803                           
  3804                           ;incstack = 0
  3805                           ; Regs used in _Check_KeyReleased: [wreg+status,2+status,0]
  3806  030D  0020               	movlb	0	; select bank0
  3807  030E  1F0F               	btfss	15,6	;volatile
  3808  030F  2B18               	goto	l2251
  3809  0310  087D               	movf	_strKey_Counts,w	;volatile
  3810  0311  3903               	andlw	3
  3811  0312  3A03               	xorlw	3
  3812  0313  1D03               	skipz
  3813  0314  2B18               	goto	l2251
  3814                           
  3815                           ;keyboard.c: 62: {
  3816                           ;keyboard.c: 64: strKey_Pressed.btnOK=1;
  3817  0315  1456               	bsf	_strKey_Pressed,0	;volatile
  3818                           
  3819                           ;keyboard.c: 65: strKey_Counts.btnOK=0;
  3820  0316  30FC               	movlw	-4
  3821  0317  05FD               	andwf	_strKey_Counts,f	;volatile
  3822  0318                     l2251:	
  3823                           
  3824                           ;keyboard.c: 66: }
  3825                           ;keyboard.c: 68: if(((PORTD & 0b10000000)!=0)&&(strKey_Counts.btnUP==3))
  3826  0318  1F8F               	btfss	15,7	;volatile
  3827  0319  2B23               	goto	l2259
  3828  031A  0C7D               	rrf	_strKey_Counts,w	;volatile
  3829  031B  0C89               	rrf	9,f
  3830  031C  3903               	andlw	3
  3831  031D  3A03               	xorlw	3
  3832  031E  1D03               	skipz
  3833  031F  2B23               	goto	l2259
  3834                           
  3835                           ;keyboard.c: 69: {
  3836                           ;keyboard.c: 71: strKey_Pressed.btnUP=1;
  3837  0320  14D6               	bsf	_strKey_Pressed,1	;volatile
  3838                           
  3839                           ;keyboard.c: 72: strKey_Counts.btnUP=0;
  3840  0321  30F3               	movlw	-13
  3841  0322  05FD               	andwf	_strKey_Counts,f	;volatile
  3842  0323                     l2259:	
  3843                           
  3844                           ;keyboard.c: 73: }
  3845                           ;keyboard.c: 74: if(((PORTD & 0b00100000)!=0)&&(strKey_Counts.btnDOWN==3))
  3846  0323  1E8F               	btfss	15,5	;volatile
  3847  0324  0008               	return
  3848  0325  0E7D               	swapf	_strKey_Counts,w	;volatile
  3849  0326  3903               	andlw	3
  3850  0327  3A03               	xorlw	3
  3851  0328  1D03               	skipz
  3852  0329  0008               	return
  3853                           
  3854                           ;keyboard.c: 75: {
  3855                           ;keyboard.c: 77: strKey_Pressed.btnDOWN=1;
  3856  032A  1556               	bsf	_strKey_Pressed,2	;volatile
  3857                           
  3858                           ;keyboard.c: 78: strKey_Counts.btnDOWN=0;
  3859  032B  30CF               	movlw	-49
  3860  032C  05FD               	andwf	_strKey_Counts,f	;volatile
  3861  032D  0008               	return
  3862  032E                     __end_of_Check_KeyReleased:	
  3863                           
  3864                           	psect	text15
  3865  00E5                     __ptext15:	
  3866 ;; *************** function _Check_KeyPressed *****************
  3867 ;; Defined at:
  3868 ;;		line 15 in file "keyboard.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;		None
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;		None
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  1    wreg      void 
  3875 ;; Registers used:
  3876 ;;		wreg, status,2, status,0
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3882 ;;      Params:         0       0       0       0       0       0       0       0
  3883 ;;      Locals:         0       0       0       0       0       0       0       0
  3884 ;;      Temps:          0       1       0       0       0       0       0       0
  3885 ;;      Totals:         0       1       0       0       0       0       0       0
  3886 ;;Total ram usage:        1 bytes
  3887 ;; Hardware stack levels used:    1
  3888 ;; Hardware stack levels required when called:    4
  3889 ;; This function calls:
  3890 ;;		Nothing
  3891 ;; This function is called by:
  3892 ;;		_Keyboard_Manager
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           
  3897                           ;psect for function _Check_KeyPressed
  3898  00E5                     _Check_KeyPressed:	
  3899                           
  3900                           ;keyboard.c: 21: if((PORTD & 0b01000000)==0)
  3901                           
  3902                           ;incstack = 0
  3903                           ; Regs used in _Check_KeyPressed: [wreg+status,2+status,0]
  3904  00E5  0020               	movlb	0	; select bank0
  3905  00E6  1B0F               	btfsc	15,6	;volatile
  3906  00E7  28F7               	goto	l628
  3907                           
  3908                           ;keyboard.c: 22: {
  3909                           ;keyboard.c: 23: if(strKey_Counts.btnOK<3)
  3910  00E8  087D               	movf	_strKey_Counts,w	;volatile
  3911  00E9  3903               	andlw	3
  3912  00EA  3A03               	xorlw	3
  3913  00EB  1903               	skipnz
  3914  00EC  2900               	goto	l2223
  3915                           
  3916                           ;keyboard.c: 24: strKey_Counts.btnOK++;
  3917  00ED  087D               	movf	_strKey_Counts,w	;volatile
  3918  00EE  3903               	andlw	3
  3919  00EF  00D7               	movwf	??_Check_KeyPressed
  3920  00F0  0AD7               	incf	??_Check_KeyPressed,f
  3921  00F1  087D               	movf	_strKey_Counts,w	;volatile
  3922  00F2  0657               	xorwf	??_Check_KeyPressed,w
  3923  00F3  39FC               	andlw	-4
  3924  00F4  0657               	xorwf	??_Check_KeyPressed,w
  3925  00F5  00FD               	movwf	_strKey_Counts	;volatile
  3926                           
  3927                           ;keyboard.c: 25: }
  3928  00F6  2900               	goto	l2223
  3929  00F7                     l628:	
  3930                           
  3931                           ;keyboard.c: 26: else if(((PORTD & 0b01000000)!=0)&&(strKey_Counts.btnOK<3))
  3932  00F7  1F0F               	btfss	15,6	;volatile
  3933  00F8  2900               	goto	l2223
  3934  00F9  087D               	movf	_strKey_Counts,w	;volatile
  3935  00FA  3903               	andlw	3
  3936  00FB  3A03               	xorlw	3
  3937  00FC  1903               	skipnz
  3938  00FD  2900               	goto	l2223
  3939                           
  3940                           ;keyboard.c: 27: {
  3941                           ;keyboard.c: 28: strKey_Counts.btnOK=0;
  3942  00FE  30FC               	movlw	-4
  3943  00FF  05FD               	andwf	_strKey_Counts,f	;volatile
  3944  0100                     l2223:	
  3945                           
  3946                           ;keyboard.c: 29: }
  3947                           ;keyboard.c: 32: if((PORTD & 0b10000000)==0)
  3948  0100  1B8F               	btfsc	15,7	;volatile
  3949  0101  2916               	goto	l632
  3950                           
  3951                           ;keyboard.c: 33: {
  3952                           ;keyboard.c: 34: if(strKey_Counts.btnUP<3)
  3953  0102  0C7D               	rrf	_strKey_Counts,w	;volatile
  3954  0103  0C89               	rrf	9,f
  3955  0104  3903               	andlw	3
  3956  0105  3A03               	xorlw	3
  3957  0106  1903               	skipnz
  3958  0107  2920               	goto	l2233
  3959                           
  3960                           ;keyboard.c: 35: strKey_Counts.btnUP++;
  3961  0108  0C7D               	rrf	_strKey_Counts,w	;volatile
  3962  0109  00D7               	movwf	??_Check_KeyPressed
  3963  010A  0C57               	rrf	??_Check_KeyPressed,w
  3964  010B  3903               	andlw	3
  3965  010C  00D7               	movwf	??_Check_KeyPressed
  3966  010D  0AD7               	incf	??_Check_KeyPressed,f
  3967  010E  0DD7               	rlf	??_Check_KeyPressed,f
  3968  010F  0DD7               	rlf	??_Check_KeyPressed,f
  3969  0110  087D               	movf	_strKey_Counts,w	;volatile
  3970  0111  0657               	xorwf	??_Check_KeyPressed,w
  3971  0112  39F3               	andlw	-13
  3972  0113  0657               	xorwf	??_Check_KeyPressed,w
  3973  0114  00FD               	movwf	_strKey_Counts	;volatile
  3974                           
  3975                           ;keyboard.c: 36: }
  3976  0115  2920               	goto	l2233
  3977  0116                     l632:	
  3978                           
  3979                           ;keyboard.c: 37: else if(((PORTD & 0b10000000)!=0)&&(strKey_Counts.btnUP<3))
  3980  0116  1F8F               	btfss	15,7	;volatile
  3981  0117  2920               	goto	l2233
  3982  0118  0C7D               	rrf	_strKey_Counts,w	;volatile
  3983  0119  0C89               	rrf	9,f
  3984  011A  3903               	andlw	3
  3985  011B  3A03               	xorlw	3
  3986  011C  1903               	skipnz
  3987  011D  2920               	goto	l2233
  3988                           
  3989                           ;keyboard.c: 38: {
  3990                           ;keyboard.c: 39: strKey_Counts.btnUP=0;
  3991  011E  30F3               	movlw	-13
  3992  011F  05FD               	andwf	_strKey_Counts,f	;volatile
  3993  0120                     l2233:	
  3994                           
  3995                           ;keyboard.c: 40: }
  3996                           ;keyboard.c: 43: if((PORTD & 0b00100000)==0)
  3997  0120  1A8F               	btfsc	15,5	;volatile
  3998  0121  2932               	goto	l636
  3999                           
  4000                           ;keyboard.c: 44: {
  4001                           ;keyboard.c: 45: if(strKey_Counts.btnDOWN<3)
  4002  0122  0E7D               	swapf	_strKey_Counts,w	;volatile
  4003  0123  3903               	andlw	3
  4004  0124  3A03               	xorlw	3
  4005  0125  1903               	skipnz
  4006  0126  0008               	return
  4007                           
  4008                           ;keyboard.c: 46: strKey_Counts.btnDOWN++;
  4009  0127  0E7D               	swapf	_strKey_Counts,w	;volatile
  4010  0128  3903               	andlw	3
  4011  0129  00D7               	movwf	??_Check_KeyPressed
  4012  012A  0AD7               	incf	??_Check_KeyPressed,f
  4013  012B  0ED7               	swapf	??_Check_KeyPressed,f
  4014  012C  087D               	movf	_strKey_Counts,w	;volatile
  4015  012D  0657               	xorwf	??_Check_KeyPressed,w
  4016  012E  39CF               	andlw	-49
  4017  012F  0657               	xorwf	??_Check_KeyPressed,w
  4018  0130  00FD               	movwf	_strKey_Counts	;volatile
  4019                           
  4020                           ;keyboard.c: 47: }
  4021  0131  0008               	return
  4022  0132                     l636:	
  4023                           
  4024                           ;keyboard.c: 48: else if(((PORTD & 0b00100000)!=0)&&(strKey_Counts.btnDOWN<3))
  4025  0132  1E8F               	btfss	15,5	;volatile
  4026  0133  0008               	return
  4027  0134  0E7D               	swapf	_strKey_Counts,w	;volatile
  4028  0135  3903               	andlw	3
  4029  0136  3A03               	xorlw	3
  4030  0137  1903               	skipnz
  4031  0138  0008               	return
  4032                           
  4033                           ;keyboard.c: 49: {
  4034                           ;keyboard.c: 50: strKey_Counts.btnDOWN=0;
  4035  0139  30CF               	movlw	-49
  4036  013A  05FD               	andwf	_strKey_Counts,f	;volatile
  4037  013B  0008               	return
  4038  013C                     __end_of_Check_KeyPressed:	
  4039                           
  4040                           	psect	text16
  4041  02C5                     __ptext16:	
  4042 ;; *************** function _Check_key *****************
  4043 ;; Defined at:
  4044 ;;		line 82 in file "keyboard.c"
  4045 ;; Parameters:    Size  Location     Type
  4046 ;;  btn_mask        1    wreg     unsigned char 
  4047 ;; Auto vars:     Size  Location     Type
  4048 ;;  btn_mask        1    0[BANK0 ] unsigned char 
  4049 ;;  btn_pressed     1    1[BANK0 ] unsigned char 
  4050 ;; Return value:  Size  Location     Type
  4051 ;;                  1    wreg      unsigned char 
  4052 ;; Registers used:
  4053 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4054 ;; Tracked objects:
  4055 ;;		On entry : 0/0
  4056 ;;		On exit  : 0/0
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4059 ;;      Params:         0       0       0       0       0       0       0       0
  4060 ;;      Locals:         0       2       0       0       0       0       0       0
  4061 ;;      Temps:          0       0       0       0       0       0       0       0
  4062 ;;      Totals:         0       2       0       0       0       0       0       0
  4063 ;;Total ram usage:        2 bytes
  4064 ;; Hardware stack levels used:    1
  4065 ;; Hardware stack levels required when called:    4
  4066 ;; This function calls:
  4067 ;;		Nothing
  4068 ;; This function is called by:
  4069 ;;		_main
  4070 ;; This function uses a non-reentrant model
  4071 ;;
  4072                           
  4073                           
  4074                           ;psect for function _Check_key
  4075  02C5                     _Check_key:	
  4076                           
  4077                           ;incstack = 0
  4078                           ; Regs used in _Check_key: [wreg-fsr0h+status,2+status,0]
  4079                           ;Check_key@btn_mask stored from wreg
  4080  02C5  0020               	movlb	0	; select bank0
  4081  02C6  00D7               	movwf	Check_key@btn_mask
  4082                           
  4083                           ;keyboard.c: 86: unsigned char btn_pressed=0;
  4084  02C7  01D8               	clrf	Check_key@btn_pressed
  4085                           
  4086                           ;keyboard.c: 89: switch(btn_mask)
  4087  02C8  2ADD               	goto	l2489
  4088  02C9                     l2475:	
  4089                           ;keyboard.c: 90: {
  4090                           ;keyboard.c: 91: case 0b01000000:
  4091                           
  4092                           
  4093                           ;keyboard.c: 92: btn_pressed=strKey_Pressed.btnOK;
  4094  02C9  3000               	movlw	0
  4095  02CA  1856               	btfsc	_strKey_Pressed,0	;volatile
  4096  02CB  3001               	movlw	1
  4097  02CC  00D8               	movwf	Check_key@btn_pressed
  4098                           
  4099                           ;keyboard.c: 94: strKey_Pressed.btnOK=0;
  4100  02CD  1056               	bcf	_strKey_Pressed,0	;volatile
  4101                           
  4102                           ;keyboard.c: 95: break;
  4103  02CE  2AE8               	goto	l2491
  4104  02CF                     l2479:	
  4105                           ;keyboard.c: 97: case 0b10000000:
  4106                           
  4107                           
  4108                           ;keyboard.c: 98: btn_pressed=strKey_Pressed.btnUP;
  4109  02CF  3000               	movlw	0
  4110  02D0  18D6               	btfsc	_strKey_Pressed,1	;volatile
  4111  02D1  3001               	movlw	1
  4112  02D2  00D8               	movwf	Check_key@btn_pressed
  4113                           
  4114                           ;keyboard.c: 100: strKey_Pressed.btnUP=0;
  4115  02D3  10D6               	bcf	_strKey_Pressed,1	;volatile
  4116                           
  4117                           ;keyboard.c: 101: break;
  4118  02D4  2AE8               	goto	l2491
  4119  02D5                     l2483:	
  4120                           ;keyboard.c: 102: case 0b00100000:
  4121                           
  4122                           
  4123                           ;keyboard.c: 103: btn_pressed=strKey_Pressed.btnDOWN;
  4124  02D5  3000               	movlw	0
  4125  02D6  1956               	btfsc	_strKey_Pressed,2	;volatile
  4126  02D7  3001               	movlw	1
  4127  02D8  00D8               	movwf	Check_key@btn_pressed
  4128                           
  4129                           ;keyboard.c: 105: strKey_Pressed.btnDOWN=0;
  4130  02D9  1156               	bcf	_strKey_Pressed,2	;volatile
  4131                           
  4132                           ;keyboard.c: 106: break;
  4133  02DA  2AE8               	goto	l2491
  4134  02DB                     l2487:	
  4135                           ;keyboard.c: 107: default:
  4136                           
  4137                           
  4138                           ;keyboard.c: 108: btn_pressed=0;
  4139  02DB  01D8               	clrf	Check_key@btn_pressed
  4140                           
  4141                           ;keyboard.c: 109: }
  4142  02DC  2AE8               	goto	l2491
  4143  02DD                     l2489:	
  4144  02DD  0857               	movf	Check_key@btn_mask,w
  4145                           
  4146                           ; Switch size 1, requested type "space"
  4147                           ; Number of cases is 3, Range of values is 32 to 128
  4148                           ; switch strategies available:
  4149                           ; Name         Instructions Cycles
  4150                           ; simple_byte           10     6 (average)
  4151                           ; direct_byte          203     9 (fixed)
  4152                           ; jumptable            263     9 (fixed)
  4153                           ;	Chosen strategy is simple_byte
  4154  02DE  3A20               	xorlw	32	; case 32
  4155  02DF  1903               	skipnz
  4156  02E0  2AD5               	goto	l2483
  4157  02E1  3A60               	xorlw	96	; case 64
  4158  02E2  1903               	skipnz
  4159  02E3  2AC9               	goto	l2475
  4160  02E4  3AC0               	xorlw	192	; case 128
  4161  02E5  1903               	skipnz
  4162  02E6  2ACF               	goto	l2479
  4163  02E7  2ADB               	goto	l2487
  4164  02E8                     l2491:	
  4165                           
  4166                           ;keyboard.c: 110: return btn_pressed;
  4167  02E8  0858               	movf	Check_key@btn_pressed,w
  4168  02E9  0008               	return
  4169  02EA                     __end_of_Check_key:	
  4170                           
  4171                           	psect	text17
  4172  04BE                     __ptext17:	
  4173 ;; *************** function _ADC_StartConversion *****************
  4174 ;; Defined at:
  4175 ;;		line 92 in file "mcc_generated_files/adc.c"
  4176 ;; Parameters:    Size  Location     Type
  4177 ;;		None
  4178 ;; Auto vars:     Size  Location     Type
  4179 ;;		None
  4180 ;; Return value:  Size  Location     Type
  4181 ;;                  1    wreg      void 
  4182 ;; Registers used:
  4183 ;;		None
  4184 ;; Tracked objects:
  4185 ;;		On entry : 0/0
  4186 ;;		On exit  : 0/0
  4187 ;;		Unchanged: 0/0
  4188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4189 ;;      Params:         0       0       0       0       0       0       0       0
  4190 ;;      Locals:         0       0       0       0       0       0       0       0
  4191 ;;      Temps:          0       0       0       0       0       0       0       0
  4192 ;;      Totals:         0       0       0       0       0       0       0       0
  4193 ;;Total ram usage:        0 bytes
  4194 ;; Hardware stack levels used:    1
  4195 ;; Hardware stack levels required when called:    4
  4196 ;; This function calls:
  4197 ;;		Nothing
  4198 ;; This function is called by:
  4199 ;;		_main
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203                           
  4204                           ;psect for function _ADC_StartConversion
  4205  04BE                     _ADC_StartConversion:	
  4206                           
  4207                           ;adc.c: 95: ADCON0bits.GO_nDONE = 1;
  4208                           
  4209                           ;incstack = 0
  4210                           ; Regs used in _ADC_StartConversion: []
  4211  04BE  0021               	movlb	1	; select bank1
  4212  04BF  149D               	bsf	29,1	;volatile
  4213  04C0  0008               	return
  4214  04C1                     __end_of_ADC_StartConversion:	
  4215                           
  4216                           	psect	intentry
  4217  0004                     __pintentry:	
  4218 ;; *************** function _INTERRUPT_InterruptManager *****************
  4219 ;; Defined at:
  4220 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  4221 ;; Parameters:    Size  Location     Type
  4222 ;;		None
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;		None
  4225 ;; Return value:  Size  Location     Type
  4226 ;;                  1    wreg      void 
  4227 ;; Registers used:
  4228 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4229 ;; Tracked objects:
  4230 ;;		On entry : 0/0
  4231 ;;		On exit  : 0/0
  4232 ;;		Unchanged: 0/0
  4233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4234 ;;      Params:         0       0       0       0       0       0       0       0
  4235 ;;      Locals:         0       0       0       0       0       0       0       0
  4236 ;;      Temps:          1       0       0       0       0       0       0       0
  4237 ;;      Totals:         1       0       0       0       0       0       0       0
  4238 ;;Total ram usage:        1 bytes
  4239 ;; Hardware stack levels used:    1
  4240 ;; Hardware stack levels required when called:    3
  4241 ;; This function calls:
  4242 ;;		_ADC_ISR
  4243 ;;		_EUSART_Receive_ISR
  4244 ;;		_EUSART_Transmit_ISR
  4245 ;;		_TMR1_ISR
  4246 ;; This function is called by:
  4247 ;;		Interrupt level 1
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251  0004                     _INTERRUPT_InterruptManager:	
  4252                           
  4253                           ;incstack = 0
  4254  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4255                           
  4256                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4257  0005  3180               	pagesel	$
  4258  0006  0020               	movlb	0	; select bank0
  4259  0007  087F               	movf	127,w
  4260  0008  00F9               	movwf	??_INTERRUPT_InterruptManager
  4261                           
  4262                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE1bits.ADIE == 1 && PIR1bits.ADIF
      +                           == 1)
  4263  0009  1F0B               	btfss	11,6	;volatile
  4264  000A  2815               	goto	i1l191
  4265  000B  0021               	movlb	1	; select bank1
  4266  000C  1F11               	btfss	17,6	;volatile
  4267  000D  2815               	goto	i1l191
  4268  000E  0020               	movlb	0	; select bank0
  4269  000F  1F11               	btfss	17,6	;volatile
  4270  0010  2815               	goto	i1l191
  4271                           
  4272                           ;interrupt_manager.c: 55: {
  4273                           ;interrupt_manager.c: 56: ADC_ISR();
  4274  0011  3184  2475  3180   	fcall	_ADC_ISR
  4275                           
  4276                           ;interrupt_manager.c: 57: }
  4277  0014  2837               	goto	i1l199
  4278  0015                     i1l191:	
  4279                           
  4280                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE1bits.TXIE == 1 && PIR1bits
      +                          .TXIF == 1)
  4281  0015  1F0B               	btfss	11,6	;volatile
  4282  0016  2821               	goto	i1l193
  4283  0017  0021               	movlb	1	; select bank1
  4284  0018  1E11               	btfss	17,4	;volatile
  4285  0019  2821               	goto	i1l193
  4286  001A  0020               	movlb	0	; select bank0
  4287  001B  1E11               	btfss	17,4	;volatile
  4288  001C  2821               	goto	i1l193
  4289                           
  4290                           ;interrupt_manager.c: 59: {
  4291                           ;interrupt_manager.c: 60: EUSART_Transmit_ISR();
  4292  001D  3183  232E  3180   	fcall	_EUSART_Transmit_ISR
  4293                           
  4294                           ;interrupt_manager.c: 61: }
  4295  0020  2837               	goto	i1l199
  4296  0021                     i1l193:	
  4297                           
  4298                           ;interrupt_manager.c: 62: else if(INTCONbits.PEIE == 1 && PIE1bits.RCIE == 1 && PIR1bits
      +                          .RCIF == 1)
  4299  0021  1F0B               	btfss	11,6	;volatile
  4300  0022  282D               	goto	i1l195
  4301  0023  0021               	movlb	1	; select bank1
  4302  0024  1E91               	btfss	17,5	;volatile
  4303  0025  282D               	goto	i1l195
  4304  0026  0020               	movlb	0	; select bank0
  4305  0027  1E91               	btfss	17,5	;volatile
  4306  0028  282D               	goto	i1l195
  4307                           
  4308                           ;interrupt_manager.c: 63: {
  4309                           ;interrupt_manager.c: 64: EUSART_Receive_ISR();
  4310  0029  3181  218A  3180   	fcall	_EUSART_Receive_ISR
  4311                           
  4312                           ;interrupt_manager.c: 65: }
  4313  002C  2837               	goto	i1l199
  4314  002D                     i1l195:	
  4315                           
  4316                           ;interrupt_manager.c: 66: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bi
      +                          ts.TMR1IF == 1)
  4317  002D  1F0B               	btfss	11,6	;volatile
  4318  002E  2837               	goto	i1l199
  4319  002F  0021               	movlb	1	; select bank1
  4320  0030  1C11               	btfss	17,0	;volatile
  4321  0031  2837               	goto	i1l199
  4322  0032  0020               	movlb	0	; select bank0
  4323  0033  1C11               	btfss	17,0	;volatile
  4324  0034  2837               	goto	i1l199
  4325                           
  4326                           ;interrupt_manager.c: 67: {
  4327                           ;interrupt_manager.c: 68: TMR1_ISR();
  4328  0035  3183  2382         	fcall	_TMR1_ISR
  4329  0037                     i1l199:	
  4330                           ;interrupt_manager.c: 70: else
  4331                           ;interrupt_manager.c: 71: {
  4332                           
  4333                           ;interrupt_manager.c: 69: }
  4334                           
  4335  0037  0879               	movf	??_INTERRUPT_InterruptManager,w
  4336  0038  0020               	movlb	0	; select bank0
  4337  0039  00FF               	movwf	127
  4338  003A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4339  003B  0009               	retfie
  4340  003C                     __end_of_INTERRUPT_InterruptManager:	
  4341                           
  4342                           	psect	text19
  4343  0382                     __ptext19:	
  4344 ;; *************** function _TMR1_ISR *****************
  4345 ;; Defined at:
  4346 ;;		line 171 in file "mcc_generated_files/tmr1.c"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;		None
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;		None
  4351 ;; Return value:  Size  Location     Type
  4352 ;;                  1    wreg      void 
  4353 ;; Registers used:
  4354 ;;		wreg, status,2, status,0, pclath, cstack
  4355 ;; Tracked objects:
  4356 ;;		On entry : 0/0
  4357 ;;		On exit  : 0/0
  4358 ;;		Unchanged: 0/0
  4359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4360 ;;      Params:         0       0       0       0       0       0       0       0
  4361 ;;      Locals:         0       0       0       0       0       0       0       0
  4362 ;;      Temps:          0       0       0       0       0       0       0       0
  4363 ;;      Totals:         0       0       0       0       0       0       0       0
  4364 ;;Total ram usage:        0 bytes
  4365 ;; Hardware stack levels used:    1
  4366 ;; Hardware stack levels required when called:    2
  4367 ;; This function calls:
  4368 ;;		_TMR1_CallBack
  4369 ;; This function is called by:
  4370 ;;		_INTERRUPT_InterruptManager
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           
  4374                           
  4375                           ;psect for function _TMR1_ISR
  4376  0382                     _TMR1_ISR:	
  4377                           
  4378                           ;tmr1.c: 173: static volatile unsigned int CountCallBack = 0;
  4379                           ;tmr1.c: 176: PIR1bits.TMR1IF = 0;
  4380                           
  4381                           ;incstack = 0
  4382                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  4383  0382  0020               	movlb	0	; select bank0
  4384  0383  1011               	bcf	17,0	;volatile
  4385                           
  4386                           ;tmr1.c: 178: TMR1H = (timer1ReloadVal >> 8);
  4387  0384  086E               	movf	_timer1ReloadVal+1,w	;volatile
  4388  0385  0097               	movwf	23	;volatile
  4389                           
  4390                           ;tmr1.c: 179: TMR1L = timer1ReloadVal;
  4391  0386  086D               	movf	_timer1ReloadVal,w	;volatile
  4392  0387  0096               	movwf	22	;volatile
  4393                           
  4394                           ;tmr1.c: 180: flag_1_ms=1;
  4395  0388  3001               	movlw	1
  4396  0389  00BA               	movwf	_flag_1_ms
  4397  038A  3000               	movlw	0
  4398  038B  00BB               	movwf	_flag_1_ms+1
  4399                           
  4400                           ;tmr1.c: 182: if (++CountCallBack >= 10)
  4401  038C  3001               	movlw	1
  4402  038D  07A6               	addwf	TMR1_ISR@CountCallBack,f	;volatile
  4403  038E  3000               	movlw	0
  4404  038F  3DA7               	addwfc	TMR1_ISR@CountCallBack+1,f	;volatile
  4405  0390  3000               	movlw	0
  4406  0391  0227               	subwf	TMR1_ISR@CountCallBack+1,w	;volatile
  4407  0392  300A               	movlw	10
  4408  0393  1903               	skipnz
  4409  0394  0226               	subwf	TMR1_ISR@CountCallBack,w	;volatile
  4410  0395  1C03               	skipc
  4411  0396  0008               	return
  4412                           
  4413                           ;tmr1.c: 183: {
  4414                           ;tmr1.c: 185: TMR1_CallBack();
  4415  0397  3181  213C         	fcall	_TMR1_CallBack
  4416                           
  4417                           ;tmr1.c: 188: CountCallBack = 0;
  4418  0399  0020               	movlb	0	; select bank0
  4419  039A  01A6               	clrf	TMR1_ISR@CountCallBack	;volatile
  4420  039B  01A7               	clrf	TMR1_ISR@CountCallBack+1	;volatile
  4421  039C  0008               	return
  4422  039D                     __end_of_TMR1_ISR:	
  4423                           
  4424                           	psect	text20
  4425  013C                     __ptext20:	
  4426 ;; *************** function _TMR1_CallBack *****************
  4427 ;; Defined at:
  4428 ;;		line 192 in file "mcc_generated_files/tmr1.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;		None
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;		None
  4433 ;; Return value:  Size  Location     Type
  4434 ;;                  1    wreg      void 
  4435 ;; Registers used:
  4436 ;;		wreg, status,2, status,0, pclath, cstack
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 0/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4442 ;;      Params:         0       0       0       0       0       0       0       0
  4443 ;;      Locals:         0       0       0       0       0       0       0       0
  4444 ;;      Temps:          0       0       0       0       0       0       0       0
  4445 ;;      Totals:         0       0       0       0       0       0       0       0
  4446 ;;Total ram usage:        0 bytes
  4447 ;; Hardware stack levels used:    1
  4448 ;; Hardware stack levels required when called:    1
  4449 ;; This function calls:
  4450 ;;		Absolute function
  4451 ;;		_TMR1_DefaultInterruptHandler
  4452 ;; This function is called by:
  4453 ;;		_TMR1_ISR
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           
  4458                           ;psect for function _TMR1_CallBack
  4459  013C                     _TMR1_CallBack:	
  4460                           
  4461                           ;tmr1.c: 194: flag_10_ms=1;
  4462                           
  4463                           ;incstack = 0
  4464                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  4465  013C  3001               	movlw	1
  4466  013D  0020               	movlb	0	; select bank0
  4467  013E  00B8               	movwf	_flag_10_ms
  4468  013F  3000               	movlw	0
  4469  0140  00B9               	movwf	_flag_10_ms+1
  4470                           
  4471                           ;tmr1.c: 195: count_100_ms++;
  4472  0141  3001               	movlw	1
  4473  0142  07AE               	addwf	_count_100_ms,f
  4474  0143  3000               	movlw	0
  4475  0144  3DAF               	addwfc	_count_100_ms+1,f
  4476                           
  4477                           ;tmr1.c: 196: count_500_ms++;
  4478  0145  3001               	movlw	1
  4479  0146  07AC               	addwf	_count_500_ms,f
  4480  0147  3000               	movlw	0
  4481  0148  3DAD               	addwfc	_count_500_ms+1,f
  4482                           
  4483                           ;tmr1.c: 197: count_1000_ms++;
  4484  0149  3001               	movlw	1
  4485  014A  07AA               	addwf	_count_1000_ms,f
  4486  014B  3000               	movlw	0
  4487  014C  3DAB               	addwfc	_count_1000_ms+1,f
  4488                           
  4489                           ;tmr1.c: 198: count_4000_ms++;
  4490  014D  3001               	movlw	1
  4491  014E  07A8               	addwf	_count_4000_ms,f
  4492  014F  3000               	movlw	0
  4493  0150  3DA9               	addwfc	_count_4000_ms+1,f
  4494                           
  4495                           ;tmr1.c: 200: if (count_100_ms==10)
  4496  0151  300A               	movlw	10
  4497  0152  062E               	xorwf	_count_100_ms,w
  4498  0153  042F               	iorwf	_count_100_ms+1,w
  4499  0154  1D03               	btfss	3,2
  4500  0155  295C               	goto	i1l2159
  4501                           
  4502                           ;tmr1.c: 201: {
  4503                           ;tmr1.c: 202: flag_100_ms=1;
  4504  0156  3001               	movlw	1
  4505  0157  00B6               	movwf	_flag_100_ms
  4506  0158  3000               	movlw	0
  4507  0159  00B7               	movwf	_flag_100_ms+1
  4508                           
  4509                           ;tmr1.c: 203: count_100_ms=0;
  4510  015A  01AE               	clrf	_count_100_ms
  4511  015B  01AF               	clrf	_count_100_ms+1
  4512  015C                     i1l2159:	
  4513                           
  4514                           ;tmr1.c: 204: }
  4515                           ;tmr1.c: 205: if(count_500_ms==50)
  4516  015C  3032               	movlw	50
  4517  015D  062C               	xorwf	_count_500_ms,w
  4518  015E  042D               	iorwf	_count_500_ms+1,w
  4519  015F  1D03               	btfss	3,2
  4520  0160  2967               	goto	i1l2165
  4521                           
  4522                           ;tmr1.c: 206: {
  4523                           ;tmr1.c: 207: flag_500_ms=1;
  4524  0161  3001               	movlw	1
  4525  0162  00B4               	movwf	_flag_500_ms
  4526  0163  3000               	movlw	0
  4527  0164  00B5               	movwf	_flag_500_ms+1
  4528                           
  4529                           ;tmr1.c: 208: count_500_ms=0;
  4530  0165  01AC               	clrf	_count_500_ms
  4531  0166  01AD               	clrf	_count_500_ms+1
  4532  0167                     i1l2165:	
  4533                           
  4534                           ;tmr1.c: 209: }
  4535                           ;tmr1.c: 210: if (count_1000_ms==100)
  4536  0167  3064               	movlw	100
  4537  0168  062A               	xorwf	_count_1000_ms,w
  4538  0169  042B               	iorwf	_count_1000_ms+1,w
  4539  016A  1D03               	btfss	3,2
  4540  016B  2972               	goto	i1l2171
  4541                           
  4542                           ;tmr1.c: 211: {
  4543                           ;tmr1.c: 212: flag_1000_ms=1;
  4544  016C  3001               	movlw	1
  4545  016D  00B2               	movwf	_flag_1000_ms
  4546  016E  3000               	movlw	0
  4547  016F  00B3               	movwf	_flag_1000_ms+1
  4548                           
  4549                           ;tmr1.c: 213: count_1000_ms=0;
  4550  0170  01AA               	clrf	_count_1000_ms
  4551  0171  01AB               	clrf	_count_1000_ms+1
  4552  0172                     i1l2171:	
  4553                           
  4554                           ;tmr1.c: 214: }
  4555                           ;tmr1.c: 215: if (count_4000_ms==400)
  4556  0172  3090               	movlw	144
  4557  0173  0628               	xorwf	_count_4000_ms,w
  4558  0174  1D03               	skipz
  4559  0175  297F               	goto	i1l2177
  4560  0176  0329               	decf	_count_4000_ms+1,w
  4561  0177  1D03               	btfss	3,2
  4562  0178  297F               	goto	i1l2177
  4563                           
  4564                           ;tmr1.c: 216: {
  4565                           ;tmr1.c: 217: flag_4000_ms=1;
  4566  0179  3001               	movlw	1
  4567  017A  00B0               	movwf	_flag_4000_ms
  4568  017B  3000               	movlw	0
  4569  017C  00B1               	movwf	_flag_4000_ms+1
  4570                           
  4571                           ;tmr1.c: 218: count_4000_ms=0;
  4572  017D  01A8               	clrf	_count_4000_ms
  4573  017E  01A9               	clrf	_count_4000_ms+1
  4574  017F                     i1l2177:	
  4575                           
  4576                           ;tmr1.c: 219: }
  4577                           ;tmr1.c: 220: if(TMR1_InterruptHandler)
  4578  017F  0021               	movlb	1	; select bank1
  4579  0180  0861               	movf	_TMR1_InterruptHandler^(0+128),w
  4580  0181  0462               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
  4581  0182  1903               	btfsc	3,2
  4582  0183  0008               	return
  4583                           
  4584                           ;tmr1.c: 221: {
  4585                           ;tmr1.c: 223: TMR1_InterruptHandler();
  4586  0184  0862               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
  4587  0185  008A               	movwf	10
  4588  0186  0861               	movf	_TMR1_InterruptHandler^(0+128),w
  4589  0187  000A               	callw
  4590  0188  3181               	pagesel	$
  4591  0189  0008               	return
  4592  018A                     __end_of_TMR1_CallBack:	
  4593                           
  4594                           	psect	text21
  4595  04C1                     __ptext21:	
  4596 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  4597 ;; Defined at:
  4598 ;;		line 231 in file "mcc_generated_files/tmr1.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;		None
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;		None
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  1    wreg      void 
  4605 ;; Registers used:
  4606 ;;		None
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4612 ;;      Params:         0       0       0       0       0       0       0       0
  4613 ;;      Locals:         0       0       0       0       0       0       0       0
  4614 ;;      Temps:          0       0       0       0       0       0       0       0
  4615 ;;      Totals:         0       0       0       0       0       0       0       0
  4616 ;;Total ram usage:        0 bytes
  4617 ;; Hardware stack levels used:    1
  4618 ;; This function calls:
  4619 ;;		Nothing
  4620 ;; This function is called by:
  4621 ;;		_TMR1_Initialize
  4622 ;;		_TMR1_CallBack
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           
  4626                           
  4627                           ;psect for function _TMR1_DefaultInterruptHandler
  4628  04C1                     _TMR1_DefaultInterruptHandler:	
  4629                           
  4630                           ;incstack = 0
  4631                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  4632  04C1  0008               	return
  4633  04C2                     __end_of_TMR1_DefaultInterruptHandler:	
  4634                           
  4635                           	psect	text22
  4636  032E                     __ptext22:	
  4637 ;; *************** function _EUSART_Transmit_ISR *****************
  4638 ;; Defined at:
  4639 ;;		line 166 in file "mcc_generated_files/eusart.c"
  4640 ;; Parameters:    Size  Location     Type
  4641 ;;		None
  4642 ;; Auto vars:     Size  Location     Type
  4643 ;;		None
  4644 ;; Return value:  Size  Location     Type
  4645 ;;                  1    wreg      void 
  4646 ;; Registers used:
  4647 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4648 ;; Tracked objects:
  4649 ;;		On entry : 0/0
  4650 ;;		On exit  : 0/0
  4651 ;;		Unchanged: 0/0
  4652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4653 ;;      Params:         0       0       0       0       0       0       0       0
  4654 ;;      Locals:         0       0       0       0       0       0       0       0
  4655 ;;      Temps:          1       0       0       0       0       0       0       0
  4656 ;;      Totals:         1       0       0       0       0       0       0       0
  4657 ;;Total ram usage:        1 bytes
  4658 ;; Hardware stack levels used:    1
  4659 ;; This function calls:
  4660 ;;		Nothing
  4661 ;; This function is called by:
  4662 ;;		_INTERRUPT_InterruptManager
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           
  4667                           ;psect for function _EUSART_Transmit_ISR
  4668  032E                     _EUSART_Transmit_ISR:	
  4669                           
  4670                           ;eusart.c: 170: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
  4671                           
  4672                           ;incstack = 0
  4673                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4674  032E  3008               	movlw	8
  4675  032F  0020               	movlb	0	; select bank0
  4676  0330  026F               	subwf	_eusartTxBufferRemaining,w	;volatile
  4677  0331  1803               	skipnc
  4678  0332  2B48               	goto	i1l149
  4679                           
  4680                           ;eusart.c: 171: {
  4681                           ;eusart.c: 172: TXREG = eusartTxBuffer[eusartTxTail++];
  4682  0333  0853               	movf	_eusartTxTail,w
  4683  0334  3ED2               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4684  0335  0086               	movwf	6
  4685  0336  0187               	clrf	7
  4686  0337  0801               	movf	1,w
  4687  0338  0023               	movlb	3	; select bank3
  4688  0339  009A               	movwf	26	;volatile
  4689  033A  3001               	movlw	1
  4690  033B  00F0               	movwf	??_EUSART_Transmit_ISR
  4691  033C  0870               	movf	??_EUSART_Transmit_ISR,w
  4692  033D  0020               	movlb	0	; select bank0
  4693  033E  07D3               	addwf	_eusartTxTail,f	;volatile
  4694                           
  4695                           ;eusart.c: 173: if(sizeof(eusartTxBuffer) <= eusartTxTail)
  4696  033F  3008               	movlw	8
  4697  0340  0253               	subwf	_eusartTxTail,w	;volatile
  4698  0341  1803               	btfsc	3,0
  4699                           
  4700                           ;eusart.c: 174: {
  4701                           ;eusart.c: 175: eusartTxTail = 0;
  4702  0342  01D3               	clrf	_eusartTxTail	;volatile
  4703                           
  4704                           ;eusart.c: 176: }
  4705                           ;eusart.c: 177: eusartTxBufferRemaining++;
  4706  0343  3001               	movlw	1
  4707  0344  00F0               	movwf	??_EUSART_Transmit_ISR
  4708  0345  0870               	movf	??_EUSART_Transmit_ISR,w
  4709  0346  07EF               	addwf	_eusartTxBufferRemaining,f	;volatile
  4710                           
  4711                           ;eusart.c: 178: }
  4712  0347  0008               	return
  4713  0348                     i1l149:	
  4714                           
  4715                           ;eusart.c: 179: else
  4716                           ;eusart.c: 180: {
  4717                           ;eusart.c: 181: PIE1bits.TXIE = 0;
  4718  0348  0021               	movlb	1	; select bank1
  4719  0349  1211               	bcf	17,4	;volatile
  4720  034A  0008               	return
  4721  034B                     __end_of_EUSART_Transmit_ISR:	
  4722                           
  4723                           	psect	text23
  4724  018A                     __ptext23:	
  4725 ;; *************** function _EUSART_Receive_ISR *****************
  4726 ;; Defined at:
  4727 ;;		line 185 in file "mcc_generated_files/eusart.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;		None
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;		None
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  1    wreg      void 
  4734 ;; Registers used:
  4735 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4741 ;;      Params:         0       0       0       0       0       0       0       0
  4742 ;;      Locals:         0       0       0       0       0       0       0       0
  4743 ;;      Temps:          1       0       0       0       0       0       0       0
  4744 ;;      Totals:         1       0       0       0       0       0       0       0
  4745 ;;Total ram usage:        1 bytes
  4746 ;; Hardware stack levels used:    1
  4747 ;; This function calls:
  4748 ;;		Nothing
  4749 ;; This function is called by:
  4750 ;;		_INTERRUPT_InterruptManager
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754                           
  4755                           ;psect for function _EUSART_Receive_ISR
  4756  018A                     _EUSART_Receive_ISR:	
  4757                           
  4758                           ;eusart.c: 188: if(1 == RCSTAbits.OERR)
  4759                           
  4760                           ;incstack = 0
  4761                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4762  018A  0023               	movlb	3	; select bank3
  4763  018B  1C9D               	btfss	29,1	;volatile
  4764  018C  298F               	goto	i1l2355
  4765                           
  4766                           ;eusart.c: 189: {
  4767                           ;eusart.c: 192: RCSTAbits.CREN = 0;
  4768  018D  121D               	bcf	29,4	;volatile
  4769                           
  4770                           ;eusart.c: 193: RCSTAbits.CREN = 1;
  4771  018E  161D               	bsf	29,4	;volatile
  4772  018F                     i1l2355:	
  4773                           
  4774                           ;eusart.c: 194: }
  4775                           ;eusart.c: 197: eusartRxBuffer[eusartRxHead++] = RCREG;
  4776  018F  0819               	movf	25,w	;volatile
  4777  0190  00F0               	movwf	??_EUSART_Receive_ISR
  4778  0191  0020               	movlb	0	; select bank0
  4779  0192  0852               	movf	_eusartRxHead,w
  4780  0193  3ECA               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  4781  0194  0086               	movwf	6
  4782  0195  0187               	clrf	7
  4783  0196  0870               	movf	??_EUSART_Receive_ISR,w
  4784  0197  0081               	movwf	1
  4785  0198  3001               	movlw	1
  4786  0199  00F0               	movwf	??_EUSART_Receive_ISR
  4787  019A  0870               	movf	??_EUSART_Receive_ISR,w
  4788  019B  07D2               	addwf	_eusartRxHead,f	;volatile
  4789                           
  4790                           ;eusart.c: 198: rcreg=RCREG;
  4791  019C  0023               	movlb	3	; select bank3
  4792  019D  0819               	movf	25,w	;volatile
  4793  019E  00F0               	movwf	??_EUSART_Receive_ISR
  4794  019F  0870               	movf	??_EUSART_Receive_ISR,w
  4795  01A0  00FC               	movwf	_rcreg	;volatile
  4796                           
  4797                           ;eusart.c: 200: if(rcreg=='X')
  4798  01A1  3058               	movlw	88
  4799  01A2  067C               	xorwf	_rcreg,w	;volatile
  4800  01A3  1D03               	btfss	3,2
  4801  01A4  29AB               	goto	i1l2367
  4802                           
  4803                           ;eusart.c: 201: {
  4804                           ;eusart.c: 203: flag_G=1;
  4805  01A5  3001               	movlw	1
  4806  01A6  0020               	movlb	0	; select bank0
  4807  01A7  00C0               	movwf	_flag_G
  4808  01A8  3000               	movlw	0
  4809  01A9  00C1               	movwf	_flag_G+1
  4810  01AA  29C8               	goto	i1l2383
  4811  01AB                     i1l2367:	
  4812                           ;eusart.c: 205: }
  4813                           
  4814                           ;eusart.c: 204: rcreg=0;
  4815                           
  4816                           
  4817                           ;eusart.c: 206: else if(rcreg=='Y')
  4818  01AB  3059               	movlw	89
  4819  01AC  067C               	xorwf	_rcreg,w	;volatile
  4820  01AD  1D03               	btfss	3,2
  4821  01AE  29B5               	goto	i1l2373
  4822                           
  4823                           ;eusart.c: 207: {
  4824                           ;eusart.c: 208: flag_N=1;
  4825  01AF  3001               	movlw	1
  4826  01B0  0020               	movlb	0	; select bank0
  4827  01B1  00C2               	movwf	_flag_N
  4828  01B2  3000               	movlw	0
  4829  01B3  00C3               	movwf	_flag_N+1
  4830  01B4  29C8               	goto	i1l2383
  4831  01B5                     i1l2373:	
  4832                           ;eusart.c: 210: }
  4833                           
  4834                           ;eusart.c: 209: rcreg=0;
  4835                           
  4836                           
  4837                           ;eusart.c: 211: else if(rcreg=='A')
  4838  01B5  3041               	movlw	65
  4839  01B6  067C               	xorwf	_rcreg,w	;volatile
  4840  01B7  1D03               	btfss	3,2
  4841  01B8  29BF               	goto	i1l2379
  4842                           
  4843                           ;eusart.c: 212: {
  4844                           ;eusart.c: 213: flag_A=1;
  4845  01B9  3001               	movlw	1
  4846  01BA  0020               	movlb	0	; select bank0
  4847  01BB  00BE               	movwf	_flag_A
  4848  01BC  3000               	movlw	0
  4849  01BD  00BF               	movwf	_flag_A+1
  4850  01BE  29C8               	goto	i1l2383
  4851  01BF                     i1l2379:	
  4852                           ;eusart.c: 215: }
  4853                           
  4854                           ;eusart.c: 214: rcreg=0;
  4855                           
  4856                           
  4857                           ;eusart.c: 216: else if(rcreg=='B')
  4858  01BF  3042               	movlw	66
  4859  01C0  067C               	xorwf	_rcreg,w	;volatile
  4860  01C1  1D03               	btfss	3,2
  4861  01C2  29C9               	goto	i1l2385
  4862                           
  4863                           ;eusart.c: 217: {
  4864                           ;eusart.c: 218: flag_B=1;
  4865  01C3  3001               	movlw	1
  4866  01C4  0020               	movlb	0	; select bank0
  4867  01C5  00BC               	movwf	_flag_B
  4868  01C6  3000               	movlw	0
  4869  01C7  00BD               	movwf	_flag_B+1
  4870  01C8                     i1l2383:	
  4871                           
  4872                           ;eusart.c: 219: rcreg=0;
  4873  01C8  01FC               	clrf	_rcreg	;volatile
  4874  01C9                     i1l2385:	
  4875                           
  4876                           ;eusart.c: 220: }
  4877                           ;eusart.c: 226: if(sizeof(eusartRxBuffer) <= eusartRxHead)
  4878  01C9  3008               	movlw	8
  4879  01CA  0020               	movlb	0	; select bank0
  4880  01CB  0252               	subwf	_eusartRxHead,w	;volatile
  4881  01CC  1803               	btfsc	3,0
  4882                           
  4883                           ;eusart.c: 227: {
  4884                           ;eusart.c: 228: eusartRxHead = 0;
  4885  01CD  01D2               	clrf	_eusartRxHead	;volatile
  4886                           
  4887                           ;eusart.c: 229: }
  4888                           ;eusart.c: 230: eusartRxCount++;
  4889  01CE  3001               	movlw	1
  4890  01CF  00F0               	movwf	??_EUSART_Receive_ISR
  4891  01D0  0870               	movf	??_EUSART_Receive_ISR,w
  4892  01D1  07D0               	addwf	_eusartRxCount,f	;volatile
  4893  01D2  0008               	return
  4894  01D3                     __end_of_EUSART_Receive_ISR:	
  4895                           
  4896                           	psect	text24
  4897  0475                     __ptext24:	
  4898 ;; *************** function _ADC_ISR *****************
  4899 ;; Defined at:
  4900 ;;		line 136 in file "mcc_generated_files/adc.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;		None
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;		None
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  1    wreg      void 
  4907 ;; Registers used:
  4908 ;;		wreg, status,2, status,0, pclath, cstack
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4914 ;;      Params:         0       0       0       0       0       0       0       0
  4915 ;;      Locals:         0       0       0       0       0       0       0       0
  4916 ;;      Temps:          0       0       0       0       0       0       0       0
  4917 ;;      Totals:         0       0       0       0       0       0       0       0
  4918 ;;Total ram usage:        0 bytes
  4919 ;; Hardware stack levels used:    1
  4920 ;; Hardware stack levels required when called:    1
  4921 ;; This function calls:
  4922 ;;		_ADC_GetConversionResult
  4923 ;; This function is called by:
  4924 ;;		_INTERRUPT_InterruptManager
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928                           
  4929                           ;psect for function _ADC_ISR
  4930  0475                     _ADC_ISR:	
  4931                           
  4932                           ;adc.c: 139: PIR1bits.ADIF = 0;
  4933                           
  4934                           ;incstack = 0
  4935                           ; Regs used in _ADC_ISR: [wreg+status,2+status,0+pclath+cstack]
  4936  0475  0020               	movlb	0	; select bank0
  4937  0476  1311               	bcf	17,6	;volatile
  4938                           
  4939                           ;adc.c: 140: rez_conversie=ADC_GetConversionResult();
  4940  0477  3183  234B         	fcall	_ADC_GetConversionResult
  4941  0479  0871               	movf	?_ADC_GetConversionResult+1,w
  4942  047A  0020               	movlb	0	; select bank0
  4943  047B  00C5               	movwf	_rez_conversie+1
  4944  047C  0870               	movf	?_ADC_GetConversionResult,w
  4945  047D  00C4               	movwf	_rez_conversie
  4946  047E  0008               	return
  4947  047F                     __end_of_ADC_ISR:	
  4948                           
  4949                           	psect	text25
  4950  034B                     __ptext25:	
  4951 ;; *************** function _ADC_GetConversionResult *****************
  4952 ;; Defined at:
  4953 ;;		line 105 in file "mcc_generated_files/adc.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;		None
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;		None
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  2    0[COMMON] unsigned int 
  4960 ;; Registers used:
  4961 ;;		wreg, status,2, status,0
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4967 ;;      Params:         2       0       0       0       0       0       0       0
  4968 ;;      Locals:         0       0       0       0       0       0       0       0
  4969 ;;      Temps:          7       0       0       0       0       0       0       0
  4970 ;;      Totals:         9       0       0       0       0       0       0       0
  4971 ;;Total ram usage:        9 bytes
  4972 ;; Hardware stack levels used:    1
  4973 ;; This function calls:
  4974 ;;		Nothing
  4975 ;; This function is called by:
  4976 ;;		_ADC_ISR
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           
  4981                           ;psect for function _ADC_GetConversionResult
  4982  034B                     _ADC_GetConversionResult:	
  4983                           
  4984                           ;adc.c: 109: return ((adc_result_t)((ADRESH<<2) + (ADRESL>>6)));
  4985                           
  4986                           ;incstack = 0
  4987                           ; Regs used in _ADC_GetConversionResult: [wreg+status,2+status,0]
  4988  034B  0021               	movlb	1	; select bank1
  4989  034C  081B               	movf	27,w	;volatile
  4990  034D  00F2               	movwf	??_ADC_GetConversionResult
  4991  034E  3006               	movlw	6
  4992  034F                     u125_25:	
  4993  034F  36F2               	lsrf	??_ADC_GetConversionResult,f
  4994  0350  0B89               	decfsz	9,f
  4995  0351  2B4F               	goto	u125_25
  4996  0352  0872               	movf	??_ADC_GetConversionResult,w
  4997  0353  00F3               	movwf	??_ADC_GetConversionResult+1
  4998  0354  01F4               	clrf	??_ADC_GetConversionResult+2
  4999  0355  081C               	movf	28,w	;volatile
  5000  0356  00F5               	movwf	??_ADC_GetConversionResult+3
  5001  0357  01F6               	clrf	??_ADC_GetConversionResult+4
  5002  0358  35F5               	lslf	??_ADC_GetConversionResult+3,f
  5003  0359  0DF6               	rlf	??_ADC_GetConversionResult+4,f
  5004  035A  35F5               	lslf	??_ADC_GetConversionResult+3,f
  5005  035B  0DF6               	rlf	??_ADC_GetConversionResult+4,f
  5006  035C  0873               	movf	??_ADC_GetConversionResult+1,w
  5007  035D  0775               	addwf	??_ADC_GetConversionResult+3,w
  5008  035E  00F7               	movwf	??_ADC_GetConversionResult+5
  5009  035F  0874               	movf	??_ADC_GetConversionResult+2,w
  5010  0360  3D76               	addwfc	??_ADC_GetConversionResult+4,w
  5011  0361  00F8               	movwf	??_ADC_GetConversionResult+6
  5012  0362  0877               	movf	??_ADC_GetConversionResult+5,w
  5013  0363  00F0               	movwf	?_ADC_GetConversionResult
  5014  0364  0878               	movf	??_ADC_GetConversionResult+6,w
  5015  0365  00F1               	movwf	?_ADC_GetConversionResult+1
  5016  0366  0008               	return
  5017  0367                     __end_of_ADC_GetConversionResult:	
  5018  007E                     btemp	set	126	;btemp
  5019  007E                     int$flags	set	126
  5020  007E                     wtemp0	set	126


Data Sizes:
    Strings     173
    Constant    10
    Data        48
    BSS         157
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     14      80
    BANK1            80      0      67
    BANK2            80      0      75
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 2
		 -> NULL(NULL[0]), line2(BANK0[2]), sms_text@umid(COMMON[1]), sms_text@smstext(COMMON[1]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 2
		 -> NULL(NULL[0]), line2(BANK0[2]), sms_text@umid(COMMON[1]), sms_text@smstext(COMMON[1]), 

    S982__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    S982__prbuf$ptr	PTR unsigned char  size(1) Largest target is 2
		 -> NULL(NULL[0]), line2(BANK0[2]), sms_text@umid(COMMON[1]), sms_text@smstext(COMMON[1]), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 2
		 -> NULL(NULL[0]), line2(BANK0[2]), sms_text@umid(COMMON[1]), sms_text@smstext(COMMON[1]), 

    LCDWriteString@msg	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_13(CODE[17]), STR_12(CODE[18]), STR_11(CODE[17]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _ADC_ISR->_ADC_GetConversionResult

Critical Paths under _main in BANK0

    _main->_LCDWriteString
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _LCDWriteString->_LCDByte
    _LCDInit->_LCDByte
    _Keyboard_Manager->_Check_KeyPressed

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    3692
                                             11 BANK0      3     3      0
                _ADC_StartConversion
                          _Check_key
                   _Keyboard_Manager
                            _LCDByte
                            _LCDInit
                     _LCDWriteString
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      86
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0      86
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      86
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDWriteString                                       4     2      2    1425
                                              7 BANK0      4     2      2
                            _LCDByte
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              2     2      0    1076
                                              7 BANK0      2     2      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDByte                                              7     6      1    1054
                                              0 BANK0      7     6      1
 ---------------------------------------------------------------------------------
 (1) _Keyboard_Manager                                     0     0      0       0
                   _Check_KeyPressed
                  _Check_KeyReleased
 ---------------------------------------------------------------------------------
 (2) _Check_KeyReleased                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Check_KeyPressed                                     1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Check_key                                            2     2      0      49
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0       0
                                              9 COMMON     1     1      0
                            _ADC_ISR
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0       0
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0       0
            _ADC_GetConversionResult
 ---------------------------------------------------------------------------------
 (6) _ADC_GetConversionResult                              9     7      2       0
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_StartConversion
   _Check_key
   _Keyboard_Manager
     _Check_KeyPressed
     _Check_KeyReleased
   _LCDByte
   _LCDInit
     _LCDByte
   _LCDWriteString
     _LCDByte
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
     _ADC_GetConversionResult
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      EC       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      E      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      43       8       83.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      4B      10       93.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      EC      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Fri Dec 01 11:55:13 2017

                             __CFG_CP$OFF 0000                         _Check_KeyReleased 030D  
                                      _RH 0049                                        _Ch 004B  
                       ?_Check_KeyPressed 0070                        ?_Check_KeyReleased 0070  
                             __CFG_LVP$ON 0000                                       l632 0116  
                                     l570 0271                                       l636 0132  
                                     l628 00F7                                       l569 0270  
                           _strKey_Counts 007D                        ??_Check_KeyPressed 0057  
                                     _RD0 0078                                       _RD1 0079  
                                     _RD3 007B                              __CFG_CPD$OFF 0000  
                                     _Sum 0048                           _timer1ReloadVal 006D  
                         __end_of_ADC_ISR 047F                              __CFG_BORV$LO 0000  
                                     wreg 0009                              __CFG_IESO$ON 0000  
                            __CFG_FOSC$HS 0000                       ??_Check_KeyReleased 0057  
                         __end_of_LCDByte 029B                           __end_of_LCDInit 0219  
                           _count_1000_ms 002A                               LCDByte@temp 005D  
                           _count_4000_ms 0028                                      l2223 0100  
                                    l2233 0120                                      l2251 0318  
                                    l2513 0249                                      l3081 00E1  
                                    l2259 0323                                      l3075 00CC  
                                    l3059 009A                                      l2509 0242  
                                    l2517 0219                                      l3069 00B7  
                                    l2483 02D5                                      l2491 02E8  
                                    l2475 02C9                                      l2487 02DB  
                                    l2479 02CF                                      l2489 02DD  
                                    STR_1 0453                                      STR_2 03B5  
                                    STR_3 0433                                      STR_4 0411  
                                    STR_5 04B8                                      STR_6 0444  
                                    STR_7 046B                                      STR_8 03DC  
                                    _LATA 010C                                      _LATB 010D  
                                    _LATC 010E                                      _LATD 010F  
                                    u1265 025F                                      _LATE 0110  
                                    u3417 01D9                                      u3427 01FC  
                                    u3437 0296                                      _WPUB 020D  
                                    _WPUE 0210                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000                                      _Temp 004A  
                                    _main 0075                                      _temp 0024  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                            _strKey_Pressed 0056  
                                    start 003C                ??_TMR1_SetInterruptHandler 0059  
                           __CFG_MCLRE$ON 0000                           turn_egs@step_nr 0065  
               __end_of_Check_KeyReleased 032E            __size_of_OSCILLATOR_Initialize 0005  
           __end_of_OSCILLATOR_Initialize 04B4                                     ?_main 0070  
                                   STR_10 0497                                     STR_11 0400  
                                   STR_12 03CA                                     STR_13 0422  
                           __CFG_WDTE$OFF 0000                           _TMR1_StartTimer 04BB  
                            LCDInit@style 005F                                     _T1CON 0018  
                                   i1l149 0348                                     i1l191 0015  
                                   i1l193 0021                                     i1l195 002D  
                                   i1l199 0037                                     _RCREG 0199  
                                   _RCSTA 019D                                     _TMR1H 0017  
                                   _TMR1L 0016                                     _PORTB 000D  
                                   _PORTD 000F                                     _TRISA 008C  
                                   _TRISB 008D                                     _TRISC 008E  
                                   _TRISD 008F                                     _TRISE 0090  
                                   _TXREG 019A                                     _TXSTA 019E  
                                   _Check 004F          __size_of_ADC_GetConversionResult 001C  
                        _Keyboard_Manager 04A9                           _strKey_Released 0055  
                        __end_of_TMR1_ISR 039D                           __end_of_dpowers 046B  
                                   _line1 0067                                     _line2 0069  
                          _WDT_Initialize 04B4                                     _rcreg 007C  
                                   _putch 0000                                     main@x 0063  
                 __end_of_TMR1_Initialize 03B5                            __CFG_BOREN$OFF 0000  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                           __initialization 003E  
                            __end_of_main 00E5                        __size_of_Check_key 0025  
                               ??_ADC_ISR 0079               ?_INTERRUPT_InterruptManager 0070  
                                  ??_main 0062                             LCDByte@isdata 0057  
                               ??_LCDByte 0058                                 ??_LCDInit 005E  
                          __CFG_PLLEN$OFF 0000                    __end_of_WDT_Initialize 04B8  
                                  _ADCON0 009D                                    _ADCON1 009E  
                                  _ADRESH 009C                                    _ADRESL 009B  
                                  _APFCON 011D                                    _ANSELA 018C  
                                  _ANSELB 018D                                    _ANSELD 018F  
                                  _ANSELE 0190                                    _T1GCON 0019  
                                  i1l2171 0172                                    i1l2165 0167  
                                  i1l2159 015C                                    i1l2177 017F  
                                  i1l2355 018F                                    i1l2373 01B5  
                                  i1l2383 01C8                                    i1l2367 01AB  
                                  i1l2385 01C9                                    i1l2379 01BF  
                                  u125_25 034F                                    _OSCCON 0099  
                                  _SPBRGH 019C                                    _SPBRGL 019B  
                                  _WDTCON 0097                            __CFG_PWRTE$OFF 0000  
                          _LCDWriteString 0219      __end_of_TMR1_DefaultInterruptHandler 04C2  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 04C1  
              __size_of_Check_KeyReleased 0021                   __end_of_TMR1_StartTimer 04BE  
                          __CFG_STVREN$ON 0000                                    _flag_A 003E  
                                  _flag_B 003C                                    _flag_G 0040  
                                  _flag_N 0042                       _EUSART_Transmit_ISR 032E  
                         ?_WDT_Initialize 0070  TMR1_SetInterruptHandler@InterruptHandler 0057  
                       __end_of_Check_key 02EA                      ?_EUSART_Transmit_ISR 0070  
                   __end_of_TMR1_CallBack 018A                          ?_TMR1_Initialize 0070  
                       _SYSTEM_Initialize 03EE                   __end_of__initialization 0071  
                      ?_SYSTEM_Initialize 0070                    __end_of_LCDWriteString 025A  
                               LCDByte@hn 005A                                 LCDByte@ln 005B  
            __size_of_ADC_StartConversion 0003                            __pcstackCOMMON 0070  
                            __pidataBANK0 0491                              __pidataBANK1 029B  
                     ??_SYSTEM_Initialize 0059                                 ?_TMR1_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                              _flag_1000_ms 0032  
                            _flag_4000_ms 0030                   _ADC_GetConversionResult 034B  
                          _OPTION_REGbits 0095                 __end_of_SYSTEM_Initialize 0400  
                   ??_EUSART_Transmit_ISR 0070                             sms_text@F3743 0047  
                           sms_text@F3745 0046                 __size_of_Check_KeyPressed 0057  
                              __pbssBANK0 0020                                __pbssBANK1 00CA  
                              __pbssBANK2 0120                           __CFG_VCAPEN$OFF 0000  
             __size_of_EUSART_Receive_ISR 0049                           ?_LCDWriteString 005E  
                              _flag_10_ms 0038                                __pmaintext 0075  
                __end_of_Keyboard_Manager 04AF                          ?_TMR1_StartTimer 0070  
                              ??_TMR1_ISR 0070                                __pintentry 0004  
                       sms_text@sms_index 00DF                                   _ADC_ISR 0475  
                                 _BAUDCON 019F                   __size_of_ADC_Initialize 0009  
                       Check_key@btn_mask 0057                             _eusartRxCount 0050  
                                 _LCDByte 025A                                   _LCDInit 01D3  
                                 _OSCTUNE 0098                                   _T_byte1 004E  
                                 _T_byte2 004D                 ??_ADC_GetConversionResult 0072  
                                 __ptext1 03EE                                   __ptext2 04B4  
                                 __ptext3 039D                                   __ptext4 04BB  
                                 __ptext5 047F                                   __ptext6 02EA  
                                 __ptext7 04AF                                   __ptext8 0367  
                                 __ptext9 0488            ??_TMR1_DefaultInterruptHandler 0070  
                               _T1CONbits 0018                                   _dpowers 0461  
                   _OSCILLATOR_Initialize 04AF         __size_of_TMR1_SetInterruptHandler 0009  
                ??_PIN_MANAGER_Initialize 0057                 ?_TMR1_SetInterruptHandler 0057  
              __size_of_SYSTEM_Initialize 0012                                   clrloop0 04A4  
                    end_of_initialization 0071                            comparare@F3760 0120  
                          comparare@F3755 00A0                                   init_ram 049D  
                                 initloop 049E                         _EUSART_Initialize 0367  
                      ?_EUSART_Initialize 0070                                 _RCSTAbits 019D  
                     ??_EUSART_Initialize 0057                          ??_WDT_Initialize 0057  
                               _PORTDbits 000F                         LCDWriteString@msg 005E  
                               _TRISCbits 008E                                 _TRISDbits 008F  
                     _ADC_StartConversion 04BE                          _Check_KeyPressed 00E5  
               __end_of_EUSART_Initialize 0382                                 _Check_key 02C5  
                            _count_100_ms 002E                              _count_500_ms 002C  
                    ?_ADC_StartConversion 0070                        turn_egs@step_index 007A  
                       __size_of_TMR1_ISR 001B                            _ADC_Initialize 0488  
                  ?_OSCILLATOR_Initialize 0070                       start_initialization 003E  
         __size_of_PIN_MANAGER_Initialize 0023                          ??_LCDWriteString 0060  
                       int_gsm@sms1_index 0020                                ?_Check_key 0070  
                   ??_ADC_StartConversion 0057                  __size_of_TMR1_Initialize 0018  
                       ?_Keyboard_Manager 0070                    __end_of_ADC_Initialize 0491  
                             __pdataBANK0 0065                               __pdataBANK1 00A0  
                      ??_Keyboard_Manager 0058                                  ?_ADC_ISR 0070  
                  __size_of_TMR1_CallBack 004E                                  ?_LCDByte 0057  
                                ?_LCDInit 0070               __end_of_EUSART_Transmit_ISR 034B  
                   TMR1_ISR@CountCallBack 0026                               __pbssCOMMON 007A  
                                LCDByte@c 005C                                 ___latbits 0002  
                           __pcstackBANK0 0057                               _flag_100_ms 0036  
                             _flag_500_ms 0034                __end_of_EUSART_Receive_ISR 01D3  
              __size_of_EUSART_Initialize 001B                          LCDWriteInt@F3737 00DA  
                               __pnvBANK0 006B                                 __pnvBANK1 00E1  
                  _PIN_MANAGER_Initialize 02EA                                 _flag_1_ms 003A  
        __end_of_TMR1_SetInterruptHandler 0488                           ?_ADC_Initialize 0070  
                            _eusartRxHead 0052                              _eusartTxHead 0054  
                            _eusartRxTail 0051                              _eusartTxTail 0053  
            ??_INTERRUPT_InterruptManager 0079                   _eusartTxBufferRemaining 006F  
                __size_of_TMR1_StartTimer 0003                            _eusartRxBuffer 00CA  
                           _TMR1_CallBack 013C                            _eusartTxBuffer 00D2  
                                _LATCbits 010E                               ??_Check_key 0057  
                               clear_ram0 04A3                                  _PIE1bits 0091  
     __size_of_INTERRUPT_InterruptManager 0038                                  _PIR1bits 0011  
                                _TMR1_ISR 0382                  __end_of_Check_KeyPressed 013C  
                        LCDWriteString@cc 0061                                 _umiditate 0022  
                       ??_TMR1_Initialize 0059                          __size_of_ADC_ISR 000A  
                              _ADCON0bits 009D                                  _RH_byte1 007B  
                                _RH_byte2 004C                             _rez_conversie 0044  
                        __size_of_LCDByte 0041                          __size_of_LCDInit 0046  
                          ?_TMR1_CallBack 0070                             _flag_directie 006B  
                ?_ADC_GetConversionResult 0070                   ??_OSCILLATOR_Initialize 0057  
                _TMR1_SetInterruptHandler 047F                       main@incubator_state 0064  
                   _TMR1_InterruptHandler 00E1                                  __ptext10 0219  
                                __ptext11 01D3                                  __ptext20 013C  
                                __ptext12 025A                                  __ptext21 04C1  
                                __ptext13 04A9                                _T1GCONbits 0019  
                                __ptext22 032E                                  __ptext14 030D  
                                __ptext23 018A                                  __ptext15 00E5  
                                __ptext24 0475                                  __ptext16 02C5  
                                __ptext25 034B                                  __ptext17 04BE  
                                __ptext19 0382                         ??_TMR1_StartTimer 0057  
                    Check_key@btn_pressed 0058                             __size_of_main 0070  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 003C  
              _INTERRUPT_InterruptManager 0004                                _INTCONbits 000B  
               __size_of_Keyboard_Manager 0006                            __pstringtext10 0453  
                          __pstringtext11 046B                            __pstringtext12 0497  
                          __pstringtext13 04B8                            __pstringtext14 0000  
                         ??_TMR1_CallBack 0070                   __size_of_WDT_Initialize 0004  
                                intlevel1 0000               __end_of_ADC_StartConversion 04C1  
                 ?_PIN_MANAGER_Initialize 0070           __end_of_ADC_GetConversionResult 0367  
                       __CFG_CLKOUTEN$OFF 0000                          ??_ADC_Initialize 0057  
                      _EUSART_Receive_ISR 018A                             __pstringtext1 0461  
                           __pstringtext2 03B5                             __pstringtext3 03CA  
                           __pstringtext4 03DC                             __pstringtext5 0400  
                           __pstringtext6 0411                             __pstringtext7 0422  
                           __pstringtext8 0433                             __pstringtext9 0444  
                     ?_EUSART_Receive_ISR 0070              __size_of_EUSART_Transmit_ISR 001D  
          __end_of_PIN_MANAGER_Initialize 030D                      ??_EUSART_Receive_ISR 0070  
                         _TMR1_Initialize 039D                   __size_of_LCDWriteString 0041  
