

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Mon Sep 25 21:28:36 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F1937
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	idataBANK1,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	dabs	1,0x2A0,80
    25                           	dabs	1,0x25C,20
    26                           	dabs	1,0x217C,0,_rcbuf
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 1.42
    30                           ; Generated 13/04/2017 GMT
    31                           ; 
    32                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F1937 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  0110                     	;# 
   118  0111                     	;# 
   119  0112                     	;# 
   120  0113                     	;# 
   121  0114                     	;# 
   122  0115                     	;# 
   123  0116                     	;# 
   124  0117                     	;# 
   125  0118                     	;# 
   126  0119                     	;# 
   127  011A                     	;# 
   128  011B                     	;# 
   129  011D                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  018F                     	;# 
   133  0190                     	;# 
   134  0191                     	;# 
   135  0191                     	;# 
   136  0192                     	;# 
   137  0193                     	;# 
   138  0193                     	;# 
   139  0193                     	;# 
   140  0194                     	;# 
   141  0195                     	;# 
   142  0196                     	;# 
   143  0199                     	;# 
   144  019A                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019C                     	;# 
   150  019C                     	;# 
   151  019D                     	;# 
   152  019E                     	;# 
   153  019F                     	;# 
   154  020D                     	;# 
   155  0210                     	;# 
   156  0211                     	;# 
   157  0212                     	;# 
   158  0213                     	;# 
   159  0214                     	;# 
   160  0215                     	;# 
   161  0215                     	;# 
   162  0216                     	;# 
   163  0217                     	;# 
   164  0291                     	;# 
   165  0291                     	;# 
   166  0292                     	;# 
   167  0293                     	;# 
   168  0294                     	;# 
   169  0295                     	;# 
   170  0295                     	;# 
   171  0296                     	;# 
   172  0298                     	;# 
   173  0298                     	;# 
   174  0299                     	;# 
   175  029A                     	;# 
   176  029B                     	;# 
   177  029C                     	;# 
   178  029C                     	;# 
   179  029D                     	;# 
   180  029E                     	;# 
   181  029F                     	;# 
   182  0311                     	;# 
   183  0311                     	;# 
   184  0312                     	;# 
   185  0313                     	;# 
   186  0314                     	;# 
   187  0315                     	;# 
   188  0315                     	;# 
   189  0316                     	;# 
   190  0318                     	;# 
   191  0318                     	;# 
   192  0319                     	;# 
   193  031A                     	;# 
   194  031C                     	;# 
   195  031C                     	;# 
   196  031D                     	;# 
   197  031E                     	;# 
   198  0394                     	;# 
   199  0395                     	;# 
   200  0396                     	;# 
   201  0415                     	;# 
   202  0416                     	;# 
   203  0417                     	;# 
   204  041C                     	;# 
   205  041D                     	;# 
   206  041E                     	;# 
   207  0791                     	;# 
   208  0792                     	;# 
   209  0793                     	;# 
   210  0794                     	;# 
   211  0795                     	;# 
   212  0798                     	;# 
   213  0799                     	;# 
   214  079A                     	;# 
   215  07A0                     	;# 
   216  07A1                     	;# 
   217  07A2                     	;# 
   218  07A3                     	;# 
   219  07A4                     	;# 
   220  07A5                     	;# 
   221  07A6                     	;# 
   222  07A7                     	;# 
   223  07A8                     	;# 
   224  07A9                     	;# 
   225  07AA                     	;# 
   226  07AB                     	;# 
   227  0FE4                     	;# 
   228  0FE5                     	;# 
   229  0FE6                     	;# 
   230  0FE7                     	;# 
   231  0FE8                     	;# 
   232  0FE9                     	;# 
   233  0FEA                     	;# 
   234  0FEB                     	;# 
   235  0FED                     	;# 
   236  0FEE                     	;# 
   237  0FEF                     	;_rcbuf
   238                           
   239                           	psect	idataCOMMON
   240  01C0                     __pidataCOMMON:	
   241                           
   242                           ;initializer for _CMGR
   243  01C0  34AF               	retlw	low (STR_1| (0+32768))
   244                           
   245                           ;initializer for _terminator
   246  01C1  341A               	retlw	26
   247                           
   248                           	psect	idataBANK0
   249  00EF                     __pidataBANK0:	
   250                           
   251                           ;initializer for _char_mode
   252  00EF  3441               	retlw	65
   253  00F0  3454               	retlw	84
   254  00F1  342B               	retlw	43
   255  00F2  3443               	retlw	67
   256  00F3  3453               	retlw	83
   257  00F4  3443               	retlw	67
   258  00F5  3453               	retlw	83
   259  00F6  343D               	retlw	61
   260  00F7  3422               	retlw	34
   261  00F8  3447               	retlw	71
   262  00F9  3453               	retlw	83
   263  00FA  344D               	retlw	77
   264  00FB  3422               	retlw	34
   265  00FC  3400               	retlw	0
   266                           
   267                           ;initializer for _receive1
   268  00FD  3441               	retlw	65
   269  00FE  3454               	retlw	84
   270  00FF  342B               	retlw	43
   271  0100  3443               	retlw	67
   272  0101  344D               	retlw	77
   273  0102  3447               	retlw	71
   274  0103  344C               	retlw	76
   275  0104  343D               	retlw	61
   276  0105  3422               	retlw	34
   277  0106  3441               	retlw	65
   278  0107  344C               	retlw	76
   279  0108  344C               	retlw	76
   280  0109  3422               	retlw	34
   281  010A  3400               	retlw	0
   282                           
   283                           ;initializer for _noecho
   284  010B  3441               	retlw	65
   285  010C  3454               	retlw	84
   286  010D  3445               	retlw	69
   287  010E  3430               	retlw	48
   288  010F  3400               	retlw	0
   289                           
   290                           ;initializer for _mode_pin
   291  0110  3441               	retlw	65
   292  0111  3454               	retlw	84
   293  0112  342B               	retlw	43
   294  0113  3443               	retlw	67
   295  0114  3450               	retlw	80
   296  0115  3449               	retlw	73
   297  0116  344E               	retlw	78
   298  0117  343D               	retlw	61
   299  0118  3422               	retlw	34
   300  0119  3431               	retlw	49
   301  011A  3432               	retlw	50
   302  011B  3433               	retlw	51
   303  011C  3434               	retlw	52
   304  011D  3422               	retlw	34
   305  011E  3400               	retlw	0
   306                           
   307                           ;initializer for _mode_text
   308  011F  3441               	retlw	65
   309  0120  3454               	retlw	84
   310  0121  342B               	retlw	43
   311  0122  3443               	retlw	67
   312  0123  344D               	retlw	77
   313  0124  3447               	retlw	71
   314  0125  3446               	retlw	70
   315  0126  343D               	retlw	61
   316  0127  3431               	retlw	49
   317  0128  3400               	retlw	0
   318                           
   319                           ;initializer for _mesg
   320  0129  3464               	retlw	100
   321  012A  3472               	retlw	114
   322  012B  3461               	retlw	97
   323  012C  3467               	retlw	103
   324  012D  3475               	retlw	117
   325  012E  346C               	retlw	108
   326  012F  3465               	retlw	101
   327  0130  3420               	retlw	32
   328  0131  3400               	retlw	0
   329                           
   330                           ;initializer for _AT
   331  0132  3441               	retlw	65
   332  0133  3454               	retlw	84
   333  0134  3400               	retlw	0
   334                           
   335                           	psect	idataBANK1
   336  0135                     __pidataBANK1:	
   337                           
   338                           ;initializer for _mobile_no
   339  0135  3441               	retlw	65
   340  0136  3454               	retlw	84
   341  0137  342B               	retlw	43
   342  0138  3443               	retlw	67
   343  0139  344D               	retlw	77
   344  013A  3447               	retlw	71
   345  013B  3453               	retlw	83
   346  013C  343D               	retlw	61
   347  013D  3422               	retlw	34
   348  013E  3430               	retlw	48
   349  013F  3437               	retlw	55
   350  0140  3435               	retlw	53
   351  0141  3437               	retlw	55
   352  0142  3434               	retlw	52
   353  0143  3439               	retlw	57
   354  0144  3434               	retlw	52
   355  0145  3438               	retlw	56
   356  0146  3432               	retlw	50
   357  0147  3433               	retlw	51
   358  0148  3422               	retlw	34
   359  0149  3400               	retlw	0
   360                           
   361                           ;initializer for _param
   362  014A  3441               	retlw	65
   363  014B  3454               	retlw	84
   364  014C  342B               	retlw	43
   365  014D  3443               	retlw	67
   366  014E  3453               	retlw	83
   367  014F  344D               	retlw	77
   368  0150  3450               	retlw	80
   369  0151  343D               	retlw	61
   370  0152  3431               	retlw	49
   371  0153  3437               	retlw	55
   372  0154  342C               	retlw	44
   373  0155  3431               	retlw	49
   374  0156  3436               	retlw	54
   375  0157  3437               	retlw	55
   376  0158  342C               	retlw	44
   377  0159  3430               	retlw	48
   378  015A  342C               	retlw	44
   379  015B  3430               	retlw	48
   380  015C  3400               	retlw	0
   381                           
   382                           ;initializer for _receive
   383  015D  3441               	retlw	65
   384  015E  3454               	retlw	84
   385  015F  342B               	retlw	43
   386  0160  3443               	retlw	67
   387  0161  344E               	retlw	78
   388  0162  344D               	retlw	77
   389  0163  3449               	retlw	73
   390  0164  343D               	retlw	61
   391  0165  3432               	retlw	50
   392  0166  342C               	retlw	44
   393  0167  3432               	retlw	50
   394  0168  342C               	retlw	44
   395  0169  3430               	retlw	48
   396  016A  342C               	retlw	44
   397  016B  3430               	retlw	48
   398  016C  342C               	retlw	44
   399  016D  3430               	retlw	48
   400  016E  3400               	retlw	0
   401  0011                     _PIR1bits	set	17
   402  000B                     _INTCONbits	set	11
   403  008D                     _TRISB	set	141
   404  0091                     _PIE1bits	set	145
   405  008E                     _TRISCbits	set	142
   406  010D                     _LATB	set	269
   407  0199                     _RCREG	set	409
   408  018D                     _ANSELB	set	397
   409  019A                     _TXREG	set	410
   410  019B                     _SPBRG	set	411
   411  018D                     _ANSELBbits	set	397
   412  019D                     _RCSTAbits	set	413
   413  019E                     _TXSTAbits	set	414
   414                           
   415                           	psect	stringtext1
   416  01AF                     __pstringtext1:	
   417  01AF                     STR_1:	
   418  01AF  3441               	retlw	65	;'A'
   419  01B0  3454               	retlw	84	;'T'
   420  01B1  342B               	retlw	43	;'+'
   421  01B2  3443               	retlw	67	;'C'
   422  01B3  344D               	retlw	77	;'M'
   423  01B4  3447               	retlw	71	;'G'
   424  01B5  3452               	retlw	82	;'R'
   425  01B6  343D               	retlw	61	;'='
   426  01B7  3434               	retlw	52	;'4'
   427  01B8  3400               	retlw	0
   428                           
   429                           	psect	stringtext2
   430  0000                     __pstringtext2:	
   431                           
   432                           ; #config settings
   433  0000                     
   434                           	psect	cinit
   435  002B                     start_initialization:	
   436  002B                     __initialization:		;BIGRAM
   437                           
   438                           ; Initialize objects allocated to COMMON
   439  002B  3181  21C0  3180   	fcall	__pidataCOMMON	;fetch initializer
   440  002E  00F9               	movwf	__pdataCOMMON& (0+127)
   441  002F  3181  21C1  3180   	fcall	__pidataCOMMON+1	;fetch initializer
   442  0032  00FA               	movwf	(__pdataCOMMON+1)& (0+127)
   443                           
   444                           ; Initialize objects allocated to BANK0
   445  0033  30EF               	movlw	low __pidataBANK0
   446  0034  0084               	movwf	4
   447  0035  3080               	movlw	(high __pidataBANK0)| (0+128)
   448  0036  0085               	movwf	5
   449  0037  3020               	movlw	low __pdataBANK0
   450  0038  0086               	movwf	6
   451  0039  3000               	movlw	high __pdataBANK0
   452  003A  0087               	movwf	7
   453  003B  3000               	movlw	0
   454  003C  00FF               	movwf	btemp+1
   455  003D  3046               	movlw	70
   456  003E  3181  2197  3180   	fcall	init_ram
   457                           
   458                           ; Initialize objects allocated to BANK1
   459  0041  3035               	movlw	low __pidataBANK1
   460  0042  0084               	movwf	4
   461  0043  3081               	movlw	(high __pidataBANK1)| (0+128)
   462  0044  0085               	movwf	5
   463  0045  30A0               	movlw	low __pdataBANK1
   464  0046  0086               	movwf	6
   465  0047  3000               	movlw	high __pdataBANK1
   466  0048  0087               	movwf	7
   467  0049  3000               	movlw	0
   468  004A  00FF               	movwf	btemp+1
   469  004B  303A               	movlw	58
   470  004C  3181  2197  3180   	fcall	init_ram
   471                           
   472                           ; Clear objects allocated to BIGRAM
   473  004F  307C               	movlw	low (0+8572)
   474  0050  0084               	movwf	4
   475  0051  3021               	movlw	high (0+8572)
   476  0052  0085               	movwf	5
   477  0053  3064               	movlw	100
   478  0054  00FE               	movwf	btemp
   479  0055  3000               	movlw	0
   480  0056  00FF               	movwf	btemp+1
   481  0057  3181  21A3  3180   	fcall	clear_ram0
   482                           
   483                           ; Clear objects allocated to COMMON
   484  005A  01F6               	clrf	__pbssCOMMON& (0+127)
   485  005B  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   486  005C  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   487                           
   488                           ; Clear objects allocated to BANK0
   489  005D  3066               	movlw	low __pbssBANK0
   490  005E  0084               	movwf	4
   491  005F  3000               	movlw	high __pbssBANK0
   492  0060  0085               	movwf	5
   493  0061  300A               	movlw	10
   494  0062  00FE               	movwf	btemp
   495  0063  3000               	movlw	0
   496  0064  00FF               	movwf	btemp+1
   497  0065  3181  21A3         	fcall	clear_ram0
   498  0067                     end_of_initialization:	
   499                           ;End of C runtime variable initialization code
   500                           
   501  0067                     __end_of__initialization:	
   502  0067  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   503  0068  0020               	movlb	0
   504  0069  3180  286B         	ljmp	_main	;jump to C main() function
   505                           
   506                           	psect	bssCOMMON
   507  0076                     __pbssCOMMON:	
   508  0076                     _AT_flag:	
   509  0076                     	ds	1
   510  0077                     _rcindex:	
   511  0077                     	ds	1
   512  0078                     _t:	
   513  0078                     	ds	1
   514                           
   515                           	psect	dataCOMMON
   516  0079                     __pdataCOMMON:	
   517  0079                     _CMGR:	
   518  0079                     	ds	1
   519  007A                     _terminator:	
   520  007A                     	ds	1
   521                           
   522                           	psect	bssBANK0
   523  0066                     __pbssBANK0:	
   524  0066                     _ok:	
   525  0066                     	ds	10
   526                           
   527                           	psect	dataBANK0
   528  0020                     __pdataBANK0:	
   529  0020                     _char_mode:	
   530  0020                     	ds	14
   531  002E                     _receive1:	
   532  002E                     	ds	14
   533  003C                     _noecho:	
   534  003C                     	ds	5
   535  0041                     _mode_pin:	
   536  0041                     	ds	15
   537  0050                     _mode_text:	
   538  0050                     	ds	10
   539  005A                     _mesg:	
   540  005A                     	ds	9
   541  0063                     _AT:	
   542  0063                     	ds	3
   543                           
   544                           	psect	dataBANK1
   545  00A0                     __pdataBANK1:	
   546  00A0                     _mobile_no:	
   547  00A0                     	ds	21
   548  00B5                     _param:	
   549  00B5                     	ds	19
   550  00C8                     _receive:	
   551  00C8                     	ds	18
   552                           
   553                           	psect	inittext
   554  0197                     init_ram:	
   555  0197  00FE               	movwf	126
   556  0198                     initloop:	
   557  0198  0012               	moviw fsr0++
   558  0199  001E               	movwi fsr1++
   559  019A  3001               	movlw	1
   560  019B  02FE               	subwf	126,f
   561  019C  3000               	movlw	0
   562  019D  3BFF               	subwfb	127,f
   563  019E  087F               	movf	127,w
   564  019F  047E               	iorwf	126,w
   565  01A0  1903               	btfsc	3,2
   566  01A1  3400               	retlw	0
   567  01A2  2998               	goto	initloop
   568                           
   569                           	psect	clrtext
   570  01A3                     clear_ram0:	
   571                           ;	Called with FSR0 containing the base address, and
   572                           ;	btemp/btemp+1 has the size to clear
   573                           
   574  01A3  0064               	clrwdt	;clear the watchdog before getting into this loop
   575  01A4                     clrloop0:	
   576  01A4  0180               	clrf	0	;clear RAM location pointed to by FSR
   577  01A5  3101               	addfsr 0,1
   578  01A6  3001               	movlw	1
   579  01A7  02FE               	subwf	126,f
   580  01A8  3000               	movlw	0
   581  01A9  3BFF               	subwfb	127,f
   582  01AA  087F               	movf	127,w
   583  01AB  047E               	iorwf	126,w
   584  01AC  1903               	btfsc	3,2
   585  01AD  3400               	retlw	0	;all done for this memory range, return
   586  01AE  29A4               	goto	clrloop0	;have we reached the end yet?
   587                           
   588                           	psect	cstackBANK1
   589  00DA                     __pcstackBANK1:	
   590  00DA                     ??_main:	
   591                           
   592                           ; 1 bytes @ 0x0
   593  00DA                     	ds	2
   594                           
   595                           	psect	cstackCOMMON
   596  0070                     __pcstackCOMMON:	
   597  0070                     ?_USART_init:	
   598  0070                     ?_USART_putc:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_ISR:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ??_ISR:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_main:	
   608                           ; 1 bytes @ 0x0
   609                           
   610                           
   611                           ; 2 bytes @ 0x0
   612  0070                     	ds	3
   613  0073                     ??_USART_init:	
   614  0073                     ??_USART_putc:	
   615                           ; 1 bytes @ 0x3
   616                           
   617  0073                     USART_putc@c:	
   618                           ; 1 bytes @ 0x3
   619                           
   620                           
   621                           ; 1 bytes @ 0x3
   622  0073                     	ds	1
   623  0074                     ?_USART_puts:	
   624  0074                     USART_puts@s:	
   625                           ; 1 bytes @ 0x4
   626                           
   627                           
   628                           ; 2 bytes @ 0x4
   629  0074                     	ds	2
   630  0076                     ??_USART_puts:	
   631                           
   632                           	psect	maintext
   633  006B                     __pmaintext:	
   634                           ; 1 bytes @ 0x6
   635 ;;
   636 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   637 ;;
   638 ;; *************** function _main *****************
   639 ;; Defined at:
   640 ;;		line 108 in file "main.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;		None
   643 ;; Auto vars:     Size  Location     Type
   644 ;;		None
   645 ;; Return value:  Size  Location     Type
   646 ;;                  2   89[None  ] int 
   647 ;; Registers used:
   648 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   649 ;; Tracked objects:
   650 ;;		On entry : B1F/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   654 ;;      Params:         0       0       0       0       0       0       0
   655 ;;      Locals:         0       0       0       0       0       0       0
   656 ;;      Temps:          0       0       2       0       0       0       0
   657 ;;      Totals:         0       0       2       0       0       0       0
   658 ;;Total ram usage:        2 bytes
   659 ;; Hardware stack levels required when called:    3
   660 ;; This function calls:
   661 ;;		_USART_init
   662 ;;		_USART_puts
   663 ;; This function is called by:
   664 ;;		Startup code after reset
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           
   669                           ;psect for function _main
   670  006B                     _main:	
   671                           
   672                           ;main.c: 112: USART_init();
   673                           
   674                           ;incstack = 0
   675                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   676  006B  3181  2187  3180   	fcall	_USART_init
   677                           
   678                           ;main.c: 113: INTCONbits.PEIE = 1;
   679  006E  170B               	bsf	11,6	;volatile
   680                           
   681                           ;main.c: 114: INTCONbits.GIE = 1;
   682  006F  178B               	bsf	11,7	;volatile
   683                           
   684                           ;main.c: 115: TRISB=0x00;
   685  0070  0021               	movlb	1	; select bank1
   686  0071  018D               	clrf	13	;volatile
   687                           
   688                           ;main.c: 118: ANSELB=0x00;
   689  0072  0023               	movlb	3	; select bank3
   690  0073  018D               	clrf	13	;volatile
   691                           
   692                           ;main.c: 119: LATB=0x00;
   693  0074  0022               	movlb	2	; select bank2
   694  0075  018D               	clrf	13	;volatile
   695                           
   696                           ;main.c: 120: _delay((unsigned long)((1000)*(18432000/4000.0)));
   697  0076  3018               	movlw	24
   698  0077  0021               	movlb	1	; select bank1
   699  0078  00DB               	movwf	(??_main^(0+128)+1)
   700  0079  3061               	movlw	97
   701  007A  00DA               	movwf	??_main^(0+128)
   702  007B  3058               	movlw	88
   703  007C                     u87:	
   704  007C  0B89               	decfsz	9,f
   705  007D  287C               	goto	u87
   706  007E  0BDA               	decfsz	??_main^(0+128),f
   707  007F  287C               	goto	u87
   708  0080  0BDB               	decfsz	(??_main^(0+128)+1),f
   709  0081  287C               	goto	u87
   710  0082  0000               	nop
   711                           
   712                           ;main.c: 121: USART_puts(AT);
   713  0083  3063               	movlw	low _AT
   714  0084  00F4               	movwf	USART_puts@s
   715  0085  3000               	movlw	high _AT
   716  0086  00F5               	movwf	USART_puts@s+1
   717  0087  3181  216F  3180   	fcall	_USART_puts
   718                           
   719                           ;main.c: 123: _delay((unsigned long)((3000)*(18432000/4000.0)));
   720  008A  3047               	movlw	71
   721  008B  0021               	movlb	1	; select bank1
   722  008C  00DB               	movwf	(??_main^(0+128)+1)
   723  008D  3022               	movlw	34
   724  008E  00DA               	movwf	??_main^(0+128)
   725  008F  300D               	movlw	13
   726  0090                     u97:	
   727  0090  0B89               	decfsz	9,f
   728  0091  2890               	goto	u97
   729  0092  0BDA               	decfsz	??_main^(0+128),f
   730  0093  2890               	goto	u97
   731  0094  0BDB               	decfsz	(??_main^(0+128)+1),f
   732  0095  2890               	goto	u97
   733  0096  3200               	nop2
   734                           
   735                           ;main.c: 124: USART_puts(mode_pin);
   736  0097  3041               	movlw	low _mode_pin
   737  0098  00F4               	movwf	USART_puts@s
   738  0099  3000               	movlw	high _mode_pin
   739  009A  00F5               	movwf	USART_puts@s+1
   740  009B  3181  216F  3180   	fcall	_USART_puts
   741                           
   742                           ;main.c: 126: _delay((unsigned long)((3000)*(18432000/4000.0)));
   743  009E  3047               	movlw	71
   744  009F  0021               	movlb	1	; select bank1
   745  00A0  00DB               	movwf	(??_main^(0+128)+1)
   746  00A1  3022               	movlw	34
   747  00A2  00DA               	movwf	??_main^(0+128)
   748  00A3  300D               	movlw	13
   749  00A4                     u107:	
   750  00A4  0B89               	decfsz	9,f
   751  00A5  28A4               	goto	u107
   752  00A6  0BDA               	decfsz	??_main^(0+128),f
   753  00A7  28A4               	goto	u107
   754  00A8  0BDB               	decfsz	(??_main^(0+128)+1),f
   755  00A9  28A4               	goto	u107
   756  00AA  3200               	nop2
   757                           
   758                           ;main.c: 128: USART_puts(mode_text);
   759  00AB  3050               	movlw	low _mode_text
   760  00AC  00F4               	movwf	USART_puts@s
   761  00AD  3000               	movlw	high _mode_text
   762  00AE  00F5               	movwf	USART_puts@s+1
   763  00AF  3181  216F  3180   	fcall	_USART_puts
   764                           
   765                           ;main.c: 130: _delay((unsigned long)((2000)*(18432000/4000.0)));
   766  00B2  302F               	movlw	47
   767  00B3  0021               	movlb	1	; select bank1
   768  00B4  00DB               	movwf	(??_main^(0+128)+1)
   769  00B5  30C1               	movlw	193
   770  00B6  00DA               	movwf	??_main^(0+128)
   771  00B7  30B3               	movlw	179
   772  00B8                     u117:	
   773  00B8  0B89               	decfsz	9,f
   774  00B9  28B8               	goto	u117
   775  00BA  0BDA               	decfsz	??_main^(0+128),f
   776  00BB  28B8               	goto	u117
   777  00BC  0BDB               	decfsz	(??_main^(0+128)+1),f
   778  00BD  28B8               	goto	u117
   779  00BE  3200               	nop2
   780                           
   781                           ;main.c: 131: USART_puts(CMGR);
   782  00BF  0879               	movf	_CMGR,w
   783  00C0  0021               	movlb	1	; select bank1
   784  00C1  00DA               	movwf	??_main^(0+128)
   785  00C2  01DB               	clrf	(??_main^(0+128)+1)
   786  00C3  085A               	movf	??_main^(0+128),w
   787  00C4  00F4               	movwf	USART_puts@s
   788  00C5  085B               	movf	(??_main+1)^(0+128),w
   789  00C6  00F5               	movwf	USART_puts@s+1
   790  00C7  3181  216F  3180   	fcall	_USART_puts
   791                           
   792                           ;main.c: 133: _delay((unsigned long)((3000)*(18432000/4000.0)));
   793  00CA  3047               	movlw	71
   794  00CB  0021               	movlb	1	; select bank1
   795  00CC  00DB               	movwf	(??_main^(0+128)+1)
   796  00CD  3022               	movlw	34
   797  00CE  00DA               	movwf	??_main^(0+128)
   798  00CF  300D               	movlw	13
   799  00D0                     u127:	
   800  00D0  0B89               	decfsz	9,f
   801  00D1  28D0               	goto	u127
   802  00D2  0BDA               	decfsz	??_main^(0+128),f
   803  00D3  28D0               	goto	u127
   804  00D4  0BDB               	decfsz	(??_main^(0+128)+1),f
   805  00D5  28D0               	goto	u127
   806  00D6  3200               	nop2
   807                           
   808                           ;main.c: 134: USART_puts(receive);
   809  00D7  30C8               	movlw	low _receive
   810  00D8  00F4               	movwf	USART_puts@s
   811  00D9  3000               	movlw	high _receive
   812  00DA                     L1:	
   813  00DA  00F5               	movwf	USART_puts@s+1
   814  00DB  3181  216F  3180   	fcall	_USART_puts
   815                           
   816                           ;main.c: 138: {
   817                           ;main.c: 139: _delay((unsigned long)((3000)*(18432000/4000.0)));
   818                           
   819                           ;main.c: 137: while(1)
   820  00DE  3047               	movlw	71
   821  00DF  0021               	movlb	1	; select bank1
   822  00E0  00DB               	movwf	(??_main^(0+128)+1)
   823  00E1  3022               	movlw	34
   824  00E2  00DA               	movwf	??_main^(0+128)
   825  00E3  300D               	movlw	13
   826  00E4                     u137:	
   827  00E4  0B89               	decfsz	9,f
   828  00E5  28E4               	goto	u137
   829  00E6  0BDA               	decfsz	??_main^(0+128),f
   830  00E7  28E4               	goto	u137
   831  00E8  0BDB               	decfsz	(??_main^(0+128)+1),f
   832  00E9  28E4               	goto	u137
   833  00EA  3200               	nop2
   834                           
   835                           ;main.c: 140: USART_puts(rcbuf);
   836  00EB  307C               	movlw	124
   837  00EC  00F4               	movwf	USART_puts@s
   838  00ED  3021               	movlw	33
   839  00EE  28DA               	goto	L1
   840  00EF                     __end_of_main:	
   841                           
   842                           	psect	text1
   843  016F                     __ptext1:	
   844 ;; *************** function _USART_puts *****************
   845 ;; Defined at:
   846 ;;		line 92 in file "main.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;  s               2    4[COMMON] PTR unsigned char 
   849 ;;		 -> rcbuf(100), receive(18), RAM(4096), mode_text(10), 
   850 ;;		 -> mode_pin(15), AT(3), mesg(9), 
   851 ;; Auto vars:     Size  Location     Type
   852 ;;		None
   853 ;; Return value:  Size  Location     Type
   854 ;;                  1    wreg      void 
   855 ;; Registers used:
   856 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   862 ;;      Params:         2       0       0       0       0       0       0
   863 ;;      Locals:         0       0       0       0       0       0       0
   864 ;;      Temps:          0       0       0       0       0       0       0
   865 ;;      Totals:         2       0       0       0       0       0       0
   866 ;;Total ram usage:        2 bytes
   867 ;; Hardware stack levels used:    1
   868 ;; Hardware stack levels required when called:    2
   869 ;; This function calls:
   870 ;;		_USART_putc
   871 ;; This function is called by:
   872 ;;		_main
   873 ;;		_send_sms
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           
   878                           ;psect for function _USART_puts
   879  016F                     _USART_puts:	
   880  016F                     l667:	
   881                           ;main.c: 94: while (*s)
   882                           
   883                           ;incstack = 0
   884                           ; Regs used in _USART_puts: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   885                           
   886  016F  0874               	movf	USART_puts@s,w
   887  0170  0086               	movwf	6
   888  0171  0875               	movf	USART_puts@s+1,w
   889  0172  0087               	movwf	7
   890  0173  0801               	movf	1,w
   891  0174  1903               	btfsc	3,2
   892  0175  2983               	goto	l669
   893                           
   894                           ;main.c: 95: {
   895                           ;main.c: 96: USART_putc(*s);
   896  0176  0874               	movf	USART_puts@s,w
   897  0177  0086               	movwf	6
   898  0178  0875               	movf	USART_puts@s+1,w
   899  0179  0087               	movwf	7
   900  017A  0801               	movf	1,w
   901  017B  3181  21B9  3181   	fcall	_USART_putc
   902                           
   903                           ;main.c: 97: s++;
   904  017E  3001               	movlw	1
   905  017F  07F4               	addwf	USART_puts@s,f
   906  0180  3000               	movlw	0
   907  0181  3DF5               	addwfc	USART_puts@s+1,f
   908  0182  296F               	goto	l667
   909  0183                     l669:	
   910                           
   911                           ;main.c: 98: }
   912                           ;main.c: 99: USART_putc(0x0D);
   913  0183  300D               	movlw	13
   914  0184  3181  21B9         	fcall	_USART_putc
   915  0186  0008               	return
   916  0187                     __end_of_USART_puts:	
   917                           
   918                           	psect	text2
   919  01B9                     __ptext2:	
   920 ;; *************** function _USART_putc *****************
   921 ;; Defined at:
   922 ;;		line 86 in file "main.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;  c               1    wreg     unsigned char 
   925 ;; Auto vars:     Size  Location     Type
   926 ;;  c               1    3[COMMON] unsigned char 
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		wreg
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   936 ;;      Params:         0       0       0       0       0       0       0
   937 ;;      Locals:         1       0       0       0       0       0       0
   938 ;;      Temps:          0       0       0       0       0       0       0
   939 ;;      Totals:         1       0       0       0       0       0       0
   940 ;;Total ram usage:        1 bytes
   941 ;; Hardware stack levels used:    1
   942 ;; Hardware stack levels required when called:    1
   943 ;; This function calls:
   944 ;;		Nothing
   945 ;; This function is called by:
   946 ;;		_USART_puts
   947 ;;		_send_sms
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           
   952                           ;psect for function _USART_putc
   953  01B9                     _USART_putc:	
   954                           
   955                           ;incstack = 0
   956                           ; Regs used in _USART_putc: [wreg]
   957                           ;USART_putc@c stored from wreg
   958  01B9  00F3               	movwf	USART_putc@c
   959  01BA                     l73:	
   960                           ;main.c: 88: while (!TXSTAbits.TRMT);
   961                           
   962  01BA  0023               	movlb	3	; select bank3
   963  01BB  1C9E               	btfss	30,1	;volatile
   964  01BC  29BA               	goto	l73
   965                           
   966                           ;main.c: 89: TXREG = c;
   967  01BD  0873               	movf	USART_putc@c,w
   968  01BE  009A               	movwf	26	;volatile
   969  01BF  0008               	return
   970  01C0                     __end_of_USART_putc:	
   971                           
   972                           	psect	text3
   973  0187                     __ptext3:	
   974 ;; *************** function _USART_init *****************
   975 ;; Defined at:
   976 ;;		line 68 in file "main.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;		None
   979 ;; Auto vars:     Size  Location     Type
   980 ;;		None
   981 ;; Return value:  Size  Location     Type
   982 ;;                  1    wreg      void 
   983 ;; Registers used:
   984 ;;		wreg
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   990 ;;      Params:         0       0       0       0       0       0       0
   991 ;;      Locals:         0       0       0       0       0       0       0
   992 ;;      Temps:          0       0       0       0       0       0       0
   993 ;;      Totals:         0       0       0       0       0       0       0
   994 ;;Total ram usage:        0 bytes
   995 ;; Hardware stack levels used:    1
   996 ;; Hardware stack levels required when called:    1
   997 ;; This function calls:
   998 ;;		Nothing
   999 ;; This function is called by:
  1000 ;;		_main
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004                           
  1005                           ;psect for function _USART_init
  1006  0187                     _USART_init:	
  1007                           
  1008                           ;main.c: 70: TXSTAbits.TXEN = 1;
  1009                           
  1010                           ;incstack = 0
  1011                           ; Regs used in _USART_init: [wreg]
  1012  0187  0023               	movlb	3	; select bank3
  1013  0188  169E               	bsf	30,5	;volatile
  1014                           
  1015                           ;main.c: 71: TXSTAbits.BRGH = 1;
  1016  0189  151E               	bsf	30,2	;volatile
  1017                           
  1018                           ;main.c: 72: RCSTAbits.CREN = 1;
  1019  018A  161D               	bsf	29,4	;volatile
  1020                           
  1021                           ;main.c: 76: ANSELBbits.ANSB5 = 0;
  1022  018B  128D               	bcf	13,5	;volatile
  1023                           
  1024                           ;main.c: 77: TRISCbits.TRISC7 = 1;
  1025  018C  0021               	movlb	1	; select bank1
  1026  018D  178E               	bsf	14,7	;volatile
  1027                           
  1028                           ;main.c: 78: TRISCbits.TRISC6 = 1;
  1029  018E  170E               	bsf	14,6	;volatile
  1030                           
  1031                           ;main.c: 80: SPBRG=119;
  1032  018F  3077               	movlw	119
  1033  0190  0023               	movlb	3	; select bank3
  1034  0191  009B               	movwf	27	;volatile
  1035                           
  1036                           ;main.c: 82: PIE1bits.RCIE = 1;
  1037  0192  0021               	movlb	1	; select bank1
  1038  0193  1691               	bsf	17,5	;volatile
  1039                           
  1040                           ;main.c: 83: RCSTAbits.SPEN = 1;
  1041  0194  0023               	movlb	3	; select bank3
  1042  0195  179D               	bsf	29,7	;volatile
  1043  0196  0008               	return
  1044  0197                     __end_of_USART_init:	
  1045                           
  1046                           	psect	intentry
  1047  0004                     __pintentry:	
  1048 ;; *************** function _ISR *****************
  1049 ;; Defined at:
  1050 ;;		line 150 in file "main.c"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;		None
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;		None
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  1    wreg      void 
  1057 ;; Registers used:
  1058 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1064 ;;      Params:         0       0       0       0       0       0       0
  1065 ;;      Locals:         0       0       0       0       0       0       0
  1066 ;;      Temps:          3       0       0       0       0       0       0
  1067 ;;      Totals:         3       0       0       0       0       0       0
  1068 ;;Total ram usage:        3 bytes
  1069 ;; Hardware stack levels used:    1
  1070 ;; This function calls:
  1071 ;;		Nothing
  1072 ;; This function is called by:
  1073 ;;		Interrupt level 1
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077  0004                     _ISR:	
  1078                           
  1079                           ;incstack = 0
  1080  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1081                           
  1082                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  1083  0005  3180               	pagesel	$
  1084  0006  0020               	movlb	0	; select bank0
  1085  0007  087F               	movf	127,w
  1086  0008  00F2               	movwf	??_ISR+2
  1087                           
  1088                           ;main.c: 152: if (PIR1bits.RCIF)
  1089  0009  1E91               	btfss	17,5	;volatile
  1090  000A  2825               	goto	i1l99
  1091                           
  1092                           ;main.c: 153: {
  1093                           ;main.c: 154: t = RCREG;
  1094  000B  0023               	movlb	3	; select bank3
  1095  000C  0819               	movf	25,w	;volatile
  1096  000D  00F0               	movwf	??_ISR
  1097  000E  0870               	movf	??_ISR,w
  1098  000F  00F8               	movwf	_t
  1099                           
  1100                           ;main.c: 157: rcbuf[rcindex] = t;
  1101  0010  0877               	movf	_rcindex,w	;volatile
  1102  0011  3E7C               	addlw	124
  1103  0012  00F0               	movwf	??_ISR
  1104  0013  01F1               	clrf	??_ISR+1
  1105  0014  3021               	movlw	33
  1106  0015  3DF1               	addwfc	??_ISR+1,f
  1107  0016  0870               	movf	??_ISR,w
  1108  0017  0086               	movwf	6
  1109  0018  0871               	movf	??_ISR+1,w
  1110  0019  0087               	movwf	7
  1111  001A  0878               	movf	_t,w
  1112  001B  0081               	movwf	1
  1113                           
  1114                           ;main.c: 158: rcindex++;
  1115  001C  3001               	movlw	1
  1116  001D  00F0               	movwf	??_ISR
  1117  001E  0870               	movf	??_ISR,w
  1118  001F  07F7               	addwf	_rcindex,f	;volatile
  1119                           
  1120                           ;main.c: 159: LATB=0xAA;
  1121  0020  30AA               	movlw	170
  1122  0021  0022               	movlb	2	; select bank2
  1123  0022  008D               	movwf	13	;volatile
  1124                           
  1125                           ;main.c: 166: PIR1bits.RCIF = 0;
  1126  0023  0020               	movlb	0	; select bank0
  1127  0024  1291               	bcf	17,5	;volatile
  1128  0025                     i1l99:	
  1129  0025  0872               	movf	??_ISR+2,w
  1130  0026  00FF               	movwf	127
  1131  0027  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1132  0028  0009               	retfie
  1133  0029                     __end_of_ISR:	
  1134  007E                     btemp	set	126	;btemp
  1135  007E                     int$flags	set	126
  1136  007E                     wtemp0	set	126


Data Sizes:
    Strings     10
    Constant    0
    Data        130
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80      0      80
    BANK1            80      2      60
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            60      0       0
    BANK5             0      0       0

Pointer List with Targets:

    USART_puts@s	PTR unsigned char  size(2) Largest target is 4096
		 -> rcbuf(BIGRAM[100]), receive(BANK1[18]), RAM(DATA[4096]), mode_text(BANK0[10]), 
		 -> mode_pin(BANK0[15]), AT(BANK0[3]), mesg(BANK0[9]), 


Critical Paths under _main in COMMON

    _main->_USART_puts
    _USART_puts->_USART_putc

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     438
                                              0 BANK1      2     2      0
                         _USART_init
                         _USART_puts
 ---------------------------------------------------------------------------------
 (1) _USART_puts                                           2     0      2     438
                                              4 COMMON     2     0      2
                         _USART_putc
 ---------------------------------------------------------------------------------
 (2) _USART_putc                                           1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USART_init
   _USART_puts
     _USART_putc

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1E0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0      97       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      2      3C       8       75.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               3C      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
DATA                 0      0      97      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon Sep 25 21:28:36 2017

             _USART_putc 01B9               _USART_puts 016F                        _t 0078  
            __CFG_CP$OFF 0000                       l73 01BA                       _AT 0063  
                     u87 007C                       u97 0090                       _ok 0066  
            __CFG_LVP$ON 0000                      l667 016F                      l669 0183  
                    u107 00A4                      u117 00B8                      u127 00D0  
                    u137 00E4             __CFG_CPD$OFF 0000                      _ISR 0004  
           __CFG_BORV$LO 0000                      wreg 0009             __CFG_IESO$ON 0000  
           __CFG_FOSC$HS 0000                     ?_ISR 0070                     STR_1 01AF  
                   _CMGR 0079                     _LATB 010D                     i1l99 0025  
           __CFG_WRT$OFF 0000            __CFG_FCMEN$ON 0000                     _main 006B  
                   _mesg 005A                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 0029            __CFG_MCLRE$ON 0000                    ??_ISR 0070  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _RCREG 0199  
                  _SPBRG 019B                    _TRISB 008D                    _TXREG 019A  
                  _param 00B5                    _rcbuf 217C                    status 0003  
                  wtemp0 007E              ?_USART_init 0070          __initialization 002B  
            ?_USART_putc 0070              ?_USART_puts 0074             __end_of_main 00EF  
                 ??_main 00DA           __CFG_PLLEN$OFF 0000                   _ANSELB 018D  
         __CFG_PWRTE$OFF 0000           __CFG_STVREN$ON 0000                   _noecho 003C  
           __pdataCOMMON 0079      __size_of_USART_init 0010      __size_of_USART_putc 0007  
    __size_of_USART_puts 0018  __end_of__initialization 0067           __pcstackCOMMON 0070  
           __pidataBANK0 00EF             __pidataBANK1 0135               __pbssBANK0 0066  
        __CFG_VCAPEN$OFF 0000               __pmaintext 006B               __pintentry 0004  
                _AT_flag 0076             ??_USART_init 0073             ??_USART_putc 0073  
           ??_USART_puts 0076                  __ptext1 016F                  __ptext2 01B9  
                __ptext3 0187             __size_of_ISR 0025                  _receive 00C8  
                _rcindex 0077                  clrloop0 01A4       __end_of_USART_init 0197  
     __end_of_USART_putc 01C0     end_of_initialization 0067       __end_of_USART_puts 0187  
                init_ram 0197                  initloop 0198                _RCSTAbits 019D  
             _terminator 007A                _TRISCbits 008E                _TXSTAbits 019E  
          __pidataCOMMON 01C0      start_initialization 002B              __end_of_ISR 0029  
            USART_putc@c 0073              USART_puts@s 0074              __pdataBANK0 0020  
            __pdataBANK1 00A0              __pbssBIGRAM 217C              __pbssCOMMON 0076  
              ___latbits 0002            __pcstackBANK1 00DA                _char_mode 0020  
              _mode_text 0050                _mobile_no 00A0                clear_ram0 01A3  
               _PIE1bits 0091                 _PIR1bits 0011               _ANSELBbits 018D  
          __size_of_main 0084                 _mode_pin 0041                 _receive1 002E  
               int$flags 007E               _INTCONbits 000B                 intlevel1 0000  
      __CFG_CLKOUTEN$OFF 0000            __pstringtext1 01AF            __pstringtext2 0000  
             _USART_init 0187  
